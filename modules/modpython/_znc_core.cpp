/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.7
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#include "znc/zncconfig.h"


#define SWIGPYTHON
#define SWIG_PYTHON_DIRECTOR_NO_VTABLE


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__)) 
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__)) 
# else
#   define SWIGUNUSED 
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif 
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif



/* Python.h has to appear first */
#include <Python.h>

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.
  
  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/* 
   Flags/methods for returning states.
   
   The SWIG conversion methods, as ConvertPtr, return an integer 
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).
   
   Use the following macros/flags to set or process the returning
   states.
   
   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }
    
   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {         
        if (<obj is ok>) {			       
          if (<need new object>) {		       
            *ptr = <ptr to new allocated object>; 
            return SWIG_NEWOBJ;		       
          } else {				       
            *ptr = <ptr to old object>;	       
            return SWIG_OLDOBJ;		       
          } 				       
        } else {				       
          return SWIG_BADOBJ;		       
        }					       
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call
 
      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0) 
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)  

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) { 
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) { 
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0; 
}
#else /* no cast-rank mode */
#  define SWIG_AddCast
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/* 
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCompare(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}


/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/* 
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/* 
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/* 
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;
  
  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }    
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}
  
/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start, 
                            swig_module_info *end, 
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      register size_t l = 0;
      register size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	register size_t i = (l + r) >> 1; 
	const char *iname = iter->types[i]->name;
	if (iname) {
	  register int compare = strcmp(name, iname);
	  if (compare == 0) {	    
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start, 
                     swig_module_info *end, 
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      register size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }
  
  /* neither found a match */
  return 0;
}

/* 
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  register const unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    register unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* 
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  register unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    register char d = *(c++);
    register unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else 
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else 
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/* 
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1 
#define  SWIG_IOError        	   -2 
#define  SWIG_RuntimeError   	   -3 
#define  SWIG_IndexError     	   -4 
#define  SWIG_TypeError      	   -5 
#define  SWIG_DivisionByZero 	   -6 
#define  SWIG_OverflowError  	   -7 
#define  SWIG_SyntaxError    	   -8 
#define  SWIG_ValueError     	   -9 
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12 
#define  SWIG_NullReferenceError   -13



/* Compatibility macros for Python 3 */
#if PY_VERSION_HEX >= 0x03000000

#define PyClass_Check(obj) PyObject_IsInstance(obj, (PyObject *)&PyType_Type)
#define PyInt_Check(x) PyLong_Check(x)
#define PyInt_AsLong(x) PyLong_AsLong(x)
#define PyInt_FromLong(x) PyLong_FromLong(x)
#define PyString_Check(name) PyBytes_Check(name)
#define PyString_FromString(x) PyUnicode_FromString(x)
#define PyString_Format(fmt, args)  PyUnicode_Format(fmt, args)
#define PyString_AsString(str) PyBytes_AsString(str)
#define PyString_Size(str) PyBytes_Size(str)	
#define PyString_InternFromString(key) PyUnicode_InternFromString(key)
#define Py_TPFLAGS_HAVE_CLASS Py_TPFLAGS_BASETYPE
#define PyString_AS_STRING(x) PyUnicode_AS_STRING(x)
#define _PyLong_FromSsize_t(x) PyLong_FromSsize_t(x)

#endif

#ifndef Py_TYPE
#  define Py_TYPE(op) ((op)->ob_type)
#endif

/* SWIG APIs for compatibility of both Python 2 & 3 */

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_FromFormat PyUnicode_FromFormat
#else
#  define SWIG_Python_str_FromFormat PyString_FromFormat
#endif


/* Warning: This function will allocate a new string in Python 3,
 * so please call SWIG_Python_str_DelForPy3(x) to free the space.
 */
SWIGINTERN char*
SWIG_Python_str_AsChar(PyObject *str)
{
#if PY_VERSION_HEX >= 0x03000000
  char *cstr;
  char *newstr;
  Py_ssize_t len;
  str = PyUnicode_AsUTF8String(str);
  PyBytes_AsStringAndSize(str, &cstr, &len);
  newstr = (char *) malloc(len+1);
  memcpy(newstr, cstr, len+1);
  Py_XDECREF(str);
  return newstr;
#else
  return PyString_AsString(str);
#endif
}

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_DelForPy3(x) free( (void*) (x) )
#else
#  define SWIG_Python_str_DelForPy3(x) 
#endif


SWIGINTERN PyObject*
SWIG_Python_str_FromChar(const char *c)
{
#if PY_VERSION_HEX >= 0x03000000
  return PyUnicode_FromString(c); 
#else
  return PyString_FromString(c);
#endif
}

/* Add PyOS_snprintf for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# if defined(_MSC_VER) || defined(__BORLANDC__) || defined(_WATCOM)
#  define PyOS_snprintf _snprintf
# else
#  define PyOS_snprintf snprintf
# endif
#endif

/* A crude PyString_FromFormat implementation for old Pythons */
#if PY_VERSION_HEX < 0x02020000

#ifndef SWIG_PYBUFFER_SIZE
# define SWIG_PYBUFFER_SIZE 1024
#endif

static PyObject *
PyString_FromFormat(const char *fmt, ...) {
  va_list ap;
  char buf[SWIG_PYBUFFER_SIZE * 2];
  int res;
  va_start(ap, fmt);
  res = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return (res < 0 || res >= (int)sizeof(buf)) ? 0 : PyString_FromString(buf);
}
#endif

/* Add PyObject_Del for old Pythons */
#if PY_VERSION_HEX < 0x01060000
# define PyObject_Del(op) PyMem_DEL((op))
#endif
#ifndef PyObject_DEL
# define PyObject_DEL PyObject_Del
#endif

/* A crude PyExc_StopIteration exception for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# ifndef PyExc_StopIteration
#  define PyExc_StopIteration PyExc_RuntimeError
# endif
# ifndef PyObject_GenericGetAttr
#  define PyObject_GenericGetAttr 0
# endif
#endif

/* Py_NotImplemented is defined in 2.1 and up. */
#if PY_VERSION_HEX < 0x02010000
# ifndef Py_NotImplemented
#  define Py_NotImplemented PyExc_RuntimeError
# endif
#endif

/* A crude PyString_AsStringAndSize implementation for old Pythons */
#if PY_VERSION_HEX < 0x02010000
# ifndef PyString_AsStringAndSize
#  define PyString_AsStringAndSize(obj, s, len) {*s = PyString_AsString(obj); *len = *s ? strlen(*s) : 0;}
# endif
#endif

/* PySequence_Size for old Pythons */
#if PY_VERSION_HEX < 0x02000000
# ifndef PySequence_Size
#  define PySequence_Size PySequence_Length
# endif
#endif

/* PyBool_FromLong for old Pythons */
#if PY_VERSION_HEX < 0x02030000
static
PyObject *PyBool_FromLong(long ok)
{
  PyObject *result = ok ? Py_True : Py_False;
  Py_INCREF(result);
  return result;
}
#endif

/* Py_ssize_t for old Pythons */
/* This code is as recommended by: */
/* http://www.python.org/dev/peps/pep-0353/#conversion-guidelines */
#if PY_VERSION_HEX < 0x02050000 && !defined(PY_SSIZE_T_MIN)
typedef int Py_ssize_t;
# define PY_SSIZE_T_MAX INT_MAX
# define PY_SSIZE_T_MIN INT_MIN
typedef inquiry lenfunc;
typedef intargfunc ssizeargfunc;
typedef intintargfunc ssizessizeargfunc;
typedef intobjargproc ssizeobjargproc;
typedef intintobjargproc ssizessizeobjargproc;
typedef getreadbufferproc readbufferproc;
typedef getwritebufferproc writebufferproc;
typedef getsegcountproc segcountproc;
typedef getcharbufferproc charbufferproc;
static long PyNumber_AsSsize_t (PyObject *x, void *SWIGUNUSEDPARM(exc))
{
  long result = 0;
  PyObject *i = PyNumber_Int(x);
  if (i) {
    result = PyInt_AsLong(i);
    Py_DECREF(i);
  }
  return result;
}
#endif

#if PY_VERSION_HEX < 0x02040000
#define Py_VISIT(op)				\
  do { 						\
    if (op) {					\
      int vret = visit((op), arg);		\
      if (vret)					\
        return vret;				\
    }						\
  } while (0)
#endif

#if PY_VERSION_HEX < 0x02030000
typedef struct {
  PyTypeObject type;
  PyNumberMethods as_number;
  PyMappingMethods as_mapping;
  PySequenceMethods as_sequence;
  PyBufferProcs as_buffer;
  PyObject *name, *slots;
} PyHeapTypeObject;
#endif

#if PY_VERSION_HEX < 0x02030000
typedef destructor freefunc;
#endif

#if ((PY_MAJOR_VERSION == 2 && PY_MINOR_VERSION > 6) || \
     (PY_MAJOR_VERSION == 3 && PY_MINOR_VERSION > 0) || \
     (PY_MAJOR_VERSION > 3))
# define SWIGPY_USE_CAPSULE
# define SWIGPY_CAPSULE_NAME ((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION ".type_pointer_capsule" SWIG_TYPE_TABLE_NAME)
#endif

#if PY_VERSION_HEX < 0x03020000
#define PyDescr_TYPE(x) (((PyDescrObject *)(x))->d_type)
#define PyDescr_NAME(x) (((PyDescrObject *)(x))->d_name)
#endif

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME PyObject*
SWIG_Python_ErrorType(int code) {
  PyObject* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = PyExc_MemoryError;
    break;
  case SWIG_IOError:
    type = PyExc_IOError;
    break;
  case SWIG_RuntimeError:
    type = PyExc_RuntimeError;
    break;
  case SWIG_IndexError:
    type = PyExc_IndexError;
    break;
  case SWIG_TypeError:
    type = PyExc_TypeError;
    break;
  case SWIG_DivisionByZero:
    type = PyExc_ZeroDivisionError;
    break;
  case SWIG_OverflowError:
    type = PyExc_OverflowError;
    break;
  case SWIG_SyntaxError:
    type = PyExc_SyntaxError;
    break;
  case SWIG_ValueError:
    type = PyExc_ValueError;
    break;
  case SWIG_SystemError:
    type = PyExc_SystemError;
    break;
  case SWIG_AttributeError:
    type = PyExc_AttributeError;
    break;
  default:
    type = PyExc_RuntimeError;
  }
  return type;
}


SWIGRUNTIME void
SWIG_Python_AddErrorMsg(const char* mesg)
{
  PyObject *type = 0;
  PyObject *value = 0;
  PyObject *traceback = 0;

  if (PyErr_Occurred()) PyErr_Fetch(&type, &value, &traceback);
  if (value) {
    char *tmp;
    PyObject *old_str = PyObject_Str(value);
    PyErr_Clear();
    Py_XINCREF(type);

    PyErr_Format(type, "%s %s", tmp = SWIG_Python_str_AsChar(old_str), mesg);
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(old_str);
    Py_DECREF(value);
  } else {
    PyErr_SetString(PyExc_RuntimeError, mesg);
  }
}

#if defined(SWIG_PYTHON_NO_THREADS)
#  if defined(SWIG_PYTHON_THREADS)
#    undef SWIG_PYTHON_THREADS
#  endif
#endif
#if defined(SWIG_PYTHON_THREADS) /* Threading support is enabled */
#  if !defined(SWIG_PYTHON_USE_GIL) && !defined(SWIG_PYTHON_NO_USE_GIL)
#    if (PY_VERSION_HEX >= 0x02030000) /* For 2.3 or later, use the PyGILState calls */
#      define SWIG_PYTHON_USE_GIL
#    endif
#  endif
#  if defined(SWIG_PYTHON_USE_GIL) /* Use PyGILState threads calls */
#    ifndef SWIG_PYTHON_INITIALIZE_THREADS
#     define SWIG_PYTHON_INITIALIZE_THREADS  PyEval_InitThreads() 
#    endif
#    ifdef __cplusplus /* C++ code */
       class SWIG_Python_Thread_Block {
         bool status;
         PyGILState_STATE state;
       public:
         void end() { if (status) { PyGILState_Release(state); status = false;} }
         SWIG_Python_Thread_Block() : status(true), state(PyGILState_Ensure()) {}
         ~SWIG_Python_Thread_Block() { end(); }
       };
       class SWIG_Python_Thread_Allow {
         bool status;
         PyThreadState *save;
       public:
         void end() { if (status) { PyEval_RestoreThread(save); status = false; }}
         SWIG_Python_Thread_Allow() : status(true), save(PyEval_SaveThread()) {}
         ~SWIG_Python_Thread_Allow() { end(); }
       };
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   SWIG_Python_Thread_Block _swig_thread_block
#      define SWIG_PYTHON_THREAD_END_BLOCK     _swig_thread_block.end()
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   SWIG_Python_Thread_Allow _swig_thread_allow
#      define SWIG_PYTHON_THREAD_END_ALLOW     _swig_thread_allow.end()
#    else /* C code */
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   PyGILState_STATE _swig_thread_block = PyGILState_Ensure()
#      define SWIG_PYTHON_THREAD_END_BLOCK     PyGILState_Release(_swig_thread_block)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   PyThreadState *_swig_thread_allow = PyEval_SaveThread()
#      define SWIG_PYTHON_THREAD_END_ALLOW     PyEval_RestoreThread(_swig_thread_allow)
#    endif
#  else /* Old thread way, not implemented, user must provide it */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      define SWIG_PYTHON_INITIALIZE_THREADS
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_BLOCK)
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_BLOCK)
#      define SWIG_PYTHON_THREAD_END_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_ALLOW)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_ALLOW)
#      define SWIG_PYTHON_THREAD_END_ALLOW
#    endif
#  endif
#else /* No thread support */
#  define SWIG_PYTHON_INITIALIZE_THREADS
#  define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#  define SWIG_PYTHON_THREAD_END_BLOCK
#  define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#  define SWIG_PYTHON_THREAD_END_ALLOW
#endif

/* -----------------------------------------------------------------------------
 * Python API portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
  int type;
  char *name;
  long lvalue;
  double dvalue;
  void   *pvalue;
  swig_type_info **ptype;
} swig_const_info;


/* -----------------------------------------------------------------------------
 * Wrapper of PyInstanceMethod_New() used in Python 3
 * It is exported to the generated module, used for -fastproxy
 * ----------------------------------------------------------------------------- */
#if PY_VERSION_HEX >= 0x03000000
SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func)
{
  return PyInstanceMethod_New(func);
}
#else
SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(func))
{
  return NULL;
}
#endif

#ifdef __cplusplus
}
#endif


/* -----------------------------------------------------------------------------
 * pyrun.swg
 *
 * This file contains the runtime support for Python modules
 * and includes code for managing global variables and pointer
 * type checking.
 *
 * ----------------------------------------------------------------------------- */

/* Common SWIG API */

/* for raw pointers */
#define SWIG_Python_ConvertPtr(obj, pptr, type, flags)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, 0)
#define SWIG_ConvertPtr(obj, pptr, type, flags)         SWIG_Python_ConvertPtr(obj, pptr, type, flags)
#define SWIG_ConvertPtrAndOwn(obj,pptr,type,flags,own)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, own)

#ifdef SWIGPYTHON_BUILTIN
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(self, ptr, type, flags)
#else
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(NULL, ptr, type, flags)
#endif

#define SWIG_InternalNewPointerObj(ptr, type, flags)	SWIG_Python_NewPointerObj(NULL, ptr, type, flags)

#define SWIG_CheckImplicit(ty)                          SWIG_Python_CheckImplicit(ty) 
#define SWIG_AcquirePtr(ptr, src)                       SWIG_Python_AcquirePtr(ptr, src)
#define swig_owntype                                    int

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Python_ConvertFunctionPtr(obj, pptr, type)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Python_NewPointerObj(NULL, ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Python_GetModule()
#define SWIG_SetModule(clientdata, pointer)             SWIG_Python_SetModule(pointer)
#define SWIG_NewClientData(obj)                         SwigPyClientData_New(obj)

#define SWIG_SetErrorObj                                SWIG_Python_SetErrorObj                            
#define SWIG_SetErrorMsg                        	SWIG_Python_SetErrorMsg				   
#define SWIG_ErrorType(code)                    	SWIG_Python_ErrorType(code)                        
#define SWIG_Error(code, msg)            		SWIG_Python_SetErrorMsg(SWIG_ErrorType(code), msg) 
#define SWIG_fail                        		goto fail					   


/* Runtime API implementation */

/* Error manipulation */

SWIGINTERN void 
SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
  PyErr_SetObject(errtype, obj);
  Py_DECREF(obj);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

SWIGINTERN void 
SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  PyErr_SetString(errtype, msg);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

#define SWIG_Python_Raise(obj, type, desc)  SWIG_Python_SetErrorObj(SWIG_Python_ExceptionType(desc), obj)

/* Set a constant value */

#if defined(SWIGPYTHON_BUILTIN)

SWIGINTERN void
SwigPyBuiltin_AddPublicSymbol(PyObject *seq, const char *key) {
  PyObject *s = PyString_InternFromString(key);
  PyList_Append(seq, s);
  Py_DECREF(s);
}

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, PyObject *public_interface, const char *name, PyObject *obj) {   
#if PY_VERSION_HEX < 0x02030000
  PyDict_SetItemString(d, (char *)name, obj);
#else
  PyDict_SetItemString(d, name, obj);
#endif
  Py_DECREF(obj);
  if (public_interface)
    SwigPyBuiltin_AddPublicSymbol(public_interface, name);
}

#else

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   
#if PY_VERSION_HEX < 0x02030000
  PyDict_SetItemString(d, (char *)name, obj);
#else
  PyDict_SetItemString(d, name, obj);
#endif
  Py_DECREF(obj);                            
}

#endif

/* Append a value to the result obj */

SWIGINTERN PyObject*
SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {
#if !defined(SWIG_PYTHON_OUTPUT_TUPLE)
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyList_Check(result)) {
      PyObject *o2 = result;
      result = PyList_New(1);
      PyList_SetItem(result, 0, o2);
    }
    PyList_Append(result,obj);
    Py_DECREF(obj);
  }
  return result;
#else
  PyObject*   o2;
  PyObject*   o3;
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyTuple_Check(result)) {
      o2 = result;
      result = PyTuple_New(1);
      PyTuple_SET_ITEM(result, 0, o2);
    }
    o3 = PyTuple_New(1);
    PyTuple_SET_ITEM(o3, 0, obj);
    o2 = result;
    result = PySequence_Concat(o2, o3);
    Py_DECREF(o2);
    Py_DECREF(o3);
  }
  return result;
#endif
}

/* Unpack the argument tuple */

SWIGINTERN int
SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)
{
  if (!args) {
    if (!min && !max) {
      return 1;
    } else {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got none", 
		   name, (min == max ? "" : "at least "), (int)min);
      return 0;
    }
  }  
  if (!PyTuple_Check(args)) {
    if (min <= 1 && max >= 1) {
      register int i;
      objs[0] = args;
      for (i = 1; i < max; ++i) {
	objs[i] = 0;
      }
      return 2;
    }
    PyErr_SetString(PyExc_SystemError, "UnpackTuple() argument list is not a tuple");
    return 0;
  } else {
    register Py_ssize_t l = PyTuple_GET_SIZE(args);
    if (l < min) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at least "), (int)min, (int)l);
      return 0;
    } else if (l > max) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at most "), (int)max, (int)l);
      return 0;
    } else {
      register int i;
      for (i = 0; i < l; ++i) {
	objs[i] = PyTuple_GET_ITEM(args, i);
      }
      for (; l < max; ++l) {
	objs[l] = 0;
      }
      return i + 1;
    }    
  }
}

/* A functor is a function object with one single object argument */
#if PY_VERSION_HEX >= 0x02020000
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunctionObjArgs(functor, obj, NULL);
#else
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunction(functor, "O", obj);
#endif

/*
  Helper for static pointer initialization for both C and C++ code, for example
  static PyObject *SWIG_STATIC_POINTER(MyVar) = NewSomething(...);
*/
#ifdef __cplusplus
#define SWIG_STATIC_POINTER(var)  var
#else
#define SWIG_STATIC_POINTER(var)  var = 0; if (!var) var
#endif

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */

/* Flags for new pointer objects */
#define SWIG_POINTER_NOSHADOW       (SWIG_POINTER_OWN      << 1)
#define SWIG_POINTER_NEW            (SWIG_POINTER_NOSHADOW | SWIG_POINTER_OWN)

#define SWIG_POINTER_IMPLICIT_CONV  (SWIG_POINTER_DISOWN   << 1)

#define SWIG_BUILTIN_TP_INIT	    (SWIG_POINTER_OWN << 2)
#define SWIG_BUILTIN_INIT	    (SWIG_BUILTIN_TP_INIT | SWIG_POINTER_OWN)

#ifdef __cplusplus
extern "C" {
#endif

/*  How to access Py_None */
#if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#  ifndef SWIG_PYTHON_NO_BUILD_NONE
#    ifndef SWIG_PYTHON_BUILD_NONE
#      define SWIG_PYTHON_BUILD_NONE
#    endif
#  endif
#endif

#ifdef SWIG_PYTHON_BUILD_NONE
#  ifdef Py_None
#   undef Py_None
#   define Py_None SWIG_Py_None()
#  endif
SWIGRUNTIMEINLINE PyObject * 
_SWIG_Py_None(void)
{
  PyObject *none = Py_BuildValue((char*)"");
  Py_DECREF(none);
  return none;
}
SWIGRUNTIME PyObject * 
SWIG_Py_None(void)
{
  static PyObject *SWIG_STATIC_POINTER(none) = _SWIG_Py_None();
  return none;
}
#endif

/* The python void return value */

SWIGRUNTIMEINLINE PyObject * 
SWIG_Py_Void(void)
{
  PyObject *none = Py_None;
  Py_INCREF(none);
  return none;
}

/* SwigPyClientData */

typedef struct {
  PyObject *klass;
  PyObject *newraw;
  PyObject *newargs;
  PyObject *destroy;
  int delargs;
  int implicitconv;
  PyTypeObject *pytype;
} SwigPyClientData;

SWIGRUNTIMEINLINE int 
SWIG_Python_CheckImplicit(swig_type_info *ty)
{
  SwigPyClientData *data = (SwigPyClientData *)ty->clientdata;
  return data ? data->implicitconv : 0;
}

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_ExceptionType(swig_type_info *desc) {
  SwigPyClientData *data = desc ? (SwigPyClientData *) desc->clientdata : 0;
  PyObject *klass = data ? data->klass : 0;
  return (klass ? klass : PyExc_RuntimeError);
}


SWIGRUNTIME SwigPyClientData * 
SwigPyClientData_New(PyObject* obj)
{
  if (!obj) {
    return 0;
  } else {
    SwigPyClientData *data = (SwigPyClientData *)malloc(sizeof(SwigPyClientData));
    /* the klass element */
    data->klass = obj;
    Py_INCREF(data->klass);
    /* the newraw method and newargs arguments used to create a new raw instance */
    if (PyClass_Check(obj)) {
      data->newraw = 0;
      data->newargs = obj;
      Py_INCREF(obj);
    } else {
#if (PY_VERSION_HEX < 0x02020000)
      data->newraw = 0;
#else
      data->newraw = PyObject_GetAttrString(data->klass, (char *)"__new__");
#endif
      if (data->newraw) {
	Py_INCREF(data->newraw);
	data->newargs = PyTuple_New(1);
	PyTuple_SetItem(data->newargs, 0, obj);
      } else {
	data->newargs = obj;
      }
      Py_INCREF(data->newargs);
    }
    /* the destroy method, aka as the C++ delete method */
    data->destroy = PyObject_GetAttrString(data->klass, (char *)"__swig_destroy__");
    if (PyErr_Occurred()) {
      PyErr_Clear();
      data->destroy = 0;
    }
    if (data->destroy) {
      int flags;
      Py_INCREF(data->destroy);
      flags = PyCFunction_GET_FLAGS(data->destroy);
#ifdef METH_O
      data->delargs = !(flags & (METH_O));
#else
      data->delargs = 0;
#endif
    } else {
      data->delargs = 0;
    }
    data->implicitconv = 0;
    data->pytype = 0;
    return data;
  }
}

SWIGRUNTIME void 
SwigPyClientData_Del(SwigPyClientData *data) {
  Py_XDECREF(data->newraw);
  Py_XDECREF(data->newargs);
  Py_XDECREF(data->destroy);
}

/* =============== SwigPyObject =====================*/

typedef struct {
  PyObject_HEAD
  void *ptr;
  swig_type_info *ty;
  int own;
  PyObject *next;
#ifdef SWIGPYTHON_BUILTIN
  PyObject *dict;
#endif
} SwigPyObject;

SWIGRUNTIME PyObject *
SwigPyObject_long(SwigPyObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
SwigPyObject_format(const char* fmt, SwigPyObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args) {
    if (PyTuple_SetItem(args, 0, SwigPyObject_long(v)) == 0) {
      PyObject *ofmt = SWIG_Python_str_FromChar(fmt);
      if (ofmt) {
#if PY_VERSION_HEX >= 0x03000000
	res = PyUnicode_Format(ofmt,args);
#else
	res = PyString_Format(ofmt,args);
#endif
	Py_DECREF(ofmt);
      }
      Py_DECREF(args);
    }
  }
  return res;
}

SWIGRUNTIME PyObject *
SwigPyObject_oct(SwigPyObject *v)
{
  return SwigPyObject_format("%o",v);
}

SWIGRUNTIME PyObject *
SwigPyObject_hex(SwigPyObject *v)
{
  return SwigPyObject_format("%x",v);
}

SWIGRUNTIME PyObject *
#ifdef METH_NOARGS
SwigPyObject_repr(SwigPyObject *v)
#else
SwigPyObject_repr(SwigPyObject *v, PyObject *args)
#endif
{
  const char *name = SWIG_TypePrettyName(v->ty);
  PyObject *repr = SWIG_Python_str_FromFormat("<Swig Object of type '%s' at %p>", (name ? name : "unknown"), (void *)v);
  if (v->next) {
# ifdef METH_NOARGS
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next);
# else
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next, args);
# endif
# if PY_VERSION_HEX >= 0x03000000
    PyObject *joined = PyUnicode_Concat(repr, nrep);
    Py_DecRef(repr);
    Py_DecRef(nrep);
    repr = joined;
# else
    PyString_ConcatAndDel(&repr,nrep);
# endif
  }
  return repr;  
}

SWIGRUNTIME int
SwigPyObject_print(SwigPyObject *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
  char *str;
#ifdef METH_NOARGS
  PyObject *repr = SwigPyObject_repr(v);
#else
  PyObject *repr = SwigPyObject_repr(v, NULL);
#endif
  if (repr) {
    str = SWIG_Python_str_AsChar(repr); 
    fputs(str, fp);
    SWIG_Python_str_DelForPy3(str);
    Py_DECREF(repr);
    return 0; 
  } else {
    return 1; 
  }
}

SWIGRUNTIME PyObject *
SwigPyObject_str(SwigPyObject *v)
{
  char result[SWIG_BUFFER_SIZE];
  return SWIG_PackVoidPtr(result, v->ptr, v->ty->name, sizeof(result)) ?
    SWIG_Python_str_FromChar(result) : 0;
}

SWIGRUNTIME int
SwigPyObject_compare(SwigPyObject *v, SwigPyObject *w)
{
  void *i = v->ptr;
  void *j = w->ptr;
  return (i < j) ? -1 : ((i > j) ? 1 : 0);
}

/* Added for Python 3.x, would it also be useful for Python 2.x? */
SWIGRUNTIME PyObject*
SwigPyObject_richcompare(SwigPyObject *v, SwigPyObject *w, int op)
{
  PyObject* res;
  if( op != Py_EQ && op != Py_NE ) {
    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
  }
  res = PyBool_FromLong( (SwigPyObject_compare(v, w)==0) == (op == Py_EQ) ? 1 : 0);
  return res;  
}


SWIGRUNTIME PyTypeObject* SwigPyObject_TypeOnce(void);

#ifdef SWIGPYTHON_BUILTIN
static swig_type_info *SwigPyObject_stype = 0;
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
    SwigPyClientData *cd;
    assert(SwigPyObject_stype);
    cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
    assert(cd);
    assert(cd->pytype);
    return cd->pytype;
}
#else
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyObject_TypeOnce();
  return type;
}
#endif

SWIGRUNTIMEINLINE int
SwigPyObject_Check(PyObject *op) {
#ifdef SWIGPYTHON_BUILTIN
  PyTypeObject *target_tp = SwigPyObject_type();
  if (PyType_IsSubtype(op->ob_type, target_tp))
    return 1;
  return (strcmp(op->ob_type->tp_name, "SwigPyObject") == 0);
#else
  return (Py_TYPE(op) == SwigPyObject_type())
    || (strcmp(Py_TYPE(op)->tp_name,"SwigPyObject") == 0);
#endif
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own);

SWIGRUNTIME void
SwigPyObject_dealloc(PyObject *v)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  PyObject *next = sobj->next;
  if (sobj->own == SWIG_POINTER_OWN) {
    swig_type_info *ty = sobj->ty;
    SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
    PyObject *destroy = data ? data->destroy : 0;
    if (destroy) {
      /* destroy is always a VARARGS method */
      PyObject *res;
      if (data->delargs) {
	/* we need to create a temporary object to carry the destroy operation */
	PyObject *tmp = SwigPyObject_New(sobj->ptr, ty, 0);
	res = SWIG_Python_CallFunctor(destroy, tmp);
	Py_DECREF(tmp);
      } else {
	PyCFunction meth = PyCFunction_GET_FUNCTION(destroy);
	PyObject *mself = PyCFunction_GET_SELF(destroy);
	res = ((*meth)(mself, v));
      }
      Py_XDECREF(res);
    } 
#if !defined(SWIG_PYTHON_SILENT_MEMLEAK)
    else {
      const char *name = SWIG_TypePrettyName(ty);
      printf("swig/python detected a memory leak of type '%s', no destructor found.\n", (name ? name : "unknown"));
    }
#endif
  } 
  Py_XDECREF(next);
  PyObject_DEL(v);
}

SWIGRUNTIME PyObject* 
SwigPyObject_append(PyObject* v, PyObject* next)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
#ifndef METH_O
  PyObject *tmp = 0;
  if (!PyArg_ParseTuple(next,(char *)"O:append", &tmp)) return NULL;
  next = tmp;
#endif
  if (!SwigPyObject_Check(next)) {
    return NULL;
  }
  sobj->next = next;
  Py_INCREF(next);
  return SWIG_Py_Void();
}

SWIGRUNTIME PyObject* 
#ifdef METH_NOARGS
SwigPyObject_next(PyObject* v)
#else
SwigPyObject_next(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  if (sobj->next) {    
    Py_INCREF(sobj->next);
    return sobj->next;
  } else {
    return SWIG_Py_Void();
  }
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
SwigPyObject_disown(PyObject *v)
#else
SwigPyObject_disown(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = 0;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
SwigPyObject_acquire(PyObject *v)
#else
SwigPyObject_acquire(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = SWIG_POINTER_OWN;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
SwigPyObject_own(PyObject *v, PyObject *args)
{
  PyObject *val = 0;
#if (PY_VERSION_HEX < 0x02020000)
  if (!PyArg_ParseTuple(args,(char *)"|O:own",&val))
#elif (PY_VERSION_HEX < 0x02050000)
  if (!PyArg_UnpackTuple(args, (char *)"own", 0, 1, &val)) 
#else
  if (!PyArg_UnpackTuple(args, "own", 0, 1, &val)) 
#endif
    {
      return NULL;
    } 
  else
    {
      SwigPyObject *sobj = (SwigPyObject *)v;
      PyObject *obj = PyBool_FromLong(sobj->own);
      if (val) {
#ifdef METH_NOARGS
	if (PyObject_IsTrue(val)) {
	  SwigPyObject_acquire(v);
	} else {
	  SwigPyObject_disown(v);
	}
#else
	if (PyObject_IsTrue(val)) {
	  SwigPyObject_acquire(v,args);
	} else {
	  SwigPyObject_disown(v,args);
	}
#endif
      } 
      return obj;
    }
}

#ifdef METH_O
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)SwigPyObject_disown,  METH_NOARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)SwigPyObject_acquire, METH_NOARGS,  (char *)"aquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)SwigPyObject_own,     METH_VARARGS, (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)SwigPyObject_append,  METH_O,       (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)SwigPyObject_next,    METH_NOARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)SwigPyObject_repr,    METH_NOARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#else
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)SwigPyObject_disown,  METH_VARARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)SwigPyObject_acquire, METH_VARARGS,  (char *)"aquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)SwigPyObject_own,     METH_VARARGS,  (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)SwigPyObject_append,  METH_VARARGS,  (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)SwigPyObject_next,    METH_VARARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)SwigPyObject_repr,   METH_VARARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#endif

#if PY_VERSION_HEX < 0x02020000
SWIGINTERN PyObject *
SwigPyObject_getattr(SwigPyObject *sobj,char *name)
{
  return Py_FindMethod(swigobject_methods, (PyObject *)sobj, name);
}
#endif

SWIGRUNTIME PyTypeObject*
SwigPyObject_TypeOnce(void) {
  static char swigobject_doc[] = "Swig object carries a C/C++ instance pointer";

  static PyNumberMethods SwigPyObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    /* nb_divide removed in Python 3 */
#if PY_VERSION_HEX < 0x03000000
    (binaryfunc)0, /*nb_divide*/
#endif
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
#if PY_VERSION_HEX < 0x03000000
    0,   /*nb_coerce*/
#endif
    (unaryfunc)SwigPyObject_long, /*nb_int*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_long, /*nb_long*/
#else
    0, /*nb_reserved*/
#endif
    (unaryfunc)0,                 /*nb_float*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_oct,  /*nb_oct*/
    (unaryfunc)SwigPyObject_hex,  /*nb_hex*/
#endif
#if PY_VERSION_HEX >= 0x03000000 /* 3.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index, nb_inplace_divide removed */
#elif PY_VERSION_HEX >= 0x02050000 /* 2.5.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index */
#elif PY_VERSION_HEX >= 0x02020000 /* 2.2.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_true_divide */
#elif PY_VERSION_HEX >= 0x02000000 /* 2.0.0 */
    0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_or */
#endif
  };

  static PyTypeObject swigpyobject_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
      /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX >= 0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      (char *)"SwigPyObject",               /* tp_name */
      sizeof(SwigPyObject),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyObject_dealloc,     /* tp_dealloc */
      (printfunc)SwigPyObject_print,        /* tp_print */
#if PY_VERSION_HEX < 0x02020000
      (getattrfunc)SwigPyObject_getattr,    /* tp_getattr */
#else
      (getattrfunc)0,                       /* tp_getattr */
#endif
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX >= 0x03000000
    0, /* tp_reserved in 3.0.1, tp_compare in 3.0.0 but not used */
#else
      (cmpfunc)SwigPyObject_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyObject_repr,          /* tp_repr */
      &SwigPyObject_as_number,              /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      (reprfunc)SwigPyObject_str,           /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigobject_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      (richcmpfunc)SwigPyObject_richcompare,/* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      swigobject_methods,                   /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
      0,                                    /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
      0,                                    /* tp_version */
#endif
#ifdef COUNT_ALLOCS
      0,0,0,0                               /* tp_alloc -> tp_next */
#endif
    };
    swigpyobject_type = tmp;
    type_init = 1;
#if PY_VERSION_HEX < 0x02020000
    swigpyobject_type.ob_type = &PyType_Type;
#else
    if (PyType_Ready(&swigpyobject_type) < 0)
      return NULL;
#endif
  }
  return &swigpyobject_type;
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own)
{
  SwigPyObject *sobj = PyObject_NEW(SwigPyObject, SwigPyObject_type());
  if (sobj) {
    sobj->ptr  = ptr;
    sobj->ty   = ty;
    sobj->own  = own;
    sobj->next = 0;
  }
  return (PyObject *)sobj;
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  swig_type_info *ty;
  size_t size;
} SwigPyPacked;

SWIGRUNTIME int
SwigPyPacked_print(SwigPyPacked *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
  char result[SWIG_BUFFER_SIZE];
  fputs("<Swig Packed ", fp); 
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    fputs("at ", fp); 
    fputs(result, fp); 
  }
  fputs(v->ty->name,fp); 
  fputs(">", fp);
  return 0; 
}
  
SWIGRUNTIME PyObject *
SwigPyPacked_repr(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return SWIG_Python_str_FromFormat("<Swig Packed at %s%s>", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromFormat("<Swig Packed %s>", v->ty->name);
  }  
}

SWIGRUNTIME PyObject *
SwigPyPacked_str(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return SWIG_Python_str_FromFormat("%s%s", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromChar(v->ty->name);
  }  
}

SWIGRUNTIME int
SwigPyPacked_compare(SwigPyPacked *v, SwigPyPacked *w)
{
  size_t i = v->size;
  size_t j = w->size;
  int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
  return s ? s : strncmp((char *)v->pack, (char *)w->pack, 2*v->size);
}

SWIGRUNTIME PyTypeObject* SwigPyPacked_TypeOnce(void);

SWIGRUNTIME PyTypeObject*
SwigPyPacked_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyPacked_TypeOnce();
  return type;
}

SWIGRUNTIMEINLINE int
SwigPyPacked_Check(PyObject *op) {
  return ((op)->ob_type == SwigPyPacked_TypeOnce()) 
    || (strcmp((op)->ob_type->tp_name,"SwigPyPacked") == 0);
}

SWIGRUNTIME void
SwigPyPacked_dealloc(PyObject *v)
{
  if (SwigPyPacked_Check(v)) {
    SwigPyPacked *sobj = (SwigPyPacked *) v;
    free(sobj->pack);
  }
  PyObject_DEL(v);
}

SWIGRUNTIME PyTypeObject*
SwigPyPacked_TypeOnce(void) {
  static char swigpacked_doc[] = "Swig object carries a C/C++ instance pointer";
  static PyTypeObject swigpypacked_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
      /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX>=0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      (char *)"SwigPyPacked",               /* tp_name */
      sizeof(SwigPyPacked),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyPacked_dealloc,     /* tp_dealloc */
      (printfunc)SwigPyPacked_print,        /* tp_print */
      (getattrfunc)0,                       /* tp_getattr */
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX>=0x03000000
      0, /* tp_reserved in 3.0.1 */
#else
      (cmpfunc)SwigPyPacked_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyPacked_repr,          /* tp_repr */
      0,                                    /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      (reprfunc)SwigPyPacked_str,           /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigpacked_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      0,                                    /* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      0,                                    /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
      0,                                    /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
      0,                                    /* tp_version */
#endif
#ifdef COUNT_ALLOCS
      0,0,0,0                               /* tp_alloc -> tp_next */
#endif
    };
    swigpypacked_type = tmp;
    type_init = 1;
#if PY_VERSION_HEX < 0x02020000
    swigpypacked_type.ob_type = &PyType_Type;
#else
    if (PyType_Ready(&swigpypacked_type) < 0)
      return NULL;
#endif
  }
  return &swigpypacked_type;
}

SWIGRUNTIME PyObject *
SwigPyPacked_New(void *ptr, size_t size, swig_type_info *ty)
{
  SwigPyPacked *sobj = PyObject_NEW(SwigPyPacked, SwigPyPacked_type());
  if (sobj) {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      sobj->pack = pack;
      sobj->ty   = ty;
      sobj->size = size;
    } else {
      PyObject_DEL((PyObject *) sobj);
      sobj = 0;
    }
  }
  return (PyObject *) sobj;
}

SWIGRUNTIME swig_type_info *
SwigPyPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  if (SwigPyPacked_Check(obj)) {
    SwigPyPacked *sobj = (SwigPyPacked *)obj;
    if (sobj->size != size) return 0;
    memcpy(ptr, sobj->pack, size);
    return sobj->ty;
  } else {
    return 0;
  }
}

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIMEINLINE PyObject *
_SWIG_This(void)
{
    return SWIG_Python_str_FromChar("this");
}

static PyObject *swig_this = NULL;

SWIGRUNTIME PyObject *
SWIG_This(void)
{
  if (swig_this == NULL)
    swig_this = _SWIG_This();
  return swig_this;
}

/* #define SWIG_PYTHON_SLOW_GETSET_THIS */

/* TODO: I don't know how to implement the fast getset in Python 3 right now */
#if PY_VERSION_HEX>=0x03000000
#define SWIG_PYTHON_SLOW_GETSET_THIS 
#endif

SWIGRUNTIME SwigPyObject *
SWIG_Python_GetSwigThis(PyObject *pyobj) 
{
  PyObject *obj;

  if (SwigPyObject_Check(pyobj))
    return (SwigPyObject *) pyobj;

#ifdef SWIGPYTHON_BUILTIN
  (void)obj;
# ifdef PyWeakref_CheckProxy
  if (PyWeakref_CheckProxy(pyobj)) {
    pyobj = PyWeakref_GET_OBJECT(pyobj);
    if (pyobj && SwigPyObject_Check(pyobj))
      return (SwigPyObject*) pyobj;
  }
# endif
  return NULL;
#else

  obj = 0;

#if (!defined(SWIG_PYTHON_SLOW_GETSET_THIS) && (PY_VERSION_HEX >= 0x02030000))
  if (PyInstance_Check(pyobj)) {
    obj = _PyInstance_Lookup(pyobj, SWIG_This());      
  } else {
    PyObject **dictptr = _PyObject_GetDictPtr(pyobj);
    if (dictptr != NULL) {
      PyObject *dict = *dictptr;
      obj = dict ? PyDict_GetItem(dict, SWIG_This()) : 0;
    } else {
#ifdef PyWeakref_CheckProxy
      if (PyWeakref_CheckProxy(pyobj)) {
	PyObject *wobj = PyWeakref_GET_OBJECT(pyobj);
	return wobj ? SWIG_Python_GetSwigThis(wobj) : 0;
      }
#endif
      obj = PyObject_GetAttr(pyobj,SWIG_This());
      if (obj) {
	Py_DECREF(obj);
      } else {
	if (PyErr_Occurred()) PyErr_Clear();
	return 0;
      }
    }
  }
#else
  obj = PyObject_GetAttr(pyobj,SWIG_This());
  if (obj) {
    Py_DECREF(obj);
  } else {
    if (PyErr_Occurred()) PyErr_Clear();
    return 0;
  }
#endif
  if (obj && !SwigPyObject_Check(obj)) {
    /* a PyObject is called 'this', try to get the 'real this'
       SwigPyObject from it */ 
    return SWIG_Python_GetSwigThis(obj);
  }
  return (SwigPyObject *)obj;
#endif
}

/* Acquire a pointer value */

SWIGRUNTIME int
SWIG_Python_AcquirePtr(PyObject *obj, int own) {
  if (own == SWIG_POINTER_OWN) {
    SwigPyObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (sobj) {
      int oldown = sobj->own;
      sobj->own = own;
      return oldown;
    }
  }
  return 0;
}

/* Convert a pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {
  int res;
  SwigPyObject *sobj;

  if (!obj)
    return SWIG_ERROR;
  if (obj == Py_None) {
    if (ptr)
      *ptr = 0;
    return SWIG_OK;
  }

  res = SWIG_ERROR;

  sobj = SWIG_Python_GetSwigThis(obj);
  if (own)
    *own = 0;
  while (sobj) {
    void *vptr = sobj->ptr;
    if (ty) {
      swig_type_info *to = sobj->ty;
      if (to == ty) {
        /* no type cast needed */
        if (ptr) *ptr = vptr;
        break;
      } else {
        swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
        if (!tc) {
          sobj = (SwigPyObject *)sobj->next;
        } else {
          if (ptr) {
            int newmemory = 0;
            *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
            if (newmemory == SWIG_CAST_NEW_MEMORY) {
              assert(own); /* badly formed typemap which will lead to a memory leak - it must set and use own to delete *ptr */
              if (own)
                *own = *own | SWIG_CAST_NEW_MEMORY;
            }
          }
          break;
        }
      }
    } else {
      if (ptr) *ptr = vptr;
      break;
    }
  }
  if (sobj) {
    if (own)
      *own = *own | sobj->own;
    if (flags & SWIG_POINTER_DISOWN) {
      sobj->own = 0;
    }
    res = SWIG_OK;
  } else {
    if (flags & SWIG_POINTER_IMPLICIT_CONV) {
      SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
      if (data && !data->implicitconv) {
        PyObject *klass = data->klass;
        if (klass) {
          PyObject *impconv;
          data->implicitconv = 1; /* avoid recursion and call 'explicit' constructors*/
          impconv = SWIG_Python_CallFunctor(klass, obj);
          data->implicitconv = 0;
          if (PyErr_Occurred()) {
            PyErr_Clear();
            impconv = 0;
          }
          if (impconv) {
            SwigPyObject *iobj = SWIG_Python_GetSwigThis(impconv);
            if (iobj) {
              void *vptr;
              res = SWIG_Python_ConvertPtrAndOwn((PyObject*)iobj, &vptr, ty, 0, 0);
              if (SWIG_IsOK(res)) {
                if (ptr) {
                  *ptr = vptr;
                  /* transfer the ownership to 'ptr' */
                  iobj->own = 0;
                  res = SWIG_AddCast(res);
                  res = SWIG_AddNewMask(res);
                } else {
                  res = SWIG_AddCast(res);		    
                }
              }
            }
            Py_DECREF(impconv);
          }
        }
      }
    }
  }
  return res;
}

/* Convert a function ptr value */

SWIGRUNTIME int
SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {
  if (!PyCFunction_Check(obj)) {
    return SWIG_ConvertPtr(obj, ptr, ty, 0);
  } else {
    void *vptr = 0;
    
    /* here we get the method pointer for callbacks */
    const char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
    const char *desc = doc ? strstr(doc, "swig_ptr: ") : 0;
    if (desc)
      desc = ty ? SWIG_UnpackVoidPtr(desc + 10, &vptr, ty->name) : 0;
    if (!desc) 
      return SWIG_ERROR;
    if (ty) {
      swig_cast_info *tc = SWIG_TypeCheck(desc,ty);
      if (tc) {
        int newmemory = 0;
        *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
        assert(!newmemory); /* newmemory handling not yet implemented */
      } else {
        return SWIG_ERROR;
      }
    } else {
      *ptr = vptr;
    }
    return SWIG_OK;
  }
}

/* Convert a packed value value */

SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = SwigPyPacked_UnpackData(obj, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}  

/* -----------------------------------------------------------------------------
 * Create a new pointer object
 * ----------------------------------------------------------------------------- */

/*
  Create a new instance object, without calling __init__, and set the
  'this' attribute.
*/

SWIGRUNTIME PyObject* 
SWIG_Python_NewShadowInstance(SwigPyClientData *data, PyObject *swig_this)
{
#if (PY_VERSION_HEX >= 0x02020000)
  PyObject *inst = 0;
  PyObject *newraw = data->newraw;
  if (newraw) {
    inst = PyObject_Call(newraw, data->newargs, NULL);
    if (inst) {
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
      PyObject **dictptr = _PyObject_GetDictPtr(inst);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	if (dict == NULL) {
	  dict = PyDict_New();
	  *dictptr = dict;
	  PyDict_SetItem(dict, SWIG_This(), swig_this);
	}
      }
#else
      PyObject *key = SWIG_This();
      PyObject_SetAttr(inst, key, swig_this);
#endif
    }
  } else {
#if PY_VERSION_HEX >= 0x03000000
    inst = PyBaseObject_Type.tp_new((PyTypeObject*) data->newargs, Py_None, Py_None);
    PyObject_SetAttr(inst, SWIG_This(), swig_this);
    Py_TYPE(inst)->tp_flags &= ~Py_TPFLAGS_VALID_VERSION_TAG;
#else
    PyObject *dict = PyDict_New();
    PyDict_SetItem(dict, SWIG_This(), swig_this);
    inst = PyInstance_NewRaw(data->newargs, dict);
    Py_DECREF(dict);
#endif
  }
  return inst;
#else
#if (PY_VERSION_HEX >= 0x02010000)
  PyObject *inst;
  PyObject *dict = PyDict_New();
  PyDict_SetItem(dict, SWIG_This(), swig_this);
  inst = PyInstance_NewRaw(data->newargs, dict);
  Py_DECREF(dict);
  return (PyObject *) inst;
#else
  PyInstanceObject *inst = PyObject_NEW(PyInstanceObject, &PyInstance_Type);
  if (inst == NULL) {
    return NULL;
  }
  inst->in_class = (PyClassObject *)data->newargs;
  Py_INCREF(inst->in_class);
  inst->in_dict = PyDict_New();
  if (inst->in_dict == NULL) {
    Py_DECREF(inst);
    return NULL;
  }
#ifdef Py_TPFLAGS_HAVE_WEAKREFS
  inst->in_weakreflist = NULL;
#endif
#ifdef Py_TPFLAGS_GC
  PyObject_GC_Init(inst);
#endif
  PyDict_SetItem(inst->in_dict, SWIG_This(), swig_this);
  return (PyObject *) inst;
#endif
#endif
}

SWIGRUNTIME void
SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)
{
 PyObject *dict;
#if (PY_VERSION_HEX >= 0x02020000) && !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
 PyObject **dictptr = _PyObject_GetDictPtr(inst);
 if (dictptr != NULL) {
   dict = *dictptr;
   if (dict == NULL) {
     dict = PyDict_New();
     *dictptr = dict;
   }
   PyDict_SetItem(dict, SWIG_This(), swig_this);
   return;
 }
#endif
 dict = PyObject_GetAttrString(inst, (char*)"__dict__");
 PyDict_SetItem(dict, SWIG_This(), swig_this);
 Py_DECREF(dict);
} 


SWIGINTERN PyObject *
SWIG_Python_InitShadowInstance(PyObject *args) {
  PyObject *obj[2];
  if (!SWIG_Python_UnpackTuple(args, "swiginit", 2, 2, obj)) {
    return NULL;
  } else {
    SwigPyObject *sthis = SWIG_Python_GetSwigThis(obj[0]);
    if (sthis) {
      SwigPyObject_append((PyObject*) sthis, obj[1]);
    } else {
      SWIG_Python_SetSwigThis(obj[0], obj[1]);
    }
    return SWIG_Py_Void();
  }
}

/* Create a new pointer object */

SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(PyObject *self, void *ptr, swig_type_info *type, int flags) {
  SwigPyClientData *clientdata;
  PyObject * robj;
  int own;

  if (!ptr)
    return SWIG_Py_Void();

  clientdata = type ? (SwigPyClientData *)(type->clientdata) : 0;
  own = (flags & SWIG_POINTER_OWN) ? SWIG_POINTER_OWN : 0;
  if (clientdata && clientdata->pytype) {
    SwigPyObject *newobj;
    if (flags & SWIG_BUILTIN_TP_INIT) {
      newobj = (SwigPyObject*) self;
      if (newobj->ptr) {
        PyObject *next_self = clientdata->pytype->tp_alloc(clientdata->pytype, 0);
        while (newobj->next)
	  newobj = (SwigPyObject *) newobj->next;
        newobj->next = next_self;
        newobj = (SwigPyObject *)next_self;
      }
    } else {
      newobj = PyObject_New(SwigPyObject, clientdata->pytype);
    }
    if (newobj) {
      newobj->ptr = ptr;
      newobj->ty = type;
      newobj->own = own;
      newobj->next = 0;
#ifdef SWIGPYTHON_BUILTIN
      newobj->dict = 0;
#endif
      return (PyObject*) newobj;
    }
    return SWIG_Py_Void();
  }

  assert(!(flags & SWIG_BUILTIN_TP_INIT));

  robj = SwigPyObject_New(ptr, type, own);
  if (clientdata && !(flags & SWIG_POINTER_NOSHADOW)) {
    PyObject *inst = SWIG_Python_NewShadowInstance(clientdata, robj);
    if (inst) {
      Py_DECREF(robj);
      robj = inst;
    }
  }
  return robj;
}

/* Create a new packed object */

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  return ptr ? SwigPyPacked_New((void *) ptr, sz, type) : SWIG_Py_Void();
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void) {
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
#ifdef SWIG_LINK_RUNTIME
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
#else
# ifdef SWIGPY_USE_CAPSULE
    type_pointer = PyCapsule_Import(SWIGPY_CAPSULE_NAME, 0);
# else
    type_pointer = PyCObject_Import((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				    (char*)"type_pointer" SWIG_TYPE_TABLE_NAME);
# endif
    if (PyErr_Occurred()) {
      PyErr_Clear();
      type_pointer = (void *)0;
    }
#endif
  }
  return (swig_module_info *) type_pointer;
}

#if PY_MAJOR_VERSION < 2
/* PyModule_AddObject function was introduced in Python 2.0.  The following function
   is copied out of Python/modsupport.c in python version 2.3.4 */
SWIGINTERN int
PyModule_AddObject(PyObject *m, char *name, PyObject *o)
{
  PyObject *dict;
  if (!PyModule_Check(m)) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs module as first arg");
    return SWIG_ERROR;
  }
  if (!o) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs non-NULL value");
    return SWIG_ERROR;
  }
  
  dict = PyModule_GetDict(m);
  if (dict == NULL) {
    /* Internal error -- modules must have a dict! */
    PyErr_Format(PyExc_SystemError, "module '%s' has no __dict__",
		 PyModule_GetName(m));
    return SWIG_ERROR;
  }
  if (PyDict_SetItemString(dict, name, o))
    return SWIG_ERROR;
  Py_DECREF(o);
  return SWIG_OK;
}
#endif

SWIGRUNTIME void
#ifdef SWIGPY_USE_CAPSULE
SWIG_Python_DestroyModule(PyObject *obj)
#else
SWIG_Python_DestroyModule(void *vptr)
#endif
{
#ifdef SWIGPY_USE_CAPSULE
  swig_module_info *swig_module = (swig_module_info *) PyCapsule_GetPointer(obj, SWIGPY_CAPSULE_NAME);
#else
  swig_module_info *swig_module = (swig_module_info *) vptr;
#endif
  swig_type_info **types = swig_module->types;
  size_t i;
  for (i =0; i < swig_module->size; ++i) {
    swig_type_info *ty = types[i];
    if (ty->owndata) {
      SwigPyClientData *data = (SwigPyClientData *) ty->clientdata;
      if (data) SwigPyClientData_Del(data);
    }
  }
  Py_DECREF(SWIG_This());
  swig_this = NULL;
}

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
#if PY_VERSION_HEX >= 0x03000000
 /* Add a dummy module object into sys.modules */
  PyObject *module = PyImport_AddModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION);
#else
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} }; /* Sentinel */
  PyObject *module = Py_InitModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION, swig_empty_runtime_method_table);
#endif
#ifdef SWIGPY_USE_CAPSULE
  PyObject *pointer = PyCapsule_New((void *) swig_module, SWIGPY_CAPSULE_NAME, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer_capsule" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
#else
  PyObject *pointer = PyCObject_FromVoidPtr((void *) swig_module, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
#endif
}

/* The python cached type query */
SWIGRUNTIME PyObject *
SWIG_Python_TypeCache(void) {
  static PyObject *SWIG_STATIC_POINTER(cache) = PyDict_New();
  return cache;
}

SWIGRUNTIME swig_type_info *
SWIG_Python_TypeQuery(const char *type)
{
  PyObject *cache = SWIG_Python_TypeCache();
  PyObject *key = SWIG_Python_str_FromChar(type); 
  PyObject *obj = PyDict_GetItem(cache, key);
  swig_type_info *descriptor;
  if (obj) {
#ifdef SWIGPY_USE_CAPSULE
    descriptor = (swig_type_info *) PyCapsule_GetPointer(obj, NULL);
#else
    descriptor = (swig_type_info *) PyCObject_AsVoidPtr(obj);
#endif
  } else {
    swig_module_info *swig_module = SWIG_Python_GetModule();
    descriptor = SWIG_TypeQueryModule(swig_module, swig_module, type);
    if (descriptor) {
#ifdef SWIGPY_USE_CAPSULE
      obj = PyCapsule_New((void*) descriptor, NULL, NULL);
#else
      obj = PyCObject_FromVoidPtr(descriptor, NULL);
#endif
      PyDict_SetItem(cache, key, obj);
      Py_DECREF(obj);
    }
  }
  Py_DECREF(key);
  return descriptor;
}

/* 
   For backward compatibility only
*/
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_arg_fail(arg)      SWIG_Python_ArgFail(arg)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{  
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      char *tmp;
      PyObject *old_str = PyObject_Str(value);
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, tmp = SWIG_Python_str_AsChar(old_str));
      } else {
	PyErr_Format(type, "%s %s", tmp = SWIG_Python_str_AsChar(old_str), mesg);
      }
      SWIG_Python_str_DelForPy3(tmp);
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}
  
SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}

SWIGRUNTIMEINLINE const char *
SwigPyObject_GetDesc(PyObject *self)
{
  SwigPyObject *v = (SwigPyObject *)self;
  swig_type_info *ty = v ? v->ty : 0;
  return ty ? ty->str : "";
}

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && SwigPyObject_Check(obj)) {
      const char *otype = (const char *) SwigPyObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'SwigPyObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? SWIG_Python_str_AsChar(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
          SWIG_Python_str_DelForPy3(cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_XDECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}


/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int SWIGUNUSEDPARM(argnum), int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
#if SWIG_POINTER_EXCEPTION
    if (flags) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
      SWIG_Python_ArgFail(argnum);
    }
#endif
  }
  return result;
}

#ifdef SWIGPYTHON_BUILTIN
SWIGRUNTIME int
SWIG_Python_NonDynamicSetAttr(PyObject *obj, PyObject *name, PyObject *value) {
  PyTypeObject *tp = obj->ob_type;
  PyObject *descr;
  PyObject *encoded_name;
  descrsetfunc f;
  int res;

# ifdef Py_USING_UNICODE
  if (PyString_Check(name)) {
    name = PyUnicode_Decode(PyString_AsString(name), PyString_Size(name), NULL, NULL);
    if (!name)
      return -1;
  } else if (!PyUnicode_Check(name))
# else
  if (!PyString_Check(name))
# endif
  {
    PyErr_Format(PyExc_TypeError, "attribute name must be string, not '%.200s'", name->ob_type->tp_name);
    return -1;
  } else {
    Py_INCREF(name);
  }

  if (!tp->tp_dict) {
    if (PyType_Ready(tp) < 0)
      goto done;
  }

  res = -1;
  descr = _PyType_Lookup(tp, name);
  f = NULL;
  if (descr != NULL)
    f = descr->ob_type->tp_descr_set;
  if (!f) {
    if (PyString_Check(name)) {
      encoded_name = name;
      Py_INCREF(name);
    } else {
      encoded_name = PyUnicode_AsUTF8String(name);
    }
    PyErr_Format(PyExc_AttributeError, "'%.100s' object has no attribute '%.200s'", tp->tp_name, PyString_AsString(encoded_name));
    Py_DECREF(encoded_name);
  } else {
    res = f(descr, obj, value);
  }
  
  done:
  Py_DECREF(name);
  return res;
}
#endif


#ifdef __cplusplus
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



  #define SWIG_exception(code, msg) do { SWIG_Error(code, msg); SWIG_fail;; } while(0) 


/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_m_CModule__f_r_q_const__CString__void swig_types[0]
#define SWIGTYPE_p_CAuthBase swig_types[1]
#define SWIGTYPE_p_CBufLine swig_types[2]
#define SWIGTYPE_p_CBuffer swig_types[3]
#define SWIGTYPE_p_CChan swig_types[4]
#define SWIGTYPE_p_CClient swig_types[5]
#define SWIGTYPE_p_CClientAuth swig_types[6]
#define SWIGTYPE_p_CConfig swig_types[7]
#define SWIGTYPE_p_CConfigEntry swig_types[8]
#define SWIGTYPE_p_CConfig__EntryMap__const_iterator swig_types[9]
#define SWIGTYPE_p_CConfig__SubConfigMap__const_iterator swig_types[10]
#define SWIGTYPE_p_CConnectQueueTimer swig_types[11]
#define SWIGTYPE_p_CCron swig_types[12]
#define SWIGTYPE_p_CDebug swig_types[13]
#define SWIGTYPE_p_CDir swig_types[14]
#define SWIGTYPE_p_CException swig_types[15]
#define SWIGTYPE_p_CExecSock swig_types[16]
#define SWIGTYPE_p_CFPTimer swig_types[17]
#define SWIGTYPE_p_CFile swig_types[18]
#define SWIGTYPE_p_CGetAddrInfo swig_types[19]
#define SWIGTYPE_p_CHTTPSock swig_types[20]
#define SWIGTYPE_p_CIRCNetwork swig_types[21]
#define SWIGTYPE_p_CIRCSock swig_types[22]
#define SWIGTYPE_p_CIncomingConnection swig_types[23]
#define SWIGTYPE_p_CListener swig_types[24]
#define SWIGTYPE_p_CModCommand swig_types[25]
#define SWIGTYPE_p_CModInfo swig_types[26]
#define SWIGTYPE_p_CModPython swig_types[27]
#define SWIGTYPE_p_CModule swig_types[28]
#define SWIGTYPE_p_CModules swig_types[29]
#define SWIGTYPE_p_CModulesIter swig_types[30]
#define SWIGTYPE_p_CModules__const_iterator swig_types[31]
#define SWIGTYPE_p_CNick swig_types[32]
#define SWIGTYPE_p_CPyModule swig_types[33]
#define SWIGTYPE_p_CPyRetString swig_types[34]
#define SWIGTYPE_p_CPySocket swig_types[35]
#define SWIGTYPE_p_CPyTimer swig_types[36]
#define SWIGTYPE_p_CRealListener swig_types[37]
#define SWIGTYPE_p_CSCharBuffer swig_types[38]
#define SWIGTYPE_p_CSConnection swig_types[39]
#define SWIGTYPE_p_CSListener swig_types[40]
#define SWIGTYPE_p_CSMonitorFD swig_types[41]
#define SWIGTYPE_p_CSSSLConnection swig_types[42]
#define SWIGTYPE_p_CSSockAddr swig_types[43]
#define SWIGTYPE_p_CServer swig_types[44]
#define SWIGTYPE_p_CSmartPtrT_CAuthBase_t swig_types[45]
#define SWIGTYPE_p_CSmartPtrT_CTemplateOptions_t swig_types[46]
#define SWIGTYPE_p_CSmartPtrT_CTemplateTagHandler_t swig_types[47]
#define SWIGTYPE_p_CSmartPtrT_CWebSession_t swig_types[48]
#define SWIGTYPE_p_CSmartPtrT_CWebSubPage_t swig_types[49]
#define SWIGTYPE_p_CSockCommon swig_types[50]
#define SWIGTYPE_p_CSockManager swig_types[51]
#define SWIGTYPE_p_CSocket swig_types[52]
#define SWIGTYPE_p_CSocketManager swig_types[53]
#define SWIGTYPE_p_CString swig_types[54]
#define SWIGTYPE_p_CString__EEscape swig_types[55]
#define SWIGTYPE_p_CTable swig_types[56]
#define SWIGTYPE_p_CTemplate swig_types[57]
#define SWIGTYPE_p_CTemplateLoopContext swig_types[58]
#define SWIGTYPE_p_CTemplateOptions swig_types[59]
#define SWIGTYPE_p_CTemplateTagHandler swig_types[60]
#define SWIGTYPE_p_CTimer swig_types[61]
#define SWIGTYPE_p_CUser swig_types[62]
#define SWIGTYPE_p_CUtils swig_types[63]
#define SWIGTYPE_p_CWebSession swig_types[64]
#define SWIGTYPE_p_CWebSessionMap swig_types[65]
#define SWIGTYPE_p_CWebSock swig_types[66]
#define SWIGTYPE_p_CWebSubPage swig_types[67]
#define SWIGTYPE_p_CZNC swig_types[68]
#define SWIGTYPE_p_CZNCSock swig_types[69]
#define SWIGTYPE_p_CZNCTagHandler swig_types[70]
#define SWIGTYPE_p_Csock swig_types[71]
#define SWIGTYPE_p_EAcceptType swig_types[72]
#define SWIGTYPE_p_EChanModeArgs swig_types[73]
#define SWIGTYPE_p_EModException swig_types[74]
#define SWIGTYPE_p_EModRet swig_types[75]
#define SWIGTYPE_p_EModes swig_types[76]
#define SWIGTYPE_p_EModuleType swig_types[77]
#define SWIGTYPE_p_EType swig_types[78]
#define SWIGTYPE_p_EUserPerms swig_types[79]
#define SWIGTYPE_p_EntryMap swig_types[80]
#define SWIGTYPE_p_EntryMapIterator swig_types[81]
#define SWIGTYPE_p_MCString swig_types[82]
#define SWIGTYPE_p_MCString__iterator swig_types[83]
#define SWIGTYPE_p_MCString_iter swig_types[84]
#define SWIGTYPE_p_ModCmdFunc swig_types[85]
#define SWIGTYPE_p_ModDirList swig_types[86]
#define SWIGTYPE_p_SCString swig_types[87]
#define SWIGTYPE_p_String swig_types[88]
#define SWIGTYPE_p_SubConfig swig_types[89]
#define SWIGTYPE_p_SubConfigMap swig_types[90]
#define SWIGTYPE_p_SubConfigMapIterator swig_types[91]
#define SWIGTYPE_p_TSocketManagerT_CZNCSock_t swig_types[92]
#define SWIGTYPE_p_TrafficStatsMap swig_types[93]
#define SWIGTYPE_p_TrafficStatsPair swig_types[94]
#define SWIGTYPE_p_VCString swig_types[95]
#define SWIGTYPE_p_allocator_type swig_types[96]
#define SWIGTYPE_p_bool swig_types[97]
#define SWIGTYPE_p_char swig_types[98]
#define SWIGTYPE_p_const_reference swig_types[99]
#define SWIGTYPE_p_difference_type swig_types[100]
#define SWIGTYPE_p_double swig_types[101]
#define SWIGTYPE_p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CModule swig_types[102]
#define SWIGTYPE_p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CPyModule swig_types[103]
#define SWIGTYPE_p_f_p_CModule_p_CFPTimer__void swig_types[104]
#define SWIGTYPE_p_f_r_std__ostream__r_std__ostream swig_types[105]
#define SWIGTYPE_p_fd_set swig_types[106]
#define SWIGTYPE_p_first_type swig_types[107]
#define SWIGTYPE_p_gid_t swig_types[108]
#define SWIGTYPE_p_in_addr swig_types[109]
#define SWIGTYPE_p_int swig_types[110]
#define SWIGTYPE_p_key_type swig_types[111]
#define SWIGTYPE_p_listT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t swig_types[112]
#define SWIGTYPE_p_long swig_types[113]
#define SWIGTYPE_p_mapT_CString_CConfigEntry_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CConfigEntry_t_t_t swig_types[114]
#define SWIGTYPE_p_mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t swig_types[115]
#define SWIGTYPE_p_mapT_CString_CUser_p_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CUser_p_t_t_t swig_types[116]
#define SWIGTYPE_p_mapT_CString_VCString_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_VCString_t_t_t swig_types[117]
#define SWIGTYPE_p_mapT_char_unsigned_int_std__lessT_char_t_std__allocatorT_std__pairT_char_const_unsigned_int_t_t_t swig_types[118]
#define SWIGTYPE_p_mapT_unsigned_char_CIRCSock__EChanModeArgs_std__lessT_unsigned_char_t_std__allocatorT_std__pairT_unsigned_char_const_CIRCSock__EChanModeArgs_t_t_t swig_types[119]
#define SWIGTYPE_p_mapT_unsigned_char_CString_std__lessT_unsigned_char_t_std__allocatorT_std__pairT_unsigned_char_const_CString_t_t_t swig_types[120]
#define SWIGTYPE_p_mapped_type swig_types[121]
#define SWIGTYPE_p_mode_t swig_types[122]
#define SWIGTYPE_p_ostream swig_types[123]
#define SWIGTYPE_p_p_PyObject swig_types[124]
#define SWIGTYPE_p_reference swig_types[125]
#define SWIGTYPE_p_second_type swig_types[126]
#define SWIGTYPE_p_setT_CModInfo_t swig_types[127]
#define SWIGTYPE_p_setT_CSocket_p_t__const_iterator swig_types[128]
#define SWIGTYPE_p_setT_CString_t swig_types[129]
#define SWIGTYPE_p_setT_CTimer_p_t__const_iterator swig_types[130]
#define SWIGTYPE_p_setT_unsigned_char_t swig_types[131]
#define SWIGTYPE_p_size_type swig_types[132]
#define SWIGTYPE_p_sockaddr_in swig_types[133]
#define SWIGTYPE_p_sockaddr_storage swig_types[134]
#define SWIGTYPE_p_socklen_t swig_types[135]
#define SWIGTYPE_p_ssize_t swig_types[136]
#define SWIGTYPE_p_stat swig_types[137]
#define SWIGTYPE_p_std__allocatorT_CChan_p_t swig_types[138]
#define SWIGTYPE_p_std__allocatorT_CIRCNetwork_p_t swig_types[139]
#define SWIGTYPE_p_std__allocatorT_CSmartPtrT_CWebSubPage_t_t swig_types[140]
#define SWIGTYPE_p_std__allocatorT_CString_t swig_types[141]
#define SWIGTYPE_p_std__allocatorT_std__pairT_CString_CString_t_t swig_types[142]
#define SWIGTYPE_p_std__allocatorT_std__pairT_CString_const_CNick_t_t swig_types[143]
#define SWIGTYPE_p_std__invalid_argument swig_types[144]
#define SWIGTYPE_p_std__lessT_CString_t swig_types[145]
#define SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t swig_types[146]
#define SWIGTYPE_p_std__listT__Tp__Alloc_t swig_types[147]
#define SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t swig_types[148]
#define SWIGTYPE_p_std__mapT_CString_std__pairT_unsigned_long_long_unsigned_long_long_t_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_std__pairT_unsigned_long_long_unsigned_long_long_t_t_t_t swig_types[149]
#define SWIGTYPE_p_std__mapT_int_short_std__lessT_int_t_std__allocatorT_std__pairT_int_const_short_t_t_t swig_types[150]
#define SWIGTYPE_p_std__pairT_CString_CString_t swig_types[151]
#define SWIGTYPE_p_std__pairT_unsigned_long_long_unsigned_long_long_t swig_types[152]
#define SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t swig_types[153]
#define SWIGTYPE_p_std__vectorT_CCron_p_std__allocatorT_CCron_p_t_t swig_types[154]
#define SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t swig_types[155]
#define SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t swig_types[156]
#define SWIGTYPE_p_std__vectorT_Csock_p_std__allocatorT_Csock_p_t_t swig_types[157]
#define SWIGTYPE_p_std__vectorT__Tp__Alloc_t swig_types[158]
#define SWIGTYPE_p_std__vectorT__Tp_p__Alloc_t swig_types[159]
#define SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t swig_types[160]
#define SWIGTYPE_p_swig__SwigPyIterator swig_types[161]
#define SWIGTYPE_p_time_t swig_types[162]
#define SWIGTYPE_p_timeval swig_types[163]
#define SWIGTYPE_p_u_long swig_types[164]
#define SWIGTYPE_p_uid_t swig_types[165]
#define SWIGTYPE_p_unsigned_int swig_types[166]
#define SWIGTYPE_p_unsigned_long_long swig_types[167]
#define SWIGTYPE_p_unsigned_short swig_types[168]
#define SWIGTYPE_p_value_type swig_types[169]
#define SWIGTYPE_p_vectorT_CChan_p_std__allocatorT_CChan_p_t_t swig_types[170]
#define SWIGTYPE_p_vectorT_CClient_p_std__allocatorT_CClient_p_t_t swig_types[171]
#define SWIGTYPE_p_vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t swig_types[172]
#define SWIGTYPE_p_vectorT_CListener_p_std__allocatorT_CListener_p_t_t swig_types[173]
#define SWIGTYPE_p_vectorT_CServer_p_std__allocatorT_CServer_p_t_t swig_types[174]
#define SWIGTYPE_p_vectorT_CSmartPtrT_CTemplateTagHandler_t_std__allocatorT_CSmartPtrT_CTemplateTagHandler_t_t_t swig_types[175]
#define SWIGTYPE_p_vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t swig_types[176]
#define SWIGTYPE_p_vectorT_CTemplate_p_std__allocatorT_CTemplate_p_t_t swig_types[177]
#define SWIGTYPE_p_void swig_types[178]
static swig_type_info *swig_types[180];
static swig_module_info swig_module = {swig_types, 179, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#if (PY_VERSION_HEX <= 0x02000000)
# if !defined(SWIG_PYTHON_CLASSIC)
#  error "This python version requires swig to be run with the '-classic' option"
# endif
#endif

/*-----------------------------------------------
              @(target):= _znc_core.so
  ------------------------------------------------*/
#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_init    PyInit__znc_core

#else
#  define SWIG_init    init_znc_core

#endif
#define SWIG_name    "_znc_core"

#define SWIGVERSION 0x020007 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


namespace swig {
  class SwigPtr_PyObject {
  protected:
    PyObject *_obj;

  public:
    SwigPtr_PyObject() :_obj(0)
    {
    }

    SwigPtr_PyObject(const SwigPtr_PyObject& item) : _obj(item._obj)
    {
      Py_XINCREF(_obj);      
    }
    
    SwigPtr_PyObject(PyObject *obj, bool initial_ref = true) :_obj(obj)
    {
      if (initial_ref) {
        Py_XINCREF(_obj);
      }
    }
    
    SwigPtr_PyObject & operator=(const SwigPtr_PyObject& item) 
    {
      Py_XINCREF(item._obj);
      Py_XDECREF(_obj);
      _obj = item._obj;
      return *this;      
    }
    
    ~SwigPtr_PyObject() 
    {
      Py_XDECREF(_obj);
    }
    
    operator PyObject *() const
    {
      return _obj;
    }

    PyObject *operator->() const
    {
      return _obj;
    }
  };
}


namespace swig {
  struct SwigVar_PyObject : SwigPtr_PyObject {
    SwigVar_PyObject(PyObject* obj = 0) : SwigPtr_PyObject(obj, false) { }
    
    SwigVar_PyObject & operator = (PyObject* obj)
    {
      Py_XDECREF(_obj);
      _obj = obj;
      return *this;      
    }
  };
}


#include <utility>
#include "../include/znc/Utils.h"
#include "../include/znc/Config.h"
#include "../include/znc/Socket.h"
#include "../include/znc/Modules.h"
#include "../include/znc/Nick.h"
#include "../include/znc/Chan.h"
#include "../include/znc/User.h"
#include "../include/znc/IRCNetwork.h"
#include "../include/znc/Client.h"
#include "../include/znc/IRCSock.h"
#include "../include/znc/Listener.h"
#include "../include/znc/HTTPSock.h"
#include "../include/znc/Template.h"
#include "../include/znc/WebModules.h"
#include "../include/znc/znc.h"
#include "../include/znc/Server.h"
#include "../include/znc/ZNCString.h"
#include "../include/znc/FileUtils.h"
#include "../include/znc/ZNCDebug.h"
#include "../include/znc/ExecSock.h"
#include "../include/znc/Buffer.h"
#include "modpython/module.h"

#include "modpython/retstring.h"

#define stat struct stat
using std::allocator;


#include <stdexcept>


#if defined(__GNUC__)
#  if __GNUC__ == 2 && __GNUC_MINOR <= 96
#     define SWIG_STD_NOMODERN_STL
#  endif
#endif


#include <string>
#include <stdexcept>
#include <stddef.h>


#include <string>


#include <iostream>

#if PY_VERSION_HEX >= 0x03020000
# define SWIGPY_SLICE_ARG(obj) ((PyObject*) (obj))
#else
# define SWIGPY_SLICE_ARG(obj) ((PySliceObject*) (obj))
#endif


  #include <stddef.h>


namespace swig {
  struct stop_iteration {
  };

  struct SwigPyIterator {
  private:
    SwigPtr_PyObject _seq;

  protected:
    SwigPyIterator(PyObject *seq) : _seq(seq)
    {
    }
      
  public:
    virtual ~SwigPyIterator() {}

    // Access iterator method, required by Python
    virtual PyObject *value() const = 0;

    // Forward iterator method, required by Python
    virtual SwigPyIterator *incr(size_t n = 1) = 0;
    
    // Backward iterator method, very common in C++, but not required in Python
    virtual SwigPyIterator *decr(size_t /*n*/ = 1)
    {
      throw stop_iteration();
    }

    // Random access iterator methods, but not required in Python
    virtual ptrdiff_t distance(const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }

    virtual bool equal (const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }
    
    // C++ common/needed methods
    virtual SwigPyIterator *copy() const = 0;

    PyObject *next()     
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      PyObject *obj = value();
      incr();       
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads
      return obj;     
    }

    /* Make an alias for Python 3.x */
    PyObject *__next__()
    {
      return next();
    }

    PyObject *previous()
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      decr();
      PyObject *obj = value();
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads       
      return obj;
    }

    SwigPyIterator *advance(ptrdiff_t n)
    {
      return  (n > 0) ?  incr(n) : decr(-n);
    }
      
    bool operator == (const SwigPyIterator& x)  const
    {
      return equal(x);
    }
      
    bool operator != (const SwigPyIterator& x) const
    {
      return ! operator==(x);
    }
      
    SwigPyIterator& operator += (ptrdiff_t n)
    {
      return *advance(n);
    }

    SwigPyIterator& operator -= (ptrdiff_t n)
    {
      return *advance(-n);
    }
      
    SwigPyIterator* operator + (ptrdiff_t n) const
    {
      return copy()->advance(n);
    }

    SwigPyIterator* operator - (ptrdiff_t n) const
    {
      return copy()->advance(-n);
    }
      
    ptrdiff_t operator - (const SwigPyIterator& x) const
    {
      return x.distance(*this);
    }
      
    static swig_type_info* descriptor() {
      static int init = 0;
      static swig_type_info* desc = 0;
      if (!init) {
	desc = SWIG_TypeQuery("swig::SwigPyIterator *");
	init = 1;
      }	
      return desc;
    }    
  };

#if defined(SWIGPYTHON_BUILTIN)
  inline PyObject* make_output_iterator_builtin (PyObject *pyself)
  {
    Py_INCREF(pyself);
    return pyself;
  }
#endif
}


SWIGINTERN int
SWIG_AsVal_double (PyObject *obj, double *val)
{
  int res = SWIG_TypeError;
  if (PyFloat_Check(obj)) {
    if (val) *val = PyFloat_AsDouble(obj);
    return SWIG_OK;
  } else if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    double v = PyLong_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    double d = PyFloat_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = d;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      long v = PyLong_AsLong(obj);
      if (!PyErr_Occurred()) {
	if (val) *val = v;
	return SWIG_AddCast(SWIG_AddCast(SWIG_OK));
      } else {
	PyErr_Clear();
      }
    }
  }
#endif
  return res;
}


#include <float.h>


#include <math.h>


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx = floor(x);
   double cx = ceil(x);
   double rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long (PyObject *obj, unsigned long *val) 
{
  if (PyInt_Check(obj)) {
    long v = PyInt_AsLong(obj);
    if (v >= 0) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      return SWIG_OverflowError;
    }
  } else if (PyLong_Check(obj)) {
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, ULONG_MAX)) {
	if (val) *val = (unsigned long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERNINLINE int
SWIG_AsVal_size_t (PyObject * obj, size_t *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, val ? &v : 0);
  if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
  return res;
}


  #define SWIG_From_long   PyLong_FromLong 


SWIGINTERNINLINE PyObject *
SWIG_From_ptrdiff_t  (ptrdiff_t value)
{    
  return SWIG_From_long  (static_cast< long >(value));
}


SWIGINTERNINLINE PyObject*
  SWIG_From_bool  (bool value)
{
  return PyBool_FromLong(value ? 1 : 0);
}


SWIGINTERN int
SWIG_AsVal_long (PyObject *obj, long* val)
{
  if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    long v = PyLong_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    long v = PyInt_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, LONG_MIN, LONG_MAX)) {
	if (val) *val = (long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERNINLINE int
SWIG_AsVal_ptrdiff_t (PyObject * obj, ptrdiff_t *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, val ? &v : 0);
  if (SWIG_IsOK(res) && val) *val = static_cast< ptrdiff_t >(v);
  return res;
}


#include <stdexcept>


#include <algorithm>


#include <vector>


#include <utility>


#include <map>
#include <algorithm>
#include <stdexcept>


#include <list>


#include <string>


namespace swig {  
  template <class Type>
  struct noconst_traits {
    typedef Type noconst_type;
  };

  template <class Type>
  struct noconst_traits<const Type> {
    typedef Type noconst_type;
  };

  /*
    type categories
  */
  struct pointer_category { };  
  struct value_category { };

  /*
    General traits that provides type_name and type_info
  */
  template <class Type> struct traits { };

  template <class Type>
  inline const char* type_name() {
    return traits<typename noconst_traits<Type >::noconst_type >::type_name();
  }

  template <class Type> 
  struct traits_info {
    static swig_type_info *type_query(std::string name) {
      name += " *";
      return SWIG_TypeQuery(name.c_str());
    }    
    static swig_type_info *type_info() {
      static swig_type_info *info = type_query(type_name<Type>());
      return info;
    }
  };

  template <class Type>
  inline swig_type_info *type_info() {
    return traits_info<Type>::type_info();
  }

  /*
    Partial specialization for pointers
  */
  template <class Type> struct traits <Type *> {
    typedef pointer_category category;
    static std::string make_ptr_name(const char* name) {
      std::string ptrname = name;
      ptrname += " *";
      return ptrname;
    }    
    static const char* type_name() {
      static std::string name = make_ptr_name(swig::type_name<Type>());
      return name.c_str();
    }
  };

  template <class Type, class Category> 
  struct traits_as { };
 
  template <class Type, class Category> 
  struct traits_check { };

}


namespace swig {  
  /*
    Traits that provides the from method
  */
  template <class Type> struct traits_from_ptr {
    static PyObject *from(Type *val, int owner = 0) {
      return SWIG_InternalNewPointerObj(val, type_info<Type>(), owner);
    }
  };

  template <class Type> struct traits_from {
    static PyObject *from(const Type& val) {
      return traits_from_ptr<Type>::from(new Type(val), 1);
    }
  };

  template <class Type> struct traits_from<Type *> {
    static PyObject *from(Type* val) {
      return traits_from_ptr<Type>::from(val, 0);
    }
  };

  template <class Type> struct traits_from<const Type *> {
    static PyObject *from(const Type* val) {
      return traits_from_ptr<Type>::from(const_cast<Type*>(val), 0);
    }
  };


  template <class Type>
  inline PyObject *from(const Type& val) {
    return traits_from<Type>::from(val);
  }

  template <class Type>
  inline PyObject *from_ptr(Type* val, int owner) {
    return traits_from_ptr<Type>::from(val, owner);
  }

  /*
    Traits that provides the asval/as/check method
  */
  template <class Type>
  struct traits_asptr {   
    static int asptr(PyObject *obj, Type **val) {
      Type *p;
      int res = SWIG_ConvertPtr(obj, (void**)&p, type_info<Type>(), 0);
      if (SWIG_IsOK(res)) {
	if (val) *val = p;
      }
      return res;
    }
  }; 

  template <class Type>
  inline int asptr(PyObject *obj, Type **vptr) {
    return traits_asptr<Type>::asptr(obj, vptr);
  }

  template <class Type> 
  struct traits_asval {
    static int asval(PyObject *obj, Type *val) {
      if (val) {
	Type *p = 0;
	int res = traits_asptr<Type>::asptr(obj, &p);
	if (!SWIG_IsOK(res)) return res;	
	if (p) {
	  typedef typename noconst_traits<Type>::noconst_type noconst_type;
	  *(const_cast<noconst_type*>(val)) = *p;
	  if (SWIG_IsNewObj(res)){
	    delete p;
	    res = SWIG_DelNewMask(res);
	  }
	  return res;
	} else {
	  return SWIG_ERROR;
	}
      } else {
	return traits_asptr<Type>::asptr(obj, (Type **)(0));
      }
    }
  };

  template <class Type> struct traits_asval<Type*> {
    static int asval(PyObject *obj, Type **val) {
      if (val) {
        typedef typename noconst_traits<Type>::noconst_type noconst_type;
        noconst_type *p = 0;
        int res = traits_asptr<noconst_type>::asptr(obj,  &p);
        if (SWIG_IsOK(res)) {
          *(const_cast<noconst_type**>(val)) = p;
	}
	return res;
      } else {
	return traits_asptr<Type>::asptr(obj, (Type **)(0));
      }
    }
  };
  
  template <class Type>
  inline int asval(PyObject *obj, Type *val) {
    return traits_asval<Type>::asval(obj, val);
  }

  template <class Type> 
  struct traits_as<Type, value_category> {
    static Type as(PyObject *obj, bool throw_error) {
      Type v;
      int res = asval(obj, &v);
      if (!obj || !SWIG_IsOK(res)) {
	if (!PyErr_Occurred()) {
	  ::SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	if (throw_error) throw std::invalid_argument("bad type");
      }
      return v;
    }
  };

  template <class Type> 
  struct traits_as<Type, pointer_category> {
    static Type as(PyObject *obj, bool throw_error) {
      Type *v = 0;      
      int res = (obj ? traits_asptr<Type>::asptr(obj, &v) : SWIG_ERROR);
      if (SWIG_IsOK(res) && v) {
	if (SWIG_IsNewObj(res)) {
	  Type r(*v);
	  delete v;
	  return r;
	} else {
	  return *v;
	}
      } else {
	// Uninitialized return value, no Type() constructor required.
	static Type *v_def = (Type*) malloc(sizeof(Type));
	if (!PyErr_Occurred()) {
	  SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	if (throw_error) throw std::invalid_argument("bad type");
	memset(v_def,0,sizeof(Type));
	return *v_def;
      }
    }
  };

  template <class Type> 
  struct traits_as<Type*, pointer_category> {
    static Type* as(PyObject *obj, bool throw_error) {
      Type *v = 0;      
      int res = (obj ? traits_asptr<Type>::asptr(obj, &v) : SWIG_ERROR);
      if (SWIG_IsOK(res)) {
	return v;
      } else {
	if (!PyErr_Occurred()) {
	  SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	if (throw_error) throw std::invalid_argument("bad type");
	return 0;
      }
    }
  };
    
  template <class Type>
  inline Type as(PyObject *obj, bool te = false) {
    return traits_as<Type, typename traits<Type>::category>::as(obj, te);
  }

  template <class Type> 
  struct traits_check<Type, value_category> {
    static bool check(PyObject *obj) {
      int res = obj ? asval(obj, (Type *)(0)) : SWIG_ERROR;
      return SWIG_IsOK(res) ? true : false;
    }
  };

  template <class Type> 
  struct traits_check<Type, pointer_category> {
    static bool check(PyObject *obj) {
      int res = obj ? asptr(obj, (Type **)(0)) : SWIG_ERROR;
      return SWIG_IsOK(res) ? true : false;
    }
  };

  template <class Type>
  inline bool check(PyObject *obj) {
    return traits_check<Type, typename traits<Type>::category>::check(obj);
  }
}


#include <functional>

namespace std {
  template <>
  struct less <PyObject *>: public binary_function<PyObject *, PyObject *, bool>
  {
    bool
    operator()(PyObject * v, PyObject *w) const
    { 
      bool res;
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      res = PyObject_RichCompareBool(v, w, Py_LT) ? true : false;
      /* This may fall into a case of inconsistent
               eg. ObjA > ObjX > ObjB
               but ObjA < ObjB
      */
      if( PyErr_Occurred() && PyErr_ExceptionMatches(PyExc_TypeError) )
      {
        /* Objects can't be compared, this mostly occurred in Python 3.0 */
        /* Compare their ptr directly for a workaround */
        res = (v < w);
        PyErr_Clear();
      }
      SWIG_PYTHON_THREAD_END_BLOCK;
      return res;
    }
  };

  template <>
  struct less <swig::SwigPtr_PyObject>: public binary_function<swig::SwigPtr_PyObject, swig::SwigPtr_PyObject, bool>
  {
    bool
    operator()(const swig::SwigPtr_PyObject& v, const swig::SwigPtr_PyObject& w) const
    {
      return std::less<PyObject *>()(v, w);
    }
  };

  template <>
  struct less <swig::SwigVar_PyObject>: public binary_function<swig::SwigVar_PyObject, swig::SwigVar_PyObject, bool>
  {
    bool
    operator()(const swig::SwigVar_PyObject& v, const swig::SwigVar_PyObject& w) const
    {
      return std::less<PyObject *>()(v, w);
    }
  };

}

namespace swig {
  template <> struct traits<PyObject *> {
    typedef value_category category;
    static const char* type_name() { return "PyObject *"; }
  };  

  template <>  struct traits_asval<PyObject * > {   
    typedef PyObject * value_type;
    static int asval(PyObject *obj, value_type *val) {
      if (val) *val = obj;
      return SWIG_OK;
    }
  };

  template <> 
  struct traits_check<PyObject *, value_category> {
    static bool check(PyObject *) {
      return true;
    }
  };

  template <>  struct traits_from<PyObject *> {
    typedef PyObject * value_type;
    static PyObject *from(const value_type& val) {
      Py_XINCREF(val);
      return val;
    }
  };
  
}

namespace swig {
  template <class Difference>
  inline size_t
  check_index(Difference i, size_t size, bool insert = false) {
    if ( i < 0 ) {
      if ((size_t) (-i) <= size)
	return (size_t) (i + size);
    } else if ( (size_t) i < size ) {
      return (size_t) i;
    } else if (insert && ((size_t) i == size)) {
      return size;
    }
    throw std::out_of_range("index out of range");
  }

  template <class Difference>
  void
  slice_adjust(Difference i, Difference j, Py_ssize_t step, size_t size, Difference &ii, Difference &jj, bool insert = false) {
    if (step == 0) {
      throw std::invalid_argument("slice step cannot be zero");
    } else if (step > 0) {
      // Required range: 0 <= i < size, 0 <= j < size
      if (i < 0) {
        ii = 0;
      } else if (i < (Difference)size) {
        ii = i;
      } else if (insert && (i >= (Difference)size)) {
        ii = (Difference)size;
      }
      if ( j < 0 ) {
        jj = 0;
      } else {
        jj = (j < (Difference)size) ? j : (Difference)size;
      }
    } else {
      // Required range: -1 <= i < size-1, -1 <= j < size-1
      if (i < -1) {
        ii = -1;
      } else if (i < (Difference) size) {
        ii = i;
      } else if (i >= (Difference)(size-1)) {
        ii = (Difference)(size-1);
      }
      if (j < -1) {
        jj = -1;
      } else {
        jj = (j < (Difference)size ) ? j : (Difference)(size-1);
      }
    }
  }

  template <class Sequence, class Difference>
  inline typename Sequence::iterator
  getpos(Sequence* self, Difference i)  {
    typename Sequence::iterator pos = self->begin();
    std::advance(pos, check_index(i,self->size()));
    return pos;
  }

  template <class Sequence, class Difference>
  inline typename Sequence::const_iterator
  cgetpos(const Sequence* self, Difference i)  {
    typename Sequence::const_iterator pos = self->begin();
    std::advance(pos, check_index(i,self->size()));
    return pos;
  }

  template <class Sequence, class Difference>
  inline Sequence*
  getslice(const Sequence* self, Difference i, Difference j, Py_ssize_t step) {
    typename Sequence::size_type size = self->size();
    Difference ii = 0;
    Difference jj = 0;
    swig::slice_adjust(i, j, step, size, ii, jj);

    if (step > 0) {
      typename Sequence::const_iterator sb = self->begin();
      typename Sequence::const_iterator se = self->begin();
      std::advance(sb,ii);
      std::advance(se,jj);
      if (step == 1) {
        return new Sequence(sb, se);
      } else {
        Sequence *sequence = new Sequence();
        typename Sequence::const_iterator it = sb;
        while (it!=se) {
          sequence->push_back(*it);
          for (Py_ssize_t c=0; c<step && it!=se; ++c)
            it++;
        }
        return sequence;
      } 
    } else {
      Sequence *sequence = new Sequence();
      if (ii > jj) {
        typename Sequence::const_reverse_iterator sb = self->rbegin();
        typename Sequence::const_reverse_iterator se = self->rbegin();
        std::advance(sb,size-ii-1);
        std::advance(se,size-jj-1);
        typename Sequence::const_reverse_iterator it = sb;
        while (it!=se) {
          sequence->push_back(*it);
          for (Py_ssize_t c=0; c<-step && it!=se; ++c)
            it++;
        }
      }
      return sequence;
    }
  }

  template <class Sequence, class Difference, class InputSeq>
  inline void
  setslice(Sequence* self, Difference i, Difference j, Py_ssize_t step, const InputSeq& is = InputSeq()) {
    typename Sequence::size_type size = self->size();
    Difference ii = 0;
    Difference jj = 0;
    swig::slice_adjust(i, j, step, size, ii, jj, true);
    if (step > 0) {
      if (jj < ii)
        jj = ii;
      if (step == 1) {
        size_t ssize = jj - ii;
        if (ssize <= is.size()) {
          // expanding/staying the same size
          typename Sequence::iterator sb = self->begin();
          typename InputSeq::const_iterator isit = is.begin();
          std::advance(sb,ii);
          std::advance(isit, jj - ii);
          self->insert(std::copy(is.begin(), isit, sb), isit, is.end());
        } else {
          // shrinking
          typename Sequence::iterator sb = self->begin();
          typename Sequence::iterator se = self->begin();
          std::advance(sb,ii);
          std::advance(se,jj);
          self->erase(sb,se);
          sb = self->begin();
          std::advance(sb,ii);
          self->insert(sb, is.begin(), is.end());
        }
      } else {
        size_t replacecount = (jj - ii + step - 1) / step;
        if (is.size() != replacecount) {
          char msg[1024];
          sprintf(msg, "attempt to assign sequence of size %lu to extended slice of size %lu", (unsigned long)is.size(), (unsigned long)replacecount);
          throw std::invalid_argument(msg);
        }
        typename Sequence::const_iterator isit = is.begin();
        typename Sequence::iterator it = self->begin();
        std::advance(it,ii);
        for (size_t rc=0; rc<replacecount; ++rc) {
          *it++ = *isit++;
          for (Py_ssize_t c=0; c<(step-1); ++c)
            it++;
        }
      }
    } else {
      if (jj > ii)
        jj = ii;
      size_t replacecount = (ii - jj - step - 1) / -step;
      if (is.size() != replacecount) {
        char msg[1024];
        sprintf(msg, "attempt to assign sequence of size %lu to extended slice of size %lu", (unsigned long)is.size(), (unsigned long)replacecount);
        throw std::invalid_argument(msg);
      }
      typename Sequence::const_iterator isit = is.begin();
      typename Sequence::reverse_iterator it = self->rbegin();
      std::advance(it,size-ii-1);
      for (size_t rc=0; rc<replacecount; ++rc) {
        *it++ = *isit++;
        for (Py_ssize_t c=0; c<(-step-1); ++c)
          it++;
      }
    }
  }

  template <class Sequence, class Difference>
  inline void
  delslice(Sequence* self, Difference i, Difference j, Py_ssize_t step) {
    typename Sequence::size_type size = self->size();
    Difference ii = 0;
    Difference jj = 0;
    swig::slice_adjust(i, j, step, size, ii, jj, true);
    if (step > 0) {
      if (jj > ii) {
        typename Sequence::iterator sb = self->begin();
        std::advance(sb,ii);
        if (step == 1) {
          typename Sequence::iterator se = self->begin();
          std::advance(se,jj);
          self->erase(sb,se);
        } else {
          typename Sequence::iterator it = sb;
          size_t delcount = (jj - ii + step - 1) / step;
          while (delcount) {
            it = self->erase(it);
            if (it==self->end())
              break;
            for (Py_ssize_t c=0; c<(step-1); ++c)
              it++;
            delcount--;
          }
        }
      }
    } else {
      if (ii > jj) {
        typename Sequence::reverse_iterator sb = self->rbegin();
        std::advance(sb,size-ii-1);
        typename Sequence::reverse_iterator it = sb;
        size_t delcount = (ii - jj - step - 1) / -step;
        while (delcount) {
          self->erase((++it).base());
          if (it==self->rend())
            break;
          for (Py_ssize_t c=0; c<(-step-1); ++c)
            it++;
          delcount--;
        }
      }
    }
  }
}


#if defined(__SUNPRO_CC) && defined(_RWSTD_VER)
#  if !defined(SWIG_NO_STD_NOITERATOR_TRAITS_STL)
#    define SWIG_STD_NOITERATOR_TRAITS_STL
#  endif
#endif

#if !defined(SWIG_STD_NOITERATOR_TRAITS_STL)
#include <iterator>
#else
namespace std {
  template <class Iterator>
  struct iterator_traits {
    typedef ptrdiff_t difference_type;
    typedef typename Iterator::value_type value_type;
  };

  template <class Iterator, class Category,class T, class Reference, class Pointer, class Distance>
  struct iterator_traits<__reverse_bi_iterator<Iterator,Category,T,Reference,Pointer,Distance> > {
    typedef Distance difference_type;
    typedef T value_type;
  };

  template <class T>
  struct iterator_traits<T*> {
    typedef T value_type;
    typedef ptrdiff_t difference_type;
  };

  template<typename _InputIterator>
  inline typename iterator_traits<_InputIterator>::difference_type
  distance(_InputIterator __first, _InputIterator __last)
  {
    typename iterator_traits<_InputIterator>::difference_type __n = 0;
    while (__first != __last) {
      ++__first; ++__n;
    }
    return __n;
  }
}
#endif


namespace swig {
  template<typename OutIterator>
  class SwigPyIterator_T :  public SwigPyIterator
  {
  public:
    typedef OutIterator out_iterator;
    typedef typename std::iterator_traits<out_iterator>::value_type value_type;    
    typedef SwigPyIterator_T<out_iterator> self_type;

    SwigPyIterator_T(out_iterator curr, PyObject *seq)
      : SwigPyIterator(seq), current(curr)
    {
    }

    const out_iterator& get_current() const
    {
      return current;
    }

    
    bool equal (const SwigPyIterator &iter) const
    {
      const self_type *iters = dynamic_cast<const self_type *>(&iter);
      if (iters) {
	return (current == iters->get_current());
      } else {
	throw std::invalid_argument("bad iterator type");
      }
    }
    
    ptrdiff_t distance(const SwigPyIterator &iter) const
    {
      const self_type *iters = dynamic_cast<const self_type *>(&iter);
      if (iters) {
	return std::distance(current, iters->get_current());
      } else {
	throw std::invalid_argument("bad iterator type");
      }
    }    
    
  protected:
    out_iterator current;
  };
  
  template <class ValueType>
  struct from_oper 
  {
    typedef const ValueType& argument_type;
    typedef PyObject *result_type;
    result_type operator()(argument_type v) const
    {
      return swig::from(v);
    }
  };

  template<typename OutIterator, 
	   typename ValueType = typename std::iterator_traits<OutIterator>::value_type,
	   typename FromOper = from_oper<ValueType> >
  class SwigPyIteratorOpen_T :  public SwigPyIterator_T<OutIterator>
  {
  public:
    FromOper from;
    typedef OutIterator out_iterator;
    typedef ValueType value_type;
    typedef SwigPyIterator_T<out_iterator>  base;
    typedef SwigPyIteratorOpen_T<OutIterator, ValueType, FromOper> self_type;
    
    SwigPyIteratorOpen_T(out_iterator curr, PyObject *seq)
      : SwigPyIterator_T<OutIterator>(curr, seq)
    {
    }
    
    PyObject *value() const {
      return from(static_cast<const value_type&>(*(base::current)));
    }
    
    SwigPyIterator *copy() const
    {
      return new self_type(*this);
    }

    SwigPyIterator *incr(size_t n = 1)
    {
      while (n--) {
	++base::current;
      }
      return this;
    }

    SwigPyIterator *decr(size_t n = 1)
    {
      while (n--) {
	--base::current;
      }
      return this;
    }
  };

  template<typename OutIterator, 
	   typename ValueType = typename std::iterator_traits<OutIterator>::value_type,
	   typename FromOper = from_oper<ValueType> >
  class SwigPyIteratorClosed_T :  public SwigPyIterator_T<OutIterator>
  {
  public:
    FromOper from;
    typedef OutIterator out_iterator;
    typedef ValueType value_type;
    typedef SwigPyIterator_T<out_iterator>  base;    
    typedef SwigPyIteratorClosed_T<OutIterator, ValueType, FromOper> self_type;
    
    SwigPyIteratorClosed_T(out_iterator curr, out_iterator first, out_iterator last, PyObject *seq)
      : SwigPyIterator_T<OutIterator>(curr, seq), begin(first), end(last)
    {
    }
    
    PyObject *value() const {
      if (base::current == end) {
	throw stop_iteration();
      } else {
	return from(static_cast<const value_type&>(*(base::current)));
      }
    }
    
    SwigPyIterator *copy() const
    {
      return new self_type(*this);
    }

    SwigPyIterator *incr(size_t n = 1)
    {
      while (n--) {
	if (base::current == end) {
	  throw stop_iteration();
	} else {
	  ++base::current;
	}
      }
      return this;
    }

    SwigPyIterator *decr(size_t n = 1)
    {
      while (n--) {
	if (base::current == begin) {
	  throw stop_iteration();
	} else {
	  --base::current;
	}
      }
      return this;
    }

  private:
    out_iterator begin;
    out_iterator end;
  };

  template<typename OutIter>
  inline SwigPyIterator*
  make_output_iterator(const OutIter& current, const OutIter& begin,const OutIter& end, PyObject *seq = 0)
  {
    return new SwigPyIteratorClosed_T<OutIter>(current, begin, end, seq);
  }

  template<typename OutIter>
  inline SwigPyIterator*
  make_output_iterator(const OutIter& current, PyObject *seq = 0)
  {
    return new SwigPyIteratorOpen_T<OutIter>(current, seq);
  }

}


namespace swig
{
  template <class T>
  struct SwigPySequence_Ref
  {
    SwigPySequence_Ref(PyObject* seq, int index)
      : _seq(seq), _index(index)
    {
    }
    
    operator T () const
    {
      swig::SwigVar_PyObject item = PySequence_GetItem(_seq, _index);
      try {
	return swig::as<T>(item, true);
      } catch (std::exception& e) {
	char msg[1024];
	sprintf(msg, "in sequence element %d ", _index);
	if (!PyErr_Occurred()) {
	  ::SWIG_Error(SWIG_TypeError,  swig::type_name<T>());
	}
	SWIG_Python_AddErrorMsg(msg);
	SWIG_Python_AddErrorMsg(e.what());
	throw;
      }
    }

    SwigPySequence_Ref& operator=(const T& v)
    {
      PySequence_SetItem(_seq, _index, swig::from<T>(v));
      return *this;
    }

  private:
    PyObject* _seq;
    int _index;
  };

  template <class T>
  struct SwigPySequence_ArrowProxy
  {
    SwigPySequence_ArrowProxy(const T& x): m_value(x) {}
    const T* operator->() const { return &m_value; }
    operator const T*() const { return &m_value; }
    T m_value;
  };

  template <class T, class Reference >
  struct SwigPySequence_InputIterator
  {
    typedef SwigPySequence_InputIterator<T, Reference > self;

    typedef std::random_access_iterator_tag iterator_category;
    typedef Reference reference;
    typedef T value_type;
    typedef T* pointer;
    typedef int difference_type;

    SwigPySequence_InputIterator()
    {
    }

    SwigPySequence_InputIterator(PyObject* seq, int index)
      : _seq(seq), _index(index)
    {
    }

    reference operator*() const
    {
      return reference(_seq, _index);
    }

    SwigPySequence_ArrowProxy<T>
    operator->() const {
      return SwigPySequence_ArrowProxy<T>(operator*());
    }

    bool operator==(const self& ri) const
    {
      return (_index == ri._index) && (_seq == ri._seq);
    }

    bool operator!=(const self& ri) const
    {
      return !(operator==(ri));
    }

    self& operator ++ ()
    {
      ++_index;
      return *this;
    }

    self& operator -- ()
    {
      --_index;
      return *this;
    }

    self& operator += (difference_type n)
    {
      _index += n;
      return *this;
    }

    self operator +(difference_type n) const
    {
      return self(_seq, _index + n);
    }

    self& operator -= (difference_type n)
    {
      _index -= n;
      return *this;
    }

    self operator -(difference_type n) const
    {
      return self(_seq, _index - n);
    }

    difference_type operator - (const self& ri) const
    {
      return _index - ri._index;
    }

    bool operator < (const self& ri) const
    {
      return _index < ri._index;
    }

    reference
    operator[](difference_type n) const
    {
      return reference(_seq, _index + n);
    }

  private:
    PyObject* _seq;
    difference_type _index;
  };

  template <class T>
  struct SwigPySequence_Cont
  {
    typedef SwigPySequence_Ref<T> reference;
    typedef const SwigPySequence_Ref<T> const_reference;
    typedef T value_type;
    typedef T* pointer;
    typedef int difference_type;
    typedef int size_type;
    typedef const pointer const_pointer;
    typedef SwigPySequence_InputIterator<T, reference> iterator;
    typedef SwigPySequence_InputIterator<T, const_reference> const_iterator;

    SwigPySequence_Cont(PyObject* seq) : _seq(0)
    {
      if (!PySequence_Check(seq)) {
	throw std::invalid_argument("a sequence is expected");
      }
      _seq = seq;
      Py_INCREF(_seq);
    }

    ~SwigPySequence_Cont()
    {
      Py_XDECREF(_seq);
    }

    size_type size() const
    {
      return static_cast<size_type>(PySequence_Size(_seq));
    }

    bool empty() const
    {
      return size() == 0;
    }

    iterator begin()
    {
      return iterator(_seq, 0);
    }

    const_iterator begin() const
    {
      return const_iterator(_seq, 0);
    }

    iterator end()
    {
      return iterator(_seq, size());
    }

    const_iterator end() const
    {
      return const_iterator(_seq, size());
    }

    reference operator[](difference_type n)
    {
      return reference(_seq, n);
    }

    const_reference operator[](difference_type n)  const
    {
      return const_reference(_seq, n);
    }

    bool check(bool set_err = true) const
    {
      int s = size();
      for (int i = 0; i < s; ++i) {
	swig::SwigVar_PyObject item = PySequence_GetItem(_seq, i);
	if (!swig::check<value_type>(item)) {
	  if (set_err) {
	    char msg[1024];
	    sprintf(msg, "in sequence element %d", i);
	    SWIG_Error(SWIG_RuntimeError, msg);
	  }
	  return false;
	}
      }
      return true;
    }

  private:
    PyObject* _seq;
  };

}


  namespace swig {
    template <>  struct traits<CString > {
      typedef pointer_category category;
      static const char* type_name() { return"CString"; }
    };
  }


namespace swig {
  template <class SwigPySeq, class Seq>
  inline void
  assign(const SwigPySeq& swigpyseq, Seq* seq) {
    // seq->assign(swigpyseq.begin(), swigpyseq.end()); // not used as not always implemented
    typedef typename SwigPySeq::value_type value_type;
    typename SwigPySeq::const_iterator it = swigpyseq.begin();
    for (;it != swigpyseq.end(); ++it) {
      seq->insert(seq->end(),(value_type)(*it));
    }
  }

  template <class Seq, class T = typename Seq::value_type >
  struct traits_asptr_stdseq {
    typedef Seq sequence;
    typedef T value_type;

    static int asptr(PyObject *obj, sequence **seq) {
      if (obj == Py_None || SWIG_Python_GetSwigThis(obj)) {
	sequence *p;
	if (::SWIG_ConvertPtr(obj,(void**)&p,
			      swig::type_info<sequence>(),0) == SWIG_OK) {
	  if (seq) *seq = p;
	  return SWIG_OLDOBJ;
	}
      } else if (PySequence_Check(obj)) {
	try {
	  SwigPySequence_Cont<value_type> swigpyseq(obj);
	  if (seq) {
	    sequence *pseq = new sequence();
	    assign(swigpyseq, pseq);
	    *seq = pseq;
	    return SWIG_NEWOBJ;
	  } else {
	    return swigpyseq.check() ? SWIG_OK : SWIG_ERROR;
	  }
	} catch (std::exception& e) {
	  if (seq) {
	    if (!PyErr_Occurred()) {
	      PyErr_SetString(PyExc_TypeError, e.what());
	    }
	  }
	  return SWIG_ERROR;
	}
      }
      return SWIG_ERROR;
    }
  };

  template <class Seq, class T = typename Seq::value_type >
  struct traits_from_stdseq {
    typedef Seq sequence;
    typedef T value_type;
    typedef typename Seq::size_type size_type;
    typedef typename sequence::const_iterator const_iterator;

    static PyObject *from(const sequence& seq) {
#ifdef SWIG_PYTHON_EXTRA_NATIVE_CONTAINERS
      swig_type_info *desc = swig::type_info<sequence>();
      if (desc && desc->clientdata) {
	return SWIG_NewPointerObj(new sequence(seq), desc, SWIG_POINTER_OWN);
      }
#endif
      size_type size = seq.size();
      if (size <= (size_type)INT_MAX) {
	PyObject *obj = PyTuple_New((int)size);
	int i = 0;
	for (const_iterator it = seq.begin();
	     it != seq.end(); ++it, ++i) {
	  PyTuple_SetItem(obj,i,swig::from<value_type>(*it));
	}
	return obj;
      } else {
	PyErr_SetString(PyExc_OverflowError,"sequence size not valid in python");
	return NULL;
      }
    }
  };
}


  namespace swig {
    template <class T >
    struct traits_asptr<std::list<T> >  {
      static int asptr(PyObject *obj, std::list<T> **lis) {
	return traits_asptr_stdseq<std::list<T> >::asptr(obj, lis);
      }
    };

    template <class T>
    struct traits_from<std::list<T> > {
      static PyObject *from(const std::list<T> & vec) {
	return traits_from_stdseq<std::list<T> >::from(vec);
      }
    };
  }


      namespace swig {
	template <>  struct traits<std::list<CString, std::allocator< CString > > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::list<" "CString" ", " "std::allocator< CString >" " >";
	  }
	};
      }
    
SWIGINTERN swig::SwigPyIterator *std_list_Sl_CString_Sg__iterator(std::list< CString > *self,PyObject **PYTHON_SELF){
      return swig::make_output_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN bool std_list_Sl_CString_Sg____nonzero__(std::list< CString > const *self){
      return !(self->empty());
    }
SWIGINTERN bool std_list_Sl_CString_Sg____bool__(std::list< CString > const *self){
      return !(self->empty());
    }
SWIGINTERN std::list< CString >::size_type std_list_Sl_CString_Sg____len__(std::list< CString > const *self){
      return self->size();
    }

SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long  (unsigned long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLong(value) : PyLong_FromLong(static_cast< long >(value)); 
}


SWIGINTERNINLINE PyObject *
SWIG_From_size_t  (size_t value)
{    
  return SWIG_From_unsigned_SS_long  (static_cast< unsigned long >(value));
}

SWIGINTERN std::list< CString >::value_type std_list_Sl_CString_Sg__pop(std::list< CString > *self){
      if (self->size() == 0)
	throw std::out_of_range("pop from empty container");
      std::list<CString,std::allocator< CString > >::value_type x = self->back();
      self->pop_back();
      return x;
    }

SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERNINLINE PyObject *
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  if (carray) {
    if (size > INT_MAX) {
      swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
      return pchar_descriptor ? 
	SWIG_InternalNewPointerObj(const_cast< char * >(carray), pchar_descriptor, 0) : SWIG_Py_Void();
    } else {
#if PY_VERSION_HEX >= 0x03000000
      return PyUnicode_FromStringAndSize(carray, static_cast< int >(size));
#else
      return PyString_FromStringAndSize(carray, static_cast< int >(size));
#endif
    }
  } else {
    return SWIG_Py_Void();
  }
}


SWIGINTERNINLINE PyObject *
SWIG_From_std_string  (const CString& s)
{
  if (s.size()) {
    return SWIG_FromCharPtrAndSize(s.data(), s.size());
  } else {
    return SWIG_FromCharPtrAndSize(s.c_str(), 0);
  }
}

SWIGINTERN std::list< CString,std::allocator< CString > > *std_list_Sl_CString_Sg____getslice__(std::list< CString > *self,std::list< CString >::difference_type i,std::list< CString >::difference_type j){
      return swig::getslice(self, i, j, 1);
    }
SWIGINTERN void std_list_Sl_CString_Sg____setslice____SWIG_0(std::list< CString > *self,std::list< CString >::difference_type i,std::list< CString >::difference_type j,std::list< CString,std::allocator< CString > > const &v=std::list< CString,std::allocator< CString > >()){
      swig::setslice(self, i, j, 1, v);
    }
SWIGINTERN void std_list_Sl_CString_Sg____delslice__(std::list< CString > *self,std::list< CString >::difference_type i,std::list< CString >::difference_type j){
      swig::delslice(self, i, j, 1);
    }
SWIGINTERN void std_list_Sl_CString_Sg____delitem____SWIG_0(std::list< CString > *self,std::list< CString >::difference_type i){
      self->erase(swig::getpos(self,i));
    }
SWIGINTERN std::list< CString,std::allocator< CString > > *std_list_Sl_CString_Sg____getitem____SWIG_0(std::list< CString > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return NULL;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::list<CString,std::allocator< CString > >::difference_type id = i;
      std::list<CString,std::allocator< CString > >::difference_type jd = j;
      return swig::getslice(self, id, jd, step);
    }
SWIGINTERN void std_list_Sl_CString_Sg____setitem____SWIG_0(std::list< CString > *self,PySliceObject *slice,std::list< CString,std::allocator< CString > > const &v){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::list<CString,std::allocator< CString > >::difference_type id = i;
      std::list<CString,std::allocator< CString > >::difference_type jd = j;
      swig::setslice(self, id, jd, step, v);
    }
SWIGINTERN void std_list_Sl_CString_Sg____setitem____SWIG_1(std::list< CString > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::list<CString,std::allocator< CString > >::difference_type id = i;
      std::list<CString,std::allocator< CString > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN void std_list_Sl_CString_Sg____delitem____SWIG_1(std::list< CString > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::list<CString,std::allocator< CString > >::difference_type id = i;
      std::list<CString,std::allocator< CString > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN std::list< CString >::value_type const &std_list_Sl_CString_Sg____getitem____SWIG_1(std::list< CString > const *self,std::list< CString >::difference_type i){
      return *(swig::cgetpos(self, i));
    }

SWIGINTERN int
SWIG_AsCharPtrAndSize(PyObject *obj, char** cptr, size_t* psize, int *alloc)
{
#if PY_VERSION_HEX>=0x03000000
  if (PyUnicode_Check(obj))
#else  
  if (PyString_Check(obj))
#endif
  {
    char *cstr; Py_ssize_t len;
#if PY_VERSION_HEX>=0x03000000
    if (!alloc && cptr) {
        /* We can't allow converting without allocation, since the internal
           representation of string in Python 3 is UCS-2/UCS-4 but we require
           a UTF-8 representation.
           TODO(bhy) More detailed explanation */
        return SWIG_RuntimeError;
    }
    obj = PyUnicode_AsUTF8String(obj);
    PyBytes_AsStringAndSize(obj, &cstr, &len);
    if(alloc) *alloc = SWIG_NEWOBJ;
#else
    PyString_AsStringAndSize(obj, &cstr, &len);
#endif
    if (cptr) {
      if (alloc) {
	/* 
	   In python the user should not be able to modify the inner
	   string representation. To warranty that, if you define
	   SWIG_PYTHON_SAFE_CSTRINGS, a new/copy of the python string
	   buffer is always returned.

	   The default behavior is just to return the pointer value,
	   so, be careful.
	*/ 
#if defined(SWIG_PYTHON_SAFE_CSTRINGS)
	if (*alloc != SWIG_OLDOBJ) 
#else
	if (*alloc == SWIG_NEWOBJ) 
#endif
	  {
	    *cptr = reinterpret_cast< char* >(memcpy((new char[len + 1]), cstr, sizeof(char)*(len + 1)));
	    *alloc = SWIG_NEWOBJ;
	  }
	else {
	  *cptr = cstr;
	  *alloc = SWIG_OLDOBJ;
	}
      } else {
        #if PY_VERSION_HEX>=0x03000000
        assert(0); /* Should never reach here in Python 3 */
        #endif
	*cptr = SWIG_Python_str_AsChar(obj);
      }
    }
    if (psize) *psize = len + 1;
#if PY_VERSION_HEX>=0x03000000
    Py_XDECREF(obj);
#endif
    return SWIG_OK;
  } else {
    swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
    if (pchar_descriptor) {
      void* vptr = 0;
      if (SWIG_ConvertPtr(obj, &vptr, pchar_descriptor, 0) == SWIG_OK) {
	if (cptr) *cptr = (char *) vptr;
	if (psize) *psize = vptr ? (strlen((char *)vptr) + 1) : 0;
	if (alloc) *alloc = SWIG_OLDOBJ;
	return SWIG_OK;
      }
    }
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsPtr_std_string (PyObject * obj, CString **val)
{
  char* buf = 0 ; size_t size = 0; int alloc = SWIG_OLDOBJ;
  if (SWIG_IsOK((SWIG_AsCharPtrAndSize(obj, &buf, &size, &alloc)))) {
    if (buf) {
      if (val) *val = new CString(buf, size - 1);
      if (alloc == SWIG_NEWOBJ) free((char*)buf);
      return SWIG_NEWOBJ;
    } else {
      if (val) *val = 0;
      return SWIG_OLDOBJ;
    }
  } else {
    static int init = 0;
    static swig_type_info* descriptor = 0;
    if (!init) {
      descriptor = SWIG_TypeQuery("CString" " *");
      init = 1;
    }
    if (descriptor) {
      CString *vptr;
      int res = SWIG_ConvertPtr(obj, (void**)&vptr, descriptor, 0);
      if (SWIG_IsOK(res) && val) *val = vptr;
      return res;
    }
  }
  return SWIG_ERROR;
}

SWIGINTERN void std_list_Sl_CString_Sg____setitem____SWIG_2(std::list< CString > *self,std::list< CString >::difference_type i,std::list< CString >::value_type const &x){
      *(swig::getpos(self,i)) = x;
    }
SWIGINTERN void std_list_Sl_CString_Sg__append(std::list< CString > *self,std::list< CString >::value_type const &x){
      self->push_back(x);
    }

  namespace swig {
    template <>  struct traits<CIRCNetwork > {
      typedef pointer_category category;
      static const char* type_name() { return"CIRCNetwork"; }
    };
  }


  namespace swig {
    template <class T>
    struct traits_asptr<std::vector<T> >  {
      static int asptr(PyObject *obj, std::vector<T> **vec) {
	return traits_asptr_stdseq<std::vector<T> >::asptr(obj, vec);
      }
    };
    
    template <class T>
    struct traits_from<std::vector<T> > {
      static PyObject *from(const std::vector<T>& vec) {
	return traits_from_stdseq<std::vector<T> >::from(vec);
      }
    };
  }


      namespace swig {
	template <>  struct traits<std::vector<CIRCNetwork*, std::allocator< CIRCNetwork * > > > {
	  typedef value_category category;
	  static const char* type_name() {
	    return "std::vector<" "CIRCNetwork" " *," "std::allocator< CIRCNetwork * >" " >";
	  }
	};
      }
    
SWIGINTERN swig::SwigPyIterator *std_vector_Sl_CIRCNetwork_Sm__Sg__iterator(std::vector< CIRCNetwork * > *self,PyObject **PYTHON_SELF){
      return swig::make_output_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN bool std_vector_Sl_CIRCNetwork_Sm__Sg____nonzero__(std::vector< CIRCNetwork * > const *self){
      return !(self->empty());
    }
SWIGINTERN bool std_vector_Sl_CIRCNetwork_Sm__Sg____bool__(std::vector< CIRCNetwork * > const *self){
      return !(self->empty());
    }
SWIGINTERN std::vector< CIRCNetwork * >::size_type std_vector_Sl_CIRCNetwork_Sm__Sg____len__(std::vector< CIRCNetwork * > const *self){
      return self->size();
    }
SWIGINTERN std::vector< CIRCNetwork * >::value_type std_vector_Sl_CIRCNetwork_Sm__Sg__pop(std::vector< CIRCNetwork * > *self){
      if (self->size() == 0)
	throw std::out_of_range("pop from empty container");
      std::vector<CIRCNetwork*,std::allocator< CIRCNetwork * > >::value_type x = self->back();
      self->pop_back();
      return x;
    }
SWIGINTERN std::vector< CIRCNetwork *,std::allocator< CIRCNetwork * > > *std_vector_Sl_CIRCNetwork_Sm__Sg____getslice__(std::vector< CIRCNetwork * > *self,std::vector< CIRCNetwork * >::difference_type i,std::vector< CIRCNetwork * >::difference_type j){
      return swig::getslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_CIRCNetwork_Sm__Sg____setslice____SWIG_0(std::vector< CIRCNetwork * > *self,std::vector< CIRCNetwork * >::difference_type i,std::vector< CIRCNetwork * >::difference_type j,std::vector< CIRCNetwork *,std::allocator< CIRCNetwork * > > const &v=std::vector< CIRCNetwork *,std::allocator< CIRCNetwork * > >()){
      swig::setslice(self, i, j, 1, v);
    }
SWIGINTERN void std_vector_Sl_CIRCNetwork_Sm__Sg____delslice__(std::vector< CIRCNetwork * > *self,std::vector< CIRCNetwork * >::difference_type i,std::vector< CIRCNetwork * >::difference_type j){
      swig::delslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_CIRCNetwork_Sm__Sg____delitem____SWIG_0(std::vector< CIRCNetwork * > *self,std::vector< CIRCNetwork * >::difference_type i){
      self->erase(swig::getpos(self,i));
    }
SWIGINTERN std::vector< CIRCNetwork *,std::allocator< CIRCNetwork * > > *std_vector_Sl_CIRCNetwork_Sm__Sg____getitem____SWIG_0(std::vector< CIRCNetwork * > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return NULL;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<CIRCNetwork*,std::allocator< CIRCNetwork * > >::difference_type id = i;
      std::vector<CIRCNetwork*,std::allocator< CIRCNetwork * > >::difference_type jd = j;
      return swig::getslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_CIRCNetwork_Sm__Sg____setitem____SWIG_0(std::vector< CIRCNetwork * > *self,PySliceObject *slice,std::vector< CIRCNetwork *,std::allocator< CIRCNetwork * > > const &v){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<CIRCNetwork*,std::allocator< CIRCNetwork * > >::difference_type id = i;
      std::vector<CIRCNetwork*,std::allocator< CIRCNetwork * > >::difference_type jd = j;
      swig::setslice(self, id, jd, step, v);
    }
SWIGINTERN void std_vector_Sl_CIRCNetwork_Sm__Sg____setitem____SWIG_1(std::vector< CIRCNetwork * > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<CIRCNetwork*,std::allocator< CIRCNetwork * > >::difference_type id = i;
      std::vector<CIRCNetwork*,std::allocator< CIRCNetwork * > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_CIRCNetwork_Sm__Sg____delitem____SWIG_1(std::vector< CIRCNetwork * > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<CIRCNetwork*,std::allocator< CIRCNetwork * > >::difference_type id = i;
      std::vector<CIRCNetwork*,std::allocator< CIRCNetwork * > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN std::vector< CIRCNetwork * >::value_type std_vector_Sl_CIRCNetwork_Sm__Sg____getitem____SWIG_1(std::vector< CIRCNetwork * > *self,std::vector< CIRCNetwork * >::difference_type i){
      return *(swig::cgetpos(self, i));
    }
SWIGINTERN void std_vector_Sl_CIRCNetwork_Sm__Sg____setitem____SWIG_2(std::vector< CIRCNetwork * > *self,std::vector< CIRCNetwork * >::difference_type i,std::vector< CIRCNetwork * >::value_type x){
      *(swig::getpos(self,i)) = x;
    }
SWIGINTERN void std_vector_Sl_CIRCNetwork_Sm__Sg__append(std::vector< CIRCNetwork * > *self,std::vector< CIRCNetwork * >::value_type x){
      self->push_back(x);
    }

  namespace swig {
    template <>  struct traits<CChan > {
      typedef pointer_category category;
      static const char* type_name() { return"CChan"; }
    };
  }


      namespace swig {
	template <>  struct traits<std::vector<CChan*, std::allocator< CChan * > > > {
	  typedef value_category category;
	  static const char* type_name() {
	    return "std::vector<" "CChan" " *," "std::allocator< CChan * >" " >";
	  }
	};
      }
    
SWIGINTERN swig::SwigPyIterator *std_vector_Sl_CChan_Sm__Sg__iterator(std::vector< CChan * > *self,PyObject **PYTHON_SELF){
      return swig::make_output_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN bool std_vector_Sl_CChan_Sm__Sg____nonzero__(std::vector< CChan * > const *self){
      return !(self->empty());
    }
SWIGINTERN bool std_vector_Sl_CChan_Sm__Sg____bool__(std::vector< CChan * > const *self){
      return !(self->empty());
    }
SWIGINTERN std::vector< CChan * >::size_type std_vector_Sl_CChan_Sm__Sg____len__(std::vector< CChan * > const *self){
      return self->size();
    }
SWIGINTERN std::vector< CChan * >::value_type std_vector_Sl_CChan_Sm__Sg__pop(std::vector< CChan * > *self){
      if (self->size() == 0)
	throw std::out_of_range("pop from empty container");
      std::vector<CChan*,std::allocator< CChan * > >::value_type x = self->back();
      self->pop_back();
      return x;
    }
SWIGINTERN std::vector< CChan *,std::allocator< CChan * > > *std_vector_Sl_CChan_Sm__Sg____getslice__(std::vector< CChan * > *self,std::vector< CChan * >::difference_type i,std::vector< CChan * >::difference_type j){
      return swig::getslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_CChan_Sm__Sg____setslice____SWIG_0(std::vector< CChan * > *self,std::vector< CChan * >::difference_type i,std::vector< CChan * >::difference_type j,std::vector< CChan *,std::allocator< CChan * > > const &v=std::vector< CChan *,std::allocator< CChan * > >()){
      swig::setslice(self, i, j, 1, v);
    }
SWIGINTERN void std_vector_Sl_CChan_Sm__Sg____delslice__(std::vector< CChan * > *self,std::vector< CChan * >::difference_type i,std::vector< CChan * >::difference_type j){
      swig::delslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_CChan_Sm__Sg____delitem____SWIG_0(std::vector< CChan * > *self,std::vector< CChan * >::difference_type i){
      self->erase(swig::getpos(self,i));
    }
SWIGINTERN std::vector< CChan *,std::allocator< CChan * > > *std_vector_Sl_CChan_Sm__Sg____getitem____SWIG_0(std::vector< CChan * > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return NULL;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<CChan*,std::allocator< CChan * > >::difference_type id = i;
      std::vector<CChan*,std::allocator< CChan * > >::difference_type jd = j;
      return swig::getslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_CChan_Sm__Sg____setitem____SWIG_0(std::vector< CChan * > *self,PySliceObject *slice,std::vector< CChan *,std::allocator< CChan * > > const &v){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<CChan*,std::allocator< CChan * > >::difference_type id = i;
      std::vector<CChan*,std::allocator< CChan * > >::difference_type jd = j;
      swig::setslice(self, id, jd, step, v);
    }
SWIGINTERN void std_vector_Sl_CChan_Sm__Sg____setitem____SWIG_1(std::vector< CChan * > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<CChan*,std::allocator< CChan * > >::difference_type id = i;
      std::vector<CChan*,std::allocator< CChan * > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_CChan_Sm__Sg____delitem____SWIG_1(std::vector< CChan * > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<CChan*,std::allocator< CChan * > >::difference_type id = i;
      std::vector<CChan*,std::allocator< CChan * > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN std::vector< CChan * >::value_type std_vector_Sl_CChan_Sm__Sg____getitem____SWIG_1(std::vector< CChan * > *self,std::vector< CChan * >::difference_type i){
      return *(swig::cgetpos(self, i));
    }
SWIGINTERN void std_vector_Sl_CChan_Sm__Sg____setitem____SWIG_2(std::vector< CChan * > *self,std::vector< CChan * >::difference_type i,std::vector< CChan * >::value_type x){
      *(swig::getpos(self,i)) = x;
    }
SWIGINTERN void std_vector_Sl_CChan_Sm__Sg__append(std::vector< CChan * > *self,std::vector< CChan * >::value_type x){
      self->push_back(x);
    }

  namespace swig {
    template <>  struct traits<CNick > {
      typedef pointer_category category;
      static const char* type_name() { return"CNick"; }
    };
  }


  namespace swig {

















































    template <class T, class U >
    struct traits_asptr<std::pair<T,U> >  {
      typedef std::pair<T,U> value_type;

      static int get_pair(PyObject* first, PyObject* second,
			  std::pair<T,U> **val) 
      {
	if (val) {
	  value_type *vp = (new std::pair<T,U>);
	  T *pfirst = &(vp->first);
	  int res1 = swig::asval((PyObject*)first, pfirst);
	  if (!SWIG_IsOK(res1)) return res1;
	  U *psecond = &(vp->second);
	  int res2 = swig::asval((PyObject*)second, psecond);
	  if (!SWIG_IsOK(res2)) return res2;
	  *val = vp;
	  return SWIG_AddNewMask(res1 > res2 ? res1 : res2);
	} else {
	  T *pfirst = 0;
	  int res1 = swig::asval((PyObject*)first, pfirst);
	  if (!SWIG_IsOK(res1)) return res1;
	  U *psecond = 0;
	  int res2 = swig::asval((PyObject*)second, psecond);
	  if (!SWIG_IsOK(res2)) return res2;
	  return res1 > res2 ? res1 : res2;
	}	
      }

      static int asptr(PyObject *obj, std::pair<T,U> **val) {
	int res = SWIG_ERROR;
	if (PyTuple_Check(obj)) {
	  if (PyTuple_GET_SIZE(obj) == 2) {
	    res = get_pair(PyTuple_GET_ITEM(obj,0),PyTuple_GET_ITEM(obj,1), val);
	  }
	} else if (PySequence_Check(obj)) {
	  if (PySequence_Size(obj) == 2) {
	    swig::SwigVar_PyObject first = PySequence_GetItem(obj,0);
	    swig::SwigVar_PyObject second = PySequence_GetItem(obj,1);
	    res = get_pair(first, second, val);
	  }
	} else {
	  value_type *p;
	  res = SWIG_ConvertPtr(obj,(void**)&p,swig::type_info<value_type>(),0);
	  if (SWIG_IsOK(res) && val)  *val = p;
	}
	return res;
      }
    };


    template <class T, class U >
    struct traits_from<std::pair<T,U> >   {
      static PyObject *from(const std::pair<T,U>& val) {
	PyObject* obj = PyTuple_New(2);
	PyTuple_SetItem(obj,0,swig::from(val.first));
	PyTuple_SetItem(obj,1,swig::from(val.second));
	return obj;
      }
    };
  }





































      namespace swig {
	template <>  struct traits<std::pair< CString, CNick > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::pair<" "CString" "," "CNick" " >";
	  }
	};
      }
    

  namespace swig {
    template <class SwigPySeq, class K, class T, class Compare, class Alloc >
    inline void
    assign(const SwigPySeq& swigpyseq, std::map<K,T,Compare,Alloc > *map) {
      typedef typename std::map<K,T,Compare,Alloc >::value_type value_type;
      typename SwigPySeq::const_iterator it = swigpyseq.begin();
      for (;it != swigpyseq.end(); ++it) {
	map->insert(value_type(it->first, it->second));
      }
    }

    template <class K, class T, class Compare, class Alloc>
    struct traits_asptr<std::map<K,T,Compare,Alloc > >  {
      typedef std::map<K,T,Compare,Alloc > map_type;
      static int asptr(PyObject *obj, map_type **val) {
	int res = SWIG_ERROR;
	SWIG_PYTHON_THREAD_BEGIN_BLOCK;
	if (PyDict_Check(obj)) {
	  SwigVar_PyObject items = PyObject_CallMethod(obj,(char *)"items",NULL);
#if PY_VERSION_HEX >= 0x03000000
          /* In Python 3.x the ".items()" method returns a dict_items object */
          items = PySequence_Fast(items, ".items() didn't return a sequence!");
#endif
	  res = traits_asptr_stdseq<map_type, std::pair<K, T> >::asptr(items, val);
	} else {
	  map_type *p;
	  res = SWIG_ConvertPtr(obj,(void**)&p,swig::type_info<map_type>(),0);
	  if (SWIG_IsOK(res) && val)  *val = p;
	}
	SWIG_PYTHON_THREAD_END_BLOCK;
	return res;
      }      
    };
      
    template <class K, class T, class Compare, class Alloc >
    struct traits_from<std::map<K,T,Compare,Alloc > >  {
      typedef std::map<K,T,Compare,Alloc > map_type;
      typedef typename map_type::const_iterator const_iterator;
      typedef typename map_type::size_type size_type;

      static PyObject *asdict(const map_type& map) {
	SWIG_PYTHON_THREAD_BEGIN_BLOCK;
	size_type size = map.size();
	int pysize = (size <= (size_type) INT_MAX) ? (int) size : -1;
	if (pysize < 0) {
	  PyErr_SetString(PyExc_OverflowError,
			  "map size not valid in python");
	  SWIG_PYTHON_THREAD_END_BLOCK;
	  return NULL;
	}
	PyObject *obj = PyDict_New();
	for (const_iterator i= map.begin(); i!= map.end(); ++i) {
	  swig::SwigVar_PyObject key = swig::from(i->first);
	  swig::SwigVar_PyObject val = swig::from(i->second);
	  PyDict_SetItem(obj, key, val);
	}
	SWIG_PYTHON_THREAD_END_BLOCK;
	return obj;
      }
                
      static PyObject *from(const map_type& map) {
	swig_type_info *desc = swig::type_info<map_type>();
	if (desc && desc->clientdata) {
	  return SWIG_InternalNewPointerObj(new map_type(map), desc, SWIG_POINTER_OWN);
	} else {
	  return asdict(map);
	}
      }
    };

    template <class ValueType>
    struct from_key_oper 
    {
      typedef const ValueType& argument_type;
      typedef  PyObject *result_type;
      result_type operator()(argument_type v) const
      {
	return swig::from(v.first);
      }
    };

    template <class ValueType>
    struct from_value_oper 
    {
      typedef const ValueType& argument_type;
      typedef  PyObject *result_type;
      result_type operator()(argument_type v) const
      {
	return swig::from(v.second);
      }
    };

    template<class OutIterator, class FromOper, class ValueType = typename OutIterator::value_type>
    struct SwigPyMapIterator_T : SwigPyIteratorClosed_T<OutIterator, ValueType, FromOper>
    {
      SwigPyMapIterator_T(OutIterator curr, OutIterator first, OutIterator last, PyObject *seq)
	: SwigPyIteratorClosed_T<OutIterator,ValueType,FromOper>(curr, first, last, seq)
      {
      }
    };


    template<class OutIterator,
	     class FromOper = from_key_oper<typename OutIterator::value_type> >
    struct SwigPyMapKeyIterator_T : SwigPyMapIterator_T<OutIterator, FromOper>
    {
      SwigPyMapKeyIterator_T(OutIterator curr, OutIterator first, OutIterator last, PyObject *seq)
	: SwigPyMapIterator_T<OutIterator, FromOper>(curr, first, last, seq)
      {
      }
    };

    template<typename OutIter>
    inline SwigPyIterator*
    make_output_key_iterator(const OutIter& current, const OutIter& begin, const OutIter& end, PyObject *seq = 0)
    {
      return new SwigPyMapKeyIterator_T<OutIter>(current, begin, end, seq);
    }

    template<class OutIterator,
	     class FromOper = from_value_oper<typename OutIterator::value_type> >
    struct SwigPyMapValueITerator_T : SwigPyMapIterator_T<OutIterator, FromOper>
    {
      SwigPyMapValueITerator_T(OutIterator curr, OutIterator first, OutIterator last, PyObject *seq)
	: SwigPyMapIterator_T<OutIterator, FromOper>(curr, first, last, seq)
      {
      }
    };
    

    template<typename OutIter>
    inline SwigPyIterator*
    make_output_value_iterator(const OutIter& current, const OutIter& begin, const OutIter& end, PyObject *seq = 0)
    {
      return new SwigPyMapValueITerator_T<OutIter>(current, begin, end, seq);
    }

  }


      namespace swig {
	template <>  struct traits<std::map<CString, CNick, std::less< CString >, std::allocator< std::pair< CString const,CNick > > > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::map<" "CString" "," "CNick" "," "std::less< CString >" "," "std::allocator< std::pair< CString const,CNick > >" " >";
	  }
	};
      }
    
SWIGINTERN swig::SwigPyIterator *std_map_Sl_CString_Sc_CNick_Sg__iterator(std::map< CString,CNick > *self,PyObject **PYTHON_SELF){
      return swig::make_output_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN bool std_map_Sl_CString_Sc_CNick_Sg____nonzero__(std::map< CString,CNick > const *self){
      return !(self->empty());
    }
SWIGINTERN bool std_map_Sl_CString_Sc_CNick_Sg____bool__(std::map< CString,CNick > const *self){
      return !(self->empty());
    }
SWIGINTERN std::map< CString,CNick >::size_type std_map_Sl_CString_Sc_CNick_Sg____len__(std::map< CString,CNick > const *self){
      return self->size();
    }
SWIGINTERN std::map< CString,CNick >::mapped_type const &std_map_Sl_CString_Sc_CNick_Sg____getitem__(std::map< CString,CNick > *self,std::map< CString,CNick >::key_type const &key){
      std::map<CString,CNick,std::less< CString >,std::allocator< std::pair< CString const,CNick > > >::const_iterator i = self->find(key);
      if (i != self->end())
	return i->second;
      else
	throw std::out_of_range("key not found");
    }
SWIGINTERN void std_map_Sl_CString_Sc_CNick_Sg____delitem__(std::map< CString,CNick > *self,std::map< CString,CNick >::key_type const &key){
      std::map<CString,CNick,std::less< CString >,std::allocator< std::pair< CString const,CNick > > >::iterator i = self->find(key);
      if (i != self->end())
	self->erase(i);
      else
	throw std::out_of_range("key not found");
    }
SWIGINTERN bool std_map_Sl_CString_Sc_CNick_Sg__has_key(std::map< CString,CNick > const *self,std::map< CString,CNick >::key_type const &key){
      std::map<CString,CNick,std::less< CString >,std::allocator< std::pair< CString const,CNick > > >::const_iterator i = self->find(key);
      return i != self->end();
    }
SWIGINTERN PyObject *std_map_Sl_CString_Sc_CNick_Sg__keys(std::map< CString,CNick > *self){
      std::map<CString,CNick,std::less< CString >,std::allocator< std::pair< CString const,CNick > > >::size_type size = self->size();
      int pysize = (size <= (std::map<CString,CNick,std::less< CString >,std::allocator< std::pair< CString const,CNick > > >::size_type) INT_MAX) ? (int) size : -1;
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      if (pysize < 0) {
	PyErr_SetString(PyExc_OverflowError,
			"map size not valid in python");
	SWIG_PYTHON_THREAD_END_BLOCK;
	return NULL;
      }
      PyObject* keyList = PyList_New(pysize);
      std::map<CString,CNick,std::less< CString >,std::allocator< std::pair< CString const,CNick > > >::const_iterator i = self->begin();
      for (int j = 0; j < pysize; ++i, ++j) {
	PyList_SET_ITEM(keyList, j, swig::from(i->first));
      }
      SWIG_PYTHON_THREAD_END_BLOCK;
      return keyList;
    }
SWIGINTERN PyObject *std_map_Sl_CString_Sc_CNick_Sg__values(std::map< CString,CNick > *self){
      std::map<CString,CNick,std::less< CString >,std::allocator< std::pair< CString const,CNick > > >::size_type size = self->size();
      int pysize = (size <= (std::map<CString,CNick,std::less< CString >,std::allocator< std::pair< CString const,CNick > > >::size_type) INT_MAX) ? (int) size : -1;
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      if (pysize < 0) {
	PyErr_SetString(PyExc_OverflowError,
			"map size not valid in python");
	SWIG_PYTHON_THREAD_END_BLOCK;
	return NULL;
      }
      PyObject* valList = PyList_New(pysize);
      std::map<CString,CNick,std::less< CString >,std::allocator< std::pair< CString const,CNick > > >::const_iterator i = self->begin();
      for (int j = 0; j < pysize; ++i, ++j) {
	PyList_SET_ITEM(valList, j, swig::from(i->second));
      }
      SWIG_PYTHON_THREAD_END_BLOCK;
      return valList;
    }
SWIGINTERN PyObject *std_map_Sl_CString_Sc_CNick_Sg__items(std::map< CString,CNick > *self){
      std::map<CString,CNick,std::less< CString >,std::allocator< std::pair< CString const,CNick > > >::size_type size = self->size();
      int pysize = (size <= (std::map<CString,CNick,std::less< CString >,std::allocator< std::pair< CString const,CNick > > >::size_type) INT_MAX) ? (int) size : -1;
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      if (pysize < 0) {
	PyErr_SetString(PyExc_OverflowError,
			"map size not valid in python");
	SWIG_PYTHON_THREAD_END_BLOCK;
	return NULL;
      }    
      PyObject* itemList = PyList_New(pysize);
      std::map<CString,CNick,std::less< CString >,std::allocator< std::pair< CString const,CNick > > >::const_iterator i = self->begin();
      for (int j = 0; j < pysize; ++i, ++j) {
	PyList_SET_ITEM(itemList, j, swig::from(*i));
      }
      SWIG_PYTHON_THREAD_END_BLOCK;
      return itemList;
    }
SWIGINTERN bool std_map_Sl_CString_Sc_CNick_Sg____contains__(std::map< CString,CNick > *self,std::map< CString,CNick >::key_type const &key){
      return self->find(key) != self->end();
    }
SWIGINTERN swig::SwigPyIterator *std_map_Sl_CString_Sc_CNick_Sg__key_iterator(std::map< CString,CNick > *self,PyObject **PYTHON_SELF){
      return swig::make_output_key_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN swig::SwigPyIterator *std_map_Sl_CString_Sc_CNick_Sg__value_iterator(std::map< CString,CNick > *self,PyObject **PYTHON_SELF){
      return swig::make_output_value_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN void std_map_Sl_CString_Sc_CNick_Sg____setitem____SWIG_0(std::map< CString,CNick > *self,std::map< CString,CNick >::key_type const &key){
      self->erase(key);
    }
SWIGINTERN void std_map_Sl_CString_Sc_CNick_Sg____setitem____SWIG_1(std::map< CString,CNick > *self,std::map< CString,CNick >::key_type const &key,std::map< CString,CNick >::mapped_type const &x){
      (*self)[key] = x;
    }
SWIGINTERN PyObject *std_map_Sl_CString_Sc_CNick_Sg__asdict(std::map< CString,CNick > *self){
      return swig::traits_from< std::map<CString,CNick,std::less< CString >,std::allocator< std::pair< CString const,CNick > > > >::asdict(*self);
    }

#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


SWIGINTERN int
SWIG_AsVal_int (PyObject * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE PyObject * 
SWIG_FromCharPtr(const char *cptr)
{ 
  return SWIG_FromCharPtrAndSize(cptr, (cptr ? strlen(cptr) : 0));
}


SWIGINTERN int
SWIG_AsVal_bool (PyObject *obj, bool *val)
{
  int r = PyObject_IsTrue(obj);
  if (r == -1)
    return SWIG_ERROR;
  if (val) *val = r ? true : false;
  return SWIG_OK;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_int (PyObject * obj, unsigned int *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UINT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned int >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE PyObject* 
SWIG_From_long_SS_long  (long long value)
{
  return ((value < LONG_MIN) || (value > LONG_MAX)) ?
    PyLong_FromLongLong(value) : PyLong_FromLong(static_cast< long >(value)); 
}


SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long_SS_long  (unsigned long long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLongLong(value) : PyLong_FromLong(static_cast< long >(value)); 
}


SWIGINTERNINLINE PyObject*
  SWIG_From_int  (int value)
{
  return PyInt_FromLong((long) value);
}


SWIGINTERNINLINE PyObject*
  SWIG_From_unsigned_SS_int  (unsigned int value)
{
  return PyInt_FromSize_t((size_t) value);
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_short (PyObject * obj, unsigned short *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > USHRT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned short >(v);
    }
  }  
  return res;
}





SWIGINTERN int
SWIG_AsVal_short (PyObject * obj, short *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < SHRT_MIN || v > SHRT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< short >(v);
    }
  }  
  return res;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long_SS_long (PyObject *obj, unsigned long long *val)
{
  int res = SWIG_TypeError;
  if (PyLong_Check(obj)) {
    unsigned long long v = PyLong_AsUnsignedLongLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  } else {
    unsigned long v;
    res = SWIG_AsVal_unsigned_SS_long (obj,&v);
    if (SWIG_IsOK(res)) {
      if (val) *val = v;
      return res;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    const double mant_max = 1LL << DBL_MANT_DIG;
    double d;
    res = SWIG_AsVal_double (obj,&d);
    if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, mant_max)) {
      if (val) *val = (unsigned long long)(d);
      return SWIG_AddCast(res);
    }
    res = SWIG_TypeError;
  }
#endif
  return res;
}


SWIGINTERN int
SWIG_AsVal_float (PyObject * obj, float *val)
{
  double v;
  int res = SWIG_AsVal_double (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < -FLT_MAX || v > FLT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< float >(v);
    }
  }  
  return res;
}


  #define SWIG_From_double   PyFloat_FromDouble 


SWIGINTERNINLINE PyObject *
SWIG_From_unsigned_SS_short  (unsigned short value)
{    
  return SWIG_From_unsigned_SS_long  (value);
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_char (PyObject * obj, unsigned char *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UCHAR_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned char >(v);
    }
  }  
  return res;
}


SWIGINTERN int
SWIG_AsCharArray(PyObject * obj, char *val, size_t size)
{ 
  char* cptr = 0; size_t csize = 0; int alloc = SWIG_OLDOBJ;
  int res = SWIG_AsCharPtrAndSize(obj, &cptr, &csize, &alloc);
  if (SWIG_IsOK(res)) {
    if ((csize == size + 1) && cptr && !(cptr[csize-1])) --csize;
    if (csize <= size) {
      if (val) {
	if (csize) memcpy(val, cptr, csize*sizeof(char));
	if (csize < size) memset(val + csize, 0, (size - csize)*sizeof(char));
      }
      if (alloc == SWIG_NEWOBJ) {
	delete[] cptr;
	res = SWIG_DelNewMask(res);
      }      
      return res;
    }
    if (alloc == SWIG_NEWOBJ) delete[] cptr;
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_char (PyObject * obj, char *val)
{    
  int res = SWIG_AsCharArray(obj, val, 1);
  if (!SWIG_IsOK(res)) {
    long v;
    res = SWIG_AddCast(SWIG_AsVal_long (obj, &v));
    if (SWIG_IsOK(res)) {
      if ((CHAR_MIN <= v) && (v <= CHAR_MAX)) {
	if (val) *val = static_cast< char >(v);
      } else {
	res = SWIG_OverflowError;
      }
    }
  }
  return res;
}

SWIGINTERN CString CModule___str__(CModule *self){
		return self->GetModName();
	}
SWIGINTERN MCString_iter CModule_BeginNV_(CModule *self){
		return MCString_iter(self->BeginNV());
	}
SWIGINTERN bool CModule_ExistsNV(CModule *self,CString const &sName){
		return self->EndNV() != self->FindNV(sName);
	}
SWIGINTERN void CModules_push_back(CModules *self,CModule *p){
		self->push_back(p);
	}
SWIGINTERN bool CModules_removeModule(CModules *self,CModule *p){
		for (CModules::iterator i = self->begin(); self->end() != i; ++i) {
			if (*i == p) {
				self->erase(i);
				return true;
			}
		}
		return false;
	}

SWIGINTERNINLINE PyObject *
SWIG_From_unsigned_SS_char  (unsigned char value)
{    
  return SWIG_From_unsigned_SS_long  (value);
}

SWIGINTERN CString CNick___str__(CNick *self){
		return self->GetNick();
	}
SWIGINTERN CString CNick___repr__(CNick *self){
		return "<CNick " + self->GetHostMask() + ">";
	}

SWIGINTERNINLINE PyObject *
SWIG_From_char  (char c) 
{ 
  return SWIG_FromCharPtrAndSize(&c,1);
}

SWIGINTERN CString CChan___str__(CChan *self){
		return self->GetName();
	}
SWIGINTERN CString CChan___repr__(CChan *self){
		return "<CChan " + self->GetName() + ">";
	}
SWIGINTERN std::map< CString,CNick,std::less< CString >,std::allocator< std::pair< CString const,CNick > > > CChan_GetNicks_(CChan *self){
		return self->GetNicks();
	}
SWIGINTERN CString CUser___str__(CUser *self){
		return self->GetUserName();
	}
SWIGINTERN CString CUser___repr__(CUser *self){
		return "<CUser " + self->GetUserName() + ">";
	}
SWIGINTERN std::vector< CIRCNetwork *,std::allocator< CIRCNetwork * > > CUser_GetNetworks_(CUser *self){
		return self->GetNetworks();
	}
SWIGINTERN CString CIRCNetwork___str__(CIRCNetwork *self){
		return self->GetName();
	}
SWIGINTERN CString CIRCNetwork___repr__(CIRCNetwork *self){
		return "<CIRCNetwork " + self->GetName() + ">";
	}
SWIGINTERN std::vector< CChan *,std::allocator< CChan * > > CIRCNetwork_GetChans_(CIRCNetwork *self){
		return self->GetChans();
	}

    namespace swig {
       template<> struct traits_from<CString> {
           static PyObject *from(const CString& s) {
               return SWIG_From_std_string(s);
           }
       };
    }

SWIGINTERN void CTemplate_set(CTemplate *self,CString const &key,CString const &value){
		(*self)[key] = value;
	}
SWIGINTERN CString String___str__(String *self){
		return self->s;
	}
SWIGINTERN CString CPyRetString___str__(CPyRetString *self){
		return self->s;
	}

      namespace swig {
	template <>  struct traits<std::pair<CString,CString > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::pair<" "CString" "," "CString" " >";
	  }
	};
      }
    

      namespace swig {
	template <>  struct traits<std::vector<std::pair< CString,CString >, std::allocator< std::pair< CString,CString > > > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::vector<" "std::pair< CString,CString >" "," "std::allocator< std::pair< CString,CString > >" " >";
	  }
	};
      }
    
SWIGINTERN swig::SwigPyIterator *std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg__iterator(std::vector< std::pair< CString,CString > > *self,PyObject **PYTHON_SELF){
      return swig::make_output_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN bool std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg____nonzero__(std::vector< std::pair< CString,CString > > const *self){
      return !(self->empty());
    }
SWIGINTERN bool std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg____bool__(std::vector< std::pair< CString,CString > > const *self){
      return !(self->empty());
    }
SWIGINTERN std::vector< std::pair< CString,CString > >::size_type std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg____len__(std::vector< std::pair< CString,CString > > const *self){
      return self->size();
    }
SWIGINTERN std::vector< std::pair< CString,CString > >::value_type std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg__pop(std::vector< std::pair< CString,CString > > *self){
      if (self->size() == 0)
	throw std::out_of_range("pop from empty container");
      std::vector<std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > >::value_type x = self->back();
      self->pop_back();
      return x;
    }
SWIGINTERN std::vector< std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > > *std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg____getslice__(std::vector< std::pair< CString,CString > > *self,std::vector< std::pair< CString,CString > >::difference_type i,std::vector< std::pair< CString,CString > >::difference_type j){
      return swig::getslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg____setslice____SWIG_0(std::vector< std::pair< CString,CString > > *self,std::vector< std::pair< CString,CString > >::difference_type i,std::vector< std::pair< CString,CString > >::difference_type j,std::vector< std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > > const &v=std::vector< std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > >()){
      swig::setslice(self, i, j, 1, v);
    }
SWIGINTERN void std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg____delslice__(std::vector< std::pair< CString,CString > > *self,std::vector< std::pair< CString,CString > >::difference_type i,std::vector< std::pair< CString,CString > >::difference_type j){
      swig::delslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg____delitem____SWIG_0(std::vector< std::pair< CString,CString > > *self,std::vector< std::pair< CString,CString > >::difference_type i){
      self->erase(swig::getpos(self,i));
    }
SWIGINTERN std::vector< std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > > *std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg____getitem____SWIG_0(std::vector< std::pair< CString,CString > > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return NULL;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > >::difference_type id = i;
      std::vector<std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > >::difference_type jd = j;
      return swig::getslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg____setitem____SWIG_0(std::vector< std::pair< CString,CString > > *self,PySliceObject *slice,std::vector< std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > > const &v){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > >::difference_type id = i;
      std::vector<std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > >::difference_type jd = j;
      swig::setslice(self, id, jd, step, v);
    }
SWIGINTERN void std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg____setitem____SWIG_1(std::vector< std::pair< CString,CString > > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > >::difference_type id = i;
      std::vector<std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg____delitem____SWIG_1(std::vector< std::pair< CString,CString > > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > >::difference_type id = i;
      std::vector<std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN std::vector< std::pair< CString,CString > >::value_type const &std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg____getitem____SWIG_1(std::vector< std::pair< CString,CString > > const *self,std::vector< std::pair< CString,CString > >::difference_type i){
      return *(swig::cgetpos(self, i));
    }
SWIGINTERN void std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg____setitem____SWIG_2(std::vector< std::pair< CString,CString > > *self,std::vector< std::pair< CString,CString > >::difference_type i,std::vector< std::pair< CString,CString > >::value_type const &x){
      *(swig::getpos(self,i)) = x;
    }
SWIGINTERN void std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg__append(std::vector< std::pair< CString,CString > > *self,std::vector< std::pair< CString,CString > >::value_type const &x){
      self->push_back(x);
    }

  namespace swig {
    template <>  struct traits<CSmartPtr< CWebSubPage > > {
      typedef pointer_category category;
      static const char* type_name() { return"CSmartPtr< CWebSubPage >"; }
    };
  }


      namespace swig {
	template <>  struct traits<std::vector<CSmartPtr< CWebSubPage >, std::allocator< CSmartPtr< CWebSubPage > > > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::vector<" "CSmartPtr< CWebSubPage >" "," "std::allocator< CSmartPtr< CWebSubPage > >" " >";
	  }
	};
      }
    
SWIGINTERN swig::SwigPyIterator *std_vector_Sl_TWebSubPage_Sg__iterator(std::vector< TWebSubPage > *self,PyObject **PYTHON_SELF){
      return swig::make_output_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN bool std_vector_Sl_TWebSubPage_Sg____nonzero__(std::vector< TWebSubPage > const *self){
      return !(self->empty());
    }
SWIGINTERN bool std_vector_Sl_TWebSubPage_Sg____bool__(std::vector< TWebSubPage > const *self){
      return !(self->empty());
    }
SWIGINTERN std::vector< CSmartPtr< CWebSubPage > >::size_type std_vector_Sl_TWebSubPage_Sg____len__(std::vector< TWebSubPage > const *self){
      return self->size();
    }
SWIGINTERN std::vector< CSmartPtr< CWebSubPage > >::value_type std_vector_Sl_TWebSubPage_Sg__pop(std::vector< TWebSubPage > *self){
      if (self->size() == 0)
	throw std::out_of_range("pop from empty container");
      std::vector<CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > >::value_type x = self->back();
      self->pop_back();
      return x;
    }
SWIGINTERN std::vector< CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > > *std_vector_Sl_TWebSubPage_Sg____getslice__(std::vector< TWebSubPage > *self,std::vector< CSmartPtr< CWebSubPage > >::difference_type i,std::vector< CSmartPtr< CWebSubPage > >::difference_type j){
      return swig::getslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_TWebSubPage_Sg____setslice____SWIG_0(std::vector< TWebSubPage > *self,std::vector< CSmartPtr< CWebSubPage > >::difference_type i,std::vector< CSmartPtr< CWebSubPage > >::difference_type j,std::vector< CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > > const &v=std::vector< CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > >()){
      swig::setslice(self, i, j, 1, v);
    }
SWIGINTERN void std_vector_Sl_TWebSubPage_Sg____delslice__(std::vector< TWebSubPage > *self,std::vector< CSmartPtr< CWebSubPage > >::difference_type i,std::vector< CSmartPtr< CWebSubPage > >::difference_type j){
      swig::delslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_TWebSubPage_Sg____delitem____SWIG_0(std::vector< TWebSubPage > *self,std::vector< CSmartPtr< CWebSubPage > >::difference_type i){
      self->erase(swig::getpos(self,i));
    }
SWIGINTERN std::vector< CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > > *std_vector_Sl_TWebSubPage_Sg____getitem____SWIG_0(std::vector< TWebSubPage > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return NULL;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > >::difference_type id = i;
      std::vector<CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > >::difference_type jd = j;
      return swig::getslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_TWebSubPage_Sg____setitem____SWIG_0(std::vector< TWebSubPage > *self,PySliceObject *slice,std::vector< CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > > const &v){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > >::difference_type id = i;
      std::vector<CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > >::difference_type jd = j;
      swig::setslice(self, id, jd, step, v);
    }
SWIGINTERN void std_vector_Sl_TWebSubPage_Sg____setitem____SWIG_1(std::vector< TWebSubPage > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > >::difference_type id = i;
      std::vector<CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_TWebSubPage_Sg____delitem____SWIG_1(std::vector< TWebSubPage > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > >::difference_type id = i;
      std::vector<CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN std::vector< CSmartPtr< CWebSubPage > >::value_type const &std_vector_Sl_TWebSubPage_Sg____getitem____SWIG_1(std::vector< TWebSubPage > const *self,std::vector< CSmartPtr< CWebSubPage > >::difference_type i){
      return *(swig::cgetpos(self, i));
    }
SWIGINTERN void std_vector_Sl_TWebSubPage_Sg____setitem____SWIG_2(std::vector< TWebSubPage > *self,std::vector< CSmartPtr< CWebSubPage > >::difference_type i,std::vector< CSmartPtr< CWebSubPage > >::value_type const &x){
      *(swig::getpos(self,i)) = x;
    }
SWIGINTERN void std_vector_Sl_TWebSubPage_Sg__append(std::vector< TWebSubPage > *self,std::vector< CSmartPtr< CWebSubPage > >::value_type const &x){
      self->push_back(x);
    }

	void VPair_Add2Str_(VPair* self, const CString& a, const CString& b) {
		self->push_back(std::make_pair(a, b));
	}


	TWebSubPage CreateWebSubPage_(const CString& sName, const CString& sTitle, const VPair& vParams, unsigned int uFlags) {
		return new CWebSubPage(sName, sTitle, vParams, uFlags);
	}

#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN PyObject *_wrap_delete_SwigPyIterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SwigPyIterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SwigPyIterator" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_value",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_value" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)((swig::SwigPyIterator const *)arg1)->value();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator_incr",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_incr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_incr" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  try {
    result = (swig::SwigPyIterator *)(arg1)->incr(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_incr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_incr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (swig::SwigPyIterator *)(arg1)->incr();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SwigPyIterator_incr__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SwigPyIterator_incr__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SwigPyIterator_incr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    swig::SwigPyIterator::incr(size_t)\n"
    "    swig::SwigPyIterator::incr()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator_decr",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_decr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_decr" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  try {
    result = (swig::SwigPyIterator *)(arg1)->decr(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_decr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_decr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (swig::SwigPyIterator *)(arg1)->decr();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SwigPyIterator_decr__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SwigPyIterator_decr__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SwigPyIterator_decr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    swig::SwigPyIterator::decr(size_t)\n"
    "    swig::SwigPyIterator::decr()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_distance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ptrdiff_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator_distance",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_distance" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator_distance" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator_distance" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  try {
    result = ((swig::SwigPyIterator const *)arg1)->distance((swig::SwigPyIterator const &)*arg2);
  }
  catch(std::invalid_argument &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new std::invalid_argument(static_cast< const std::invalid_argument& >(_e))),SWIGTYPE_p_std__invalid_argument,SWIG_POINTER_OWN), "std::invalid_argument", SWIGTYPE_p_std__invalid_argument); SWIG_fail;
  }
  
  resultobj = SWIG_From_ptrdiff_t(static_cast< ptrdiff_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_equal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator_equal",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_equal" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator_equal" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator_equal" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  try {
    result = (bool)((swig::SwigPyIterator const *)arg1)->equal((swig::SwigPyIterator const &)*arg2);
  }
  catch(std::invalid_argument &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new std::invalid_argument(static_cast< const std::invalid_argument& >(_e))),SWIGTYPE_p_std__invalid_argument,SWIG_POINTER_OWN), "std::invalid_argument", SWIGTYPE_p_std__invalid_argument); SWIG_fail;
  }
  
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_copy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_copy" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->copy();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_next",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_next" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->next();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___next__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator___next__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___next__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->__next__();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_previous(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_previous",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_previous" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->previous();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_advance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator_advance",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_advance" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_advance" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)(arg1)->advance(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___eq__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___eq__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___eq__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___eq__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = (bool)((swig::SwigPyIterator const *)arg1)->operator ==((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___ne__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___ne__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___ne__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___ne__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = (bool)((swig::SwigPyIterator const *)arg1)->operator !=((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___iadd__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___iadd__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *) &(arg1)->operator +=(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___isub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___isub__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___isub__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *) &(arg1)->operator -=(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___add__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___add__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->operator +(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___sub__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->operator -(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ptrdiff_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___sub__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = ((swig::SwigPyIterator const *)arg1)->operator -((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_ptrdiff_t(static_cast< ptrdiff_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_swig__SwigPyIterator, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SwigPyIterator___sub____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SwigPyIterator___sub____SWIG_0(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *SwigPyIterator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_swig__SwigPyIterator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap__stringlist_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  arg2 = &obj0;
  if (!PyArg_ParseTuple(args,(char *)"O:_stringlist_iterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist_iterator" "', argument " "1"" of type '" "std::list< CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  result = (swig::SwigPyIterator *)std_list_Sl_CString_Sg__iterator(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:_stringlist___nonzero__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist___nonzero__" "', argument " "1"" of type '" "std::list< CString > const *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  result = (bool)std_list_Sl_CString_Sg____nonzero__((std::list< CString > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist___bool__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:_stringlist___bool__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist___bool__" "', argument " "1"" of type '" "std::list< CString > const *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  result = (bool)std_list_Sl_CString_Sg____bool__((std::list< CString > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::list< CString >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:_stringlist___len__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist___len__" "', argument " "1"" of type '" "std::list< CString > const *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  result = std_list_Sl_CString_Sg____len__((std::list< CString > const *)arg1);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist_pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::list< CString >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:_stringlist_pop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist_pop" "', argument " "1"" of type '" "std::list< CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  try {
    result = std_list_Sl_CString_Sg__pop(arg1);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist___getslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  std::list< CString >::difference_type arg2 ;
  std::list< CString >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::list< CString,std::allocator< CString > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:_stringlist___getslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist___getslice__" "', argument " "1"" of type '" "std::list< CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "_stringlist___getslice__" "', argument " "2"" of type '" "std::list< CString >::difference_type""'");
  } 
  arg2 = static_cast< std::list< CString >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "_stringlist___getslice__" "', argument " "3"" of type '" "std::list< CString >::difference_type""'");
  } 
  arg3 = static_cast< std::list< CString >::difference_type >(val3);
  try {
    result = (std::list< CString,std::allocator< CString > > *)std_list_Sl_CString_Sg____getslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist___setslice____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  std::list< CString >::difference_type arg2 ;
  std::list< CString >::difference_type arg3 ;
  std::list< CString,std::allocator< CString > > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:_stringlist___setslice__",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist___setslice__" "', argument " "1"" of type '" "std::list< CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "_stringlist___setslice__" "', argument " "2"" of type '" "std::list< CString >::difference_type""'");
  } 
  arg2 = static_cast< std::list< CString >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "_stringlist___setslice__" "', argument " "3"" of type '" "std::list< CString >::difference_type""'");
  } 
  arg3 = static_cast< std::list< CString >::difference_type >(val3);
  {
    std::list<CString,std::allocator< CString > > *ptr = (std::list<CString,std::allocator< CString > > *)0;
    res4 = swig::asptr(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "_stringlist___setslice__" "', argument " "4"" of type '" "std::list< CString,std::allocator< CString > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_stringlist___setslice__" "', argument " "4"" of type '" "std::list< CString,std::allocator< CString > > const &""'"); 
    }
    arg4 = ptr;
  }
  try {
    std_list_Sl_CString_Sg____setslice____SWIG_0(arg1,arg2,arg3,(std::list< CString,std::allocator< CString > > const &)*arg4);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist___setslice____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  std::list< CString >::difference_type arg2 ;
  std::list< CString >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:_stringlist___setslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist___setslice__" "', argument " "1"" of type '" "std::list< CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "_stringlist___setslice__" "', argument " "2"" of type '" "std::list< CString >::difference_type""'");
  } 
  arg2 = static_cast< std::list< CString >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "_stringlist___setslice__" "', argument " "3"" of type '" "std::list< CString >::difference_type""'");
  } 
  arg3 = static_cast< std::list< CString >::difference_type >(val3);
  try {
    std_list_Sl_CString_Sg____setslice____SWIG_0(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist___setslice__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::list<CString,std::allocator< CString > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap__stringlist___setslice____SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::list<CString,std::allocator< CString > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = swig::asptr(argv[3], (std::list<CString,std::allocator< CString > >**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap__stringlist___setslice____SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function '_stringlist___setslice__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::list< CString >::__setslice__(std::list< CString >::difference_type,std::list< CString >::difference_type,std::list< CString,std::allocator< CString > > const &)\n"
    "    std::list< CString >::__setslice__(std::list< CString >::difference_type,std::list< CString >::difference_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap__stringlist___delslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  std::list< CString >::difference_type arg2 ;
  std::list< CString >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:_stringlist___delslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist___delslice__" "', argument " "1"" of type '" "std::list< CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "_stringlist___delslice__" "', argument " "2"" of type '" "std::list< CString >::difference_type""'");
  } 
  arg2 = static_cast< std::list< CString >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "_stringlist___delslice__" "', argument " "3"" of type '" "std::list< CString >::difference_type""'");
  } 
  arg3 = static_cast< std::list< CString >::difference_type >(val3);
  try {
    std_list_Sl_CString_Sg____delslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist___delitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  std::list< CString >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:_stringlist___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist___delitem__" "', argument " "1"" of type '" "std::list< CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "_stringlist___delitem__" "', argument " "2"" of type '" "std::list< CString >::difference_type""'");
  } 
  arg2 = static_cast< std::list< CString >::difference_type >(val2);
  try {
    std_list_Sl_CString_Sg____delitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist___getitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::list< CString,std::allocator< CString > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:_stringlist___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist___getitem__" "', argument " "1"" of type '" "std::list< CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "_stringlist___getitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    result = (std::list< CString,std::allocator< CString > > *)std_list_Sl_CString_Sg____getitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  std::list< CString,std::allocator< CString > > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:_stringlist___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist___setitem__" "', argument " "1"" of type '" "std::list< CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "_stringlist___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  {
    std::list<CString,std::allocator< CString > > *ptr = (std::list<CString,std::allocator< CString > > *)0;
    res3 = swig::asptr(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "_stringlist___setitem__" "', argument " "3"" of type '" "std::list< CString,std::allocator< CString > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_stringlist___setitem__" "', argument " "3"" of type '" "std::list< CString,std::allocator< CString > > const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    std_list_Sl_CString_Sg____setitem____SWIG_0(arg1,arg2,(std::list< CString,std::allocator< CString > > const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:_stringlist___setitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist___setitem__" "', argument " "1"" of type '" "std::list< CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "_stringlist___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_list_Sl_CString_Sg____setitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist___delitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:_stringlist___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist___delitem__" "', argument " "1"" of type '" "std::list< CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "_stringlist___delitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_list_Sl_CString_Sg____delitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist___delitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::list<CString,std::allocator< CString > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap__stringlist___delitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::list<CString,std::allocator< CString > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap__stringlist___delitem____SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function '_stringlist___delitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::list< CString >::__delitem__(std::list< CString >::difference_type)\n"
    "    std::list< CString >::__delitem__(PySliceObject *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap__stringlist___getitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  std::list< CString >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::list< CString >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:_stringlist___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist___getitem__" "', argument " "1"" of type '" "std::list< CString > const *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "_stringlist___getitem__" "', argument " "2"" of type '" "std::list< CString >::difference_type""'");
  } 
  arg2 = static_cast< std::list< CString >::difference_type >(val2);
  try {
    result = (std::list< CString >::value_type *) &std_list_Sl_CString_Sg____getitem____SWIG_1((std::list< CString > const *)arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist___getitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::list<CString,std::allocator< CString > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap__stringlist___getitem____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::list<CString,std::allocator< CString > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap__stringlist___getitem____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function '_stringlist___getitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::list< CString >::__getitem__(PySliceObject *)\n"
    "    std::list< CString >::__getitem__(std::list< CString >::difference_type) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap__stringlist___setitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  std::list< CString >::difference_type arg2 ;
  std::list< CString >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:_stringlist___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist___setitem__" "', argument " "1"" of type '" "std::list< CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "_stringlist___setitem__" "', argument " "2"" of type '" "std::list< CString >::difference_type""'");
  } 
  arg2 = static_cast< std::list< CString >::difference_type >(val2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "_stringlist___setitem__" "', argument " "3"" of type '" "std::list< CString >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_stringlist___setitem__" "', argument " "3"" of type '" "std::list< CString >::value_type const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    std_list_Sl_CString_Sg____setitem____SWIG_2(arg1,arg2,(CString const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist___setitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::list<CString,std::allocator< CString > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap__stringlist___setitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::list<CString,std::allocator< CString > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::list<CString,std::allocator< CString > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap__stringlist___setitem____SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::list<CString,std::allocator< CString > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap__stringlist___setitem____SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function '_stringlist___setitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::list< CString >::__setitem__(PySliceObject *,std::list< CString,std::allocator< CString > > const &)\n"
    "    std::list< CString >::__setitem__(PySliceObject *)\n"
    "    std::list< CString >::__setitem__(std::list< CString >::difference_type,std::list< CString >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap__stringlist_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  std::list< CString >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:_stringlist_append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist_append" "', argument " "1"" of type '" "std::list< CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "_stringlist_append" "', argument " "2"" of type '" "std::list< CString >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_stringlist_append" "', argument " "2"" of type '" "std::list< CString >::value_type const &""'"); 
    }
    arg2 = ptr;
  }
  std_list_Sl_CString_Sg__append(arg1,(CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new__stringlist__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new__stringlist")) SWIG_fail;
  result = (std::list< CString > *)new std::list< CString >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new__stringlist__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  std::list< CString > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new__stringlist",&obj0)) SWIG_fail;
  {
    std::list<CString,std::allocator< CString > > *ptr = (std::list<CString,std::allocator< CString > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new__stringlist" "', argument " "1"" of type '" "std::list< CString > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new__stringlist" "', argument " "1"" of type '" "std::list< CString > const &""'"); 
    }
    arg1 = ptr;
  }
  result = (std::list< CString > *)new std::list< CString >((std::list< CString > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:_stringlist_empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist_empty" "', argument " "1"" of type '" "std::list< CString > const *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  result = (bool)((std::list< CString > const *)arg1)->empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::list< CString >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:_stringlist_size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist_size" "', argument " "1"" of type '" "std::list< CString > const *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  result = ((std::list< CString > const *)arg1)->size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:_stringlist_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist_clear" "', argument " "1"" of type '" "std::list< CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist_swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  std::list< CString > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:_stringlist_swap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist_swap" "', argument " "1"" of type '" "std::list< CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "_stringlist_swap" "', argument " "2"" of type '" "std::list< CString > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_stringlist_swap" "', argument " "2"" of type '" "std::list< CString > &""'"); 
  }
  arg2 = reinterpret_cast< std::list< CString > * >(argp2);
  (arg1)->swap(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist_get_allocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::allocator< CString > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:_stringlist_get_allocator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist_get_allocator" "', argument " "1"" of type '" "std::list< CString > const *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  result = ((std::list< CString > const *)arg1)->get_allocator();
  resultobj = SWIG_NewPointerObj((new std::list< CString >::allocator_type(static_cast< const std::list< CString >::allocator_type& >(result))), SWIGTYPE_p_std__allocatorT_CString_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::list< CString >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:_stringlist_begin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist_begin" "', argument " "1"" of type '" "std::list< CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  result = (arg1)->begin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::list< CString >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::list< CString >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:_stringlist_end",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist_end" "', argument " "1"" of type '" "std::list< CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  result = (arg1)->end();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::list< CString >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist_rbegin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::list< CString >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:_stringlist_rbegin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist_rbegin" "', argument " "1"" of type '" "std::list< CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  result = (arg1)->rbegin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::list< CString >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist_rend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::list< CString >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:_stringlist_rend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist_rend" "', argument " "1"" of type '" "std::list< CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  result = (arg1)->rend();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::list< CString >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new__stringlist__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString >::size_type arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  std::list< CString > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new__stringlist",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new__stringlist" "', argument " "1"" of type '" "std::list< CString >::size_type""'");
  } 
  arg1 = static_cast< std::list< CString >::size_type >(val1);
  result = (std::list< CString > *)new std::list< CString >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist_pop_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:_stringlist_pop_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist_pop_back" "', argument " "1"" of type '" "std::list< CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  (arg1)->pop_back();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist_resize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  std::list< CString >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:_stringlist_resize",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist_resize" "', argument " "1"" of type '" "std::list< CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "_stringlist_resize" "', argument " "2"" of type '" "std::list< CString >::size_type""'");
  } 
  arg2 = static_cast< std::list< CString >::size_type >(val2);
  (arg1)->resize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist_erase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  std::list< CString >::iterator arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::list< CString >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:_stringlist_erase",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist_erase" "', argument " "1"" of type '" "std::list< CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "_stringlist_erase" "', argument " "2"" of type '" "std::list< CString >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::list< CString >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::list< CString >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "_stringlist_erase" "', argument " "2"" of type '" "std::list< CString >::iterator""'");
    }
  }
  result = (arg1)->erase(arg2);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::list< CString >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist_erase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  std::list< CString >::iterator arg2 ;
  std::list< CString >::iterator arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  swig::SwigPyIterator *iter3 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::list< CString >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:_stringlist_erase",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist_erase" "', argument " "1"" of type '" "std::list< CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "_stringlist_erase" "', argument " "2"" of type '" "std::list< CString >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::list< CString >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::list< CString >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "_stringlist_erase" "', argument " "2"" of type '" "std::list< CString >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, SWIG_as_voidptrptr(&iter3), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res3) || !iter3) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "_stringlist_erase" "', argument " "3"" of type '" "std::list< CString >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::list< CString >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::list< CString >::iterator > *>(iter3);
    if (iter_t) {
      arg3 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "_stringlist_erase" "', argument " "3"" of type '" "std::list< CString >::iterator""'");
    }
  }
  result = (arg1)->erase(arg2,arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::list< CString >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist_erase(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::list<CString,std::allocator< CString > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::list< CString >::iterator > *>(iter) != 0));
      if (_v) {
        return _wrap__stringlist_erase__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::list<CString,std::allocator< CString > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::list< CString >::iterator > *>(iter) != 0));
      if (_v) {
        swig::SwigPyIterator *iter = 0;
        int res = SWIG_ConvertPtr(argv[2], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
        _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::list< CString >::iterator > *>(iter) != 0));
        if (_v) {
          return _wrap__stringlist_erase__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function '_stringlist_erase'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::list< CString >::erase(std::list< CString >::iterator)\n"
    "    std::list< CString >::erase(std::list< CString >::iterator,std::list< CString >::iterator)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new__stringlist__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString >::size_type arg1 ;
  std::list< CString >::value_type *arg2 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::list< CString > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new__stringlist",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new__stringlist" "', argument " "1"" of type '" "std::list< CString >::size_type""'");
  } 
  arg1 = static_cast< std::list< CString >::size_type >(val1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new__stringlist" "', argument " "2"" of type '" "std::list< CString >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new__stringlist" "', argument " "2"" of type '" "std::list< CString >::value_type const &""'"); 
    }
    arg2 = ptr;
  }
  result = (std::list< CString > *)new std::list< CString >(arg1,(std::list< CString >::value_type const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new__stringlist(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new__stringlist__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new__stringlist__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::list<CString,std::allocator< CString > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new__stringlist__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new__stringlist__SWIG_3(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new__stringlist'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::list< CString >::list()\n"
    "    std::list< CString >::list(std::list< CString > const &)\n"
    "    std::list< CString >::list(std::list< CString >::size_type)\n"
    "    std::list< CString >::list(std::list< CString >::size_type,std::list< CString >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap__stringlist_push_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  std::list< CString >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:_stringlist_push_back",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist_push_back" "', argument " "1"" of type '" "std::list< CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "_stringlist_push_back" "', argument " "2"" of type '" "std::list< CString >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_stringlist_push_back" "', argument " "2"" of type '" "std::list< CString >::value_type const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->push_back((std::list< CString >::value_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist_front(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::list< CString >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:_stringlist_front",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist_front" "', argument " "1"" of type '" "std::list< CString > const *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  result = (std::list< CString >::value_type *) &((std::list< CString > const *)arg1)->front();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::list< CString >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:_stringlist_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist_back" "', argument " "1"" of type '" "std::list< CString > const *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  result = (std::list< CString >::value_type *) &((std::list< CString > const *)arg1)->back();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  std::list< CString >::size_type arg2 ;
  std::list< CString >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:_stringlist_assign",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist_assign" "', argument " "1"" of type '" "std::list< CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "_stringlist_assign" "', argument " "2"" of type '" "std::list< CString >::size_type""'");
  } 
  arg2 = static_cast< std::list< CString >::size_type >(val2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "_stringlist_assign" "', argument " "3"" of type '" "std::list< CString >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_stringlist_assign" "', argument " "3"" of type '" "std::list< CString >::value_type const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->assign(arg2,(std::list< CString >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist_resize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  std::list< CString >::size_type arg2 ;
  std::list< CString >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:_stringlist_resize",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist_resize" "', argument " "1"" of type '" "std::list< CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "_stringlist_resize" "', argument " "2"" of type '" "std::list< CString >::size_type""'");
  } 
  arg2 = static_cast< std::list< CString >::size_type >(val2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "_stringlist_resize" "', argument " "3"" of type '" "std::list< CString >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_stringlist_resize" "', argument " "3"" of type '" "std::list< CString >::value_type const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->resize(arg2,(std::list< CString >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist_resize(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::list<CString,std::allocator< CString > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap__stringlist_resize__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::list<CString,std::allocator< CString > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap__stringlist_resize__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function '_stringlist_resize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::list< CString >::resize(std::list< CString >::size_type)\n"
    "    std::list< CString >::resize(std::list< CString >::size_type,std::list< CString >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap__stringlist_insert__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  std::list< CString >::iterator arg2 ;
  std::list< CString >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::list< CString >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:_stringlist_insert",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist_insert" "', argument " "1"" of type '" "std::list< CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "_stringlist_insert" "', argument " "2"" of type '" "std::list< CString >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::list< CString >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::list< CString >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "_stringlist_insert" "', argument " "2"" of type '" "std::list< CString >::iterator""'");
    }
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "_stringlist_insert" "', argument " "3"" of type '" "std::list< CString >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_stringlist_insert" "', argument " "3"" of type '" "std::list< CString >::value_type const &""'"); 
    }
    arg3 = ptr;
  }
  result = (arg1)->insert(arg2,(std::list< CString >::value_type const &)*arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::list< CString >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist_insert__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  std::list< CString >::iterator arg2 ;
  std::list< CString >::size_type arg3 ;
  std::list< CString >::value_type *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  size_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:_stringlist_insert",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist_insert" "', argument " "1"" of type '" "std::list< CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "_stringlist_insert" "', argument " "2"" of type '" "std::list< CString >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::list< CString >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::list< CString >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "_stringlist_insert" "', argument " "2"" of type '" "std::list< CString >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "_stringlist_insert" "', argument " "3"" of type '" "std::list< CString >::size_type""'");
  } 
  arg3 = static_cast< std::list< CString >::size_type >(val3);
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "_stringlist_insert" "', argument " "4"" of type '" "std::list< CString >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_stringlist_insert" "', argument " "4"" of type '" "std::list< CString >::value_type const &""'"); 
    }
    arg4 = ptr;
  }
  (arg1)->insert(arg2,arg3,(std::list< CString >::value_type const &)*arg4);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist_insert(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::list<CString,std::allocator< CString > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::list< CString >::iterator > *>(iter) != 0));
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap__stringlist_insert__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::list<CString,std::allocator< CString > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::list< CString >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (CString**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap__stringlist_insert__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function '_stringlist_insert'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::list< CString >::insert(std::list< CString >::iterator,std::list< CString >::value_type const &)\n"
    "    std::list< CString >::insert(std::list< CString >::iterator,std::list< CString >::size_type,std::list< CString >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap__stringlist_pop_front(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:_stringlist_pop_front",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist_pop_front" "', argument " "1"" of type '" "std::list< CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  (arg1)->pop_front();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist_push_front(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  std::list< CString >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:_stringlist_push_front",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist_push_front" "', argument " "1"" of type '" "std::list< CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "_stringlist_push_front" "', argument " "2"" of type '" "std::list< CString >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_stringlist_push_front" "', argument " "2"" of type '" "std::list< CString >::value_type const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->push_front((std::list< CString >::value_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap__stringlist_reverse(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:_stringlist_reverse",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist_reverse" "', argument " "1"" of type '" "std::list< CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  (arg1)->reverse();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete__stringlist(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::list< CString > *arg1 = (std::list< CString > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete__stringlist",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete__stringlist" "', argument " "1"" of type '" "std::list< CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::list< CString > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_stringlist_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__listT_CString_std__allocatorT_CString_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_VIRCNetworks_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  arg2 = &obj0;
  if (!PyArg_ParseTuple(args,(char *)"O:VIRCNetworks_iterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks_iterator" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  result = (swig::SwigPyIterator *)std_vector_Sl_CIRCNetwork_Sm__Sg__iterator(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VIRCNetworks___nonzero__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks___nonzero__" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  result = (bool)std_vector_Sl_CIRCNetwork_Sm__Sg____nonzero__((std::vector< CIRCNetwork * > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks___bool__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VIRCNetworks___bool__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks___bool__" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  result = (bool)std_vector_Sl_CIRCNetwork_Sm__Sg____bool__((std::vector< CIRCNetwork * > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< CIRCNetwork * >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VIRCNetworks___len__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks___len__" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  result = std_vector_Sl_CIRCNetwork_Sm__Sg____len__((std::vector< CIRCNetwork * > const *)arg1);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks_pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< CIRCNetwork * >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VIRCNetworks_pop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks_pop" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  try {
    result = (std::vector< CIRCNetwork * >::value_type)std_vector_Sl_CIRCNetwork_Sm__Sg__pop(arg1);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks___getslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  std::vector< CIRCNetwork * >::difference_type arg2 ;
  std::vector< CIRCNetwork * >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< CIRCNetwork *,std::allocator< CIRCNetwork * > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VIRCNetworks___getslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks___getslice__" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VIRCNetworks___getslice__" "', argument " "2"" of type '" "std::vector< CIRCNetwork * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< CIRCNetwork * >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VIRCNetworks___getslice__" "', argument " "3"" of type '" "std::vector< CIRCNetwork * >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< CIRCNetwork * >::difference_type >(val3);
  try {
    result = (std::vector< CIRCNetwork *,std::allocator< CIRCNetwork * > > *)std_vector_Sl_CIRCNetwork_Sm__Sg____getslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks___setslice____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  std::vector< CIRCNetwork * >::difference_type arg2 ;
  std::vector< CIRCNetwork * >::difference_type arg3 ;
  std::vector< CIRCNetwork *,std::allocator< CIRCNetwork * > > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:VIRCNetworks___setslice__",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks___setslice__" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VIRCNetworks___setslice__" "', argument " "2"" of type '" "std::vector< CIRCNetwork * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< CIRCNetwork * >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VIRCNetworks___setslice__" "', argument " "3"" of type '" "std::vector< CIRCNetwork * >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< CIRCNetwork * >::difference_type >(val3);
  {
    std::vector<CIRCNetwork*,std::allocator< CIRCNetwork * > > *ptr = (std::vector<CIRCNetwork*,std::allocator< CIRCNetwork * > > *)0;
    res4 = swig::asptr(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "VIRCNetworks___setslice__" "', argument " "4"" of type '" "std::vector< CIRCNetwork *,std::allocator< CIRCNetwork * > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VIRCNetworks___setslice__" "', argument " "4"" of type '" "std::vector< CIRCNetwork *,std::allocator< CIRCNetwork * > > const &""'"); 
    }
    arg4 = ptr;
  }
  try {
    std_vector_Sl_CIRCNetwork_Sm__Sg____setslice____SWIG_0(arg1,arg2,arg3,(std::vector< CIRCNetwork *,std::allocator< CIRCNetwork * > > const &)*arg4);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks___setslice____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  std::vector< CIRCNetwork * >::difference_type arg2 ;
  std::vector< CIRCNetwork * >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VIRCNetworks___setslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks___setslice__" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VIRCNetworks___setslice__" "', argument " "2"" of type '" "std::vector< CIRCNetwork * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< CIRCNetwork * >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VIRCNetworks___setslice__" "', argument " "3"" of type '" "std::vector< CIRCNetwork * >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< CIRCNetwork * >::difference_type >(val3);
  try {
    std_vector_Sl_CIRCNetwork_Sm__Sg____setslice____SWIG_0(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks___setslice__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CIRCNetwork*,std::allocator< CIRCNetwork * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_VIRCNetworks___setslice____SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CIRCNetwork*,std::allocator< CIRCNetwork * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = swig::asptr(argv[3], (std::vector<CIRCNetwork*,std::allocator< CIRCNetwork * > >**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_VIRCNetworks___setslice____SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'VIRCNetworks___setslice__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< CIRCNetwork * >::__setslice__(std::vector< CIRCNetwork * >::difference_type,std::vector< CIRCNetwork * >::difference_type,std::vector< CIRCNetwork *,std::allocator< CIRCNetwork * > > const &)\n"
    "    std::vector< CIRCNetwork * >::__setslice__(std::vector< CIRCNetwork * >::difference_type,std::vector< CIRCNetwork * >::difference_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks___delslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  std::vector< CIRCNetwork * >::difference_type arg2 ;
  std::vector< CIRCNetwork * >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VIRCNetworks___delslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks___delslice__" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VIRCNetworks___delslice__" "', argument " "2"" of type '" "std::vector< CIRCNetwork * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< CIRCNetwork * >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VIRCNetworks___delslice__" "', argument " "3"" of type '" "std::vector< CIRCNetwork * >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< CIRCNetwork * >::difference_type >(val3);
  try {
    std_vector_Sl_CIRCNetwork_Sm__Sg____delslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks___delitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  std::vector< CIRCNetwork * >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VIRCNetworks___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks___delitem__" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VIRCNetworks___delitem__" "', argument " "2"" of type '" "std::vector< CIRCNetwork * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< CIRCNetwork * >::difference_type >(val2);
  try {
    std_vector_Sl_CIRCNetwork_Sm__Sg____delitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks___getitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< CIRCNetwork *,std::allocator< CIRCNetwork * > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VIRCNetworks___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks___getitem__" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VIRCNetworks___getitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    result = (std::vector< CIRCNetwork *,std::allocator< CIRCNetwork * > > *)std_vector_Sl_CIRCNetwork_Sm__Sg____getitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  std::vector< CIRCNetwork *,std::allocator< CIRCNetwork * > > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VIRCNetworks___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks___setitem__" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VIRCNetworks___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  {
    std::vector<CIRCNetwork*,std::allocator< CIRCNetwork * > > *ptr = (std::vector<CIRCNetwork*,std::allocator< CIRCNetwork * > > *)0;
    res3 = swig::asptr(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VIRCNetworks___setitem__" "', argument " "3"" of type '" "std::vector< CIRCNetwork *,std::allocator< CIRCNetwork * > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VIRCNetworks___setitem__" "', argument " "3"" of type '" "std::vector< CIRCNetwork *,std::allocator< CIRCNetwork * > > const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    std_vector_Sl_CIRCNetwork_Sm__Sg____setitem____SWIG_0(arg1,arg2,(std::vector< CIRCNetwork *,std::allocator< CIRCNetwork * > > const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VIRCNetworks___setitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks___setitem__" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VIRCNetworks___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_vector_Sl_CIRCNetwork_Sm__Sg____setitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks___delitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VIRCNetworks___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks___delitem__" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VIRCNetworks___delitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_vector_Sl_CIRCNetwork_Sm__Sg____delitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks___delitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CIRCNetwork*,std::allocator< CIRCNetwork * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_VIRCNetworks___delitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CIRCNetwork*,std::allocator< CIRCNetwork * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_VIRCNetworks___delitem____SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'VIRCNetworks___delitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< CIRCNetwork * >::__delitem__(std::vector< CIRCNetwork * >::difference_type)\n"
    "    std::vector< CIRCNetwork * >::__delitem__(PySliceObject *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks___getitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  std::vector< CIRCNetwork * >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< CIRCNetwork * >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VIRCNetworks___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks___getitem__" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VIRCNetworks___getitem__" "', argument " "2"" of type '" "std::vector< CIRCNetwork * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< CIRCNetwork * >::difference_type >(val2);
  try {
    result = (std::vector< CIRCNetwork * >::value_type)std_vector_Sl_CIRCNetwork_Sm__Sg____getitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks___getitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CIRCNetwork*,std::allocator< CIRCNetwork * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_VIRCNetworks___getitem____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CIRCNetwork*,std::allocator< CIRCNetwork * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_VIRCNetworks___getitem____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'VIRCNetworks___getitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< CIRCNetwork * >::__getitem__(PySliceObject *)\n"
    "    std::vector< CIRCNetwork * >::__getitem__(std::vector< CIRCNetwork * >::difference_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks___setitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  std::vector< CIRCNetwork * >::difference_type arg2 ;
  std::vector< CIRCNetwork * >::value_type arg3 = (std::vector< CIRCNetwork * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VIRCNetworks___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks___setitem__" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VIRCNetworks___setitem__" "', argument " "2"" of type '" "std::vector< CIRCNetwork * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< CIRCNetwork * >::difference_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VIRCNetworks___setitem__" "', argument " "3"" of type '" "std::vector< CIRCNetwork * >::value_type""'"); 
  }
  arg3 = reinterpret_cast< std::vector< CIRCNetwork * >::value_type >(argp3);
  try {
    std_vector_Sl_CIRCNetwork_Sm__Sg____setitem____SWIG_2(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks___setitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CIRCNetwork*,std::allocator< CIRCNetwork * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_VIRCNetworks___setitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CIRCNetwork*,std::allocator< CIRCNetwork * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector<CIRCNetwork*,std::allocator< CIRCNetwork * > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_VIRCNetworks___setitem____SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CIRCNetwork*,std::allocator< CIRCNetwork * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_VIRCNetworks___setitem____SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'VIRCNetworks___setitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< CIRCNetwork * >::__setitem__(PySliceObject *,std::vector< CIRCNetwork *,std::allocator< CIRCNetwork * > > const &)\n"
    "    std::vector< CIRCNetwork * >::__setitem__(PySliceObject *)\n"
    "    std::vector< CIRCNetwork * >::__setitem__(std::vector< CIRCNetwork * >::difference_type,std::vector< CIRCNetwork * >::value_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  std::vector< CIRCNetwork * >::value_type arg2 = (std::vector< CIRCNetwork * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VIRCNetworks_append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks_append" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VIRCNetworks_append" "', argument " "2"" of type '" "std::vector< CIRCNetwork * >::value_type""'"); 
  }
  arg2 = reinterpret_cast< std::vector< CIRCNetwork * >::value_type >(argp2);
  std_vector_Sl_CIRCNetwork_Sm__Sg__append(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VIRCNetworks__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_VIRCNetworks")) SWIG_fail;
  result = (std::vector< CIRCNetwork * > *)new std::vector< CIRCNetwork * >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VIRCNetworks__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  std::vector< CIRCNetwork * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_VIRCNetworks",&obj0)) SWIG_fail;
  {
    std::vector<CIRCNetwork*,std::allocator< CIRCNetwork * > > *ptr = (std::vector<CIRCNetwork*,std::allocator< CIRCNetwork * > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VIRCNetworks" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_VIRCNetworks" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > const &""'"); 
    }
    arg1 = ptr;
  }
  result = (std::vector< CIRCNetwork * > *)new std::vector< CIRCNetwork * >((std::vector< CIRCNetwork * > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VIRCNetworks_empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks_empty" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  result = (bool)((std::vector< CIRCNetwork * > const *)arg1)->empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< CIRCNetwork * >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VIRCNetworks_size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks_size" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  result = ((std::vector< CIRCNetwork * > const *)arg1)->size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VIRCNetworks_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks_clear" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks_swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  std::vector< CIRCNetwork * > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VIRCNetworks_swap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks_swap" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VIRCNetworks_swap" "', argument " "2"" of type '" "std::vector< CIRCNetwork * > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VIRCNetworks_swap" "', argument " "2"" of type '" "std::vector< CIRCNetwork * > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp2);
  (arg1)->swap(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks_get_allocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::allocator< CIRCNetwork * > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VIRCNetworks_get_allocator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks_get_allocator" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  result = ((std::vector< CIRCNetwork * > const *)arg1)->get_allocator();
  resultobj = SWIG_NewPointerObj((new std::vector< CIRCNetwork * >::allocator_type(static_cast< const std::vector< CIRCNetwork * >::allocator_type& >(result))), SWIGTYPE_p_std__allocatorT_CIRCNetwork_p_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< CIRCNetwork * >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VIRCNetworks_begin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks_begin" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  result = (arg1)->begin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< CIRCNetwork * >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< CIRCNetwork * >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VIRCNetworks_end",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks_end" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  result = (arg1)->end();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< CIRCNetwork * >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks_rbegin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< CIRCNetwork * >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VIRCNetworks_rbegin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks_rbegin" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  result = (arg1)->rbegin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< CIRCNetwork * >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks_rend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< CIRCNetwork * >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VIRCNetworks_rend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks_rend" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  result = (arg1)->rend();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< CIRCNetwork * >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VIRCNetworks__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * >::size_type arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< CIRCNetwork * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_VIRCNetworks",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_VIRCNetworks" "', argument " "1"" of type '" "std::vector< CIRCNetwork * >::size_type""'");
  } 
  arg1 = static_cast< std::vector< CIRCNetwork * >::size_type >(val1);
  result = (std::vector< CIRCNetwork * > *)new std::vector< CIRCNetwork * >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks_pop_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VIRCNetworks_pop_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks_pop_back" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  (arg1)->pop_back();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks_resize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  std::vector< CIRCNetwork * >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VIRCNetworks_resize",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks_resize" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VIRCNetworks_resize" "', argument " "2"" of type '" "std::vector< CIRCNetwork * >::size_type""'");
  } 
  arg2 = static_cast< std::vector< CIRCNetwork * >::size_type >(val2);
  (arg1)->resize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks_erase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  std::vector< CIRCNetwork * >::iterator arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< CIRCNetwork * >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VIRCNetworks_erase",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks_erase" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VIRCNetworks_erase" "', argument " "2"" of type '" "std::vector< CIRCNetwork * >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< CIRCNetwork * >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< CIRCNetwork * >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VIRCNetworks_erase" "', argument " "2"" of type '" "std::vector< CIRCNetwork * >::iterator""'");
    }
  }
  result = (arg1)->erase(arg2);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< CIRCNetwork * >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks_erase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  std::vector< CIRCNetwork * >::iterator arg2 ;
  std::vector< CIRCNetwork * >::iterator arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  swig::SwigPyIterator *iter3 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< CIRCNetwork * >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VIRCNetworks_erase",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks_erase" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VIRCNetworks_erase" "', argument " "2"" of type '" "std::vector< CIRCNetwork * >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< CIRCNetwork * >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< CIRCNetwork * >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VIRCNetworks_erase" "', argument " "2"" of type '" "std::vector< CIRCNetwork * >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, SWIG_as_voidptrptr(&iter3), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res3) || !iter3) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VIRCNetworks_erase" "', argument " "3"" of type '" "std::vector< CIRCNetwork * >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< CIRCNetwork * >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< CIRCNetwork * >::iterator > *>(iter3);
    if (iter_t) {
      arg3 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VIRCNetworks_erase" "', argument " "3"" of type '" "std::vector< CIRCNetwork * >::iterator""'");
    }
  }
  result = (arg1)->erase(arg2,arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< CIRCNetwork * >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks_erase(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CIRCNetwork*,std::allocator< CIRCNetwork * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< CIRCNetwork * >::iterator > *>(iter) != 0));
      if (_v) {
        return _wrap_VIRCNetworks_erase__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CIRCNetwork*,std::allocator< CIRCNetwork * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< CIRCNetwork * >::iterator > *>(iter) != 0));
      if (_v) {
        swig::SwigPyIterator *iter = 0;
        int res = SWIG_ConvertPtr(argv[2], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
        _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< CIRCNetwork * >::iterator > *>(iter) != 0));
        if (_v) {
          return _wrap_VIRCNetworks_erase__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'VIRCNetworks_erase'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< CIRCNetwork * >::erase(std::vector< CIRCNetwork * >::iterator)\n"
    "    std::vector< CIRCNetwork * >::erase(std::vector< CIRCNetwork * >::iterator,std::vector< CIRCNetwork * >::iterator)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_VIRCNetworks__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * >::size_type arg1 ;
  std::vector< CIRCNetwork * >::value_type arg2 = (std::vector< CIRCNetwork * >::value_type) 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< CIRCNetwork * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_VIRCNetworks",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_VIRCNetworks" "', argument " "1"" of type '" "std::vector< CIRCNetwork * >::size_type""'");
  } 
  arg1 = static_cast< std::vector< CIRCNetwork * >::size_type >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_VIRCNetworks" "', argument " "2"" of type '" "std::vector< CIRCNetwork * >::value_type""'"); 
  }
  arg2 = reinterpret_cast< std::vector< CIRCNetwork * >::value_type >(argp2);
  result = (std::vector< CIRCNetwork * > *)new std::vector< CIRCNetwork * >(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VIRCNetworks(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_VIRCNetworks__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_VIRCNetworks__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CIRCNetwork*,std::allocator< CIRCNetwork * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_VIRCNetworks__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_VIRCNetworks__SWIG_3(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_VIRCNetworks'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< CIRCNetwork * >::vector()\n"
    "    std::vector< CIRCNetwork * >::vector(std::vector< CIRCNetwork * > const &)\n"
    "    std::vector< CIRCNetwork * >::vector(std::vector< CIRCNetwork * >::size_type)\n"
    "    std::vector< CIRCNetwork * >::vector(std::vector< CIRCNetwork * >::size_type,std::vector< CIRCNetwork * >::value_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks_push_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  std::vector< CIRCNetwork * >::value_type arg2 = (std::vector< CIRCNetwork * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VIRCNetworks_push_back",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks_push_back" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VIRCNetworks_push_back" "', argument " "2"" of type '" "std::vector< CIRCNetwork * >::value_type""'"); 
  }
  arg2 = reinterpret_cast< std::vector< CIRCNetwork * >::value_type >(argp2);
  (arg1)->push_back(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks_front(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< CIRCNetwork * >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VIRCNetworks_front",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks_front" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  result = (std::vector< CIRCNetwork * >::value_type)((std::vector< CIRCNetwork * > const *)arg1)->front();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< CIRCNetwork * >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VIRCNetworks_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks_back" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  result = (std::vector< CIRCNetwork * >::value_type)((std::vector< CIRCNetwork * > const *)arg1)->back();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  std::vector< CIRCNetwork * >::size_type arg2 ;
  std::vector< CIRCNetwork * >::value_type arg3 = (std::vector< CIRCNetwork * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VIRCNetworks_assign",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks_assign" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VIRCNetworks_assign" "', argument " "2"" of type '" "std::vector< CIRCNetwork * >::size_type""'");
  } 
  arg2 = static_cast< std::vector< CIRCNetwork * >::size_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VIRCNetworks_assign" "', argument " "3"" of type '" "std::vector< CIRCNetwork * >::value_type""'"); 
  }
  arg3 = reinterpret_cast< std::vector< CIRCNetwork * >::value_type >(argp3);
  (arg1)->assign(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks_resize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  std::vector< CIRCNetwork * >::size_type arg2 ;
  std::vector< CIRCNetwork * >::value_type arg3 = (std::vector< CIRCNetwork * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VIRCNetworks_resize",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks_resize" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VIRCNetworks_resize" "', argument " "2"" of type '" "std::vector< CIRCNetwork * >::size_type""'");
  } 
  arg2 = static_cast< std::vector< CIRCNetwork * >::size_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VIRCNetworks_resize" "', argument " "3"" of type '" "std::vector< CIRCNetwork * >::value_type""'"); 
  }
  arg3 = reinterpret_cast< std::vector< CIRCNetwork * >::value_type >(argp3);
  (arg1)->resize(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks_resize(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CIRCNetwork*,std::allocator< CIRCNetwork * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_VIRCNetworks_resize__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CIRCNetwork*,std::allocator< CIRCNetwork * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_VIRCNetworks_resize__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'VIRCNetworks_resize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< CIRCNetwork * >::resize(std::vector< CIRCNetwork * >::size_type)\n"
    "    std::vector< CIRCNetwork * >::resize(std::vector< CIRCNetwork * >::size_type,std::vector< CIRCNetwork * >::value_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks_insert__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  std::vector< CIRCNetwork * >::iterator arg2 ;
  std::vector< CIRCNetwork * >::value_type arg3 = (std::vector< CIRCNetwork * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< CIRCNetwork * >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VIRCNetworks_insert",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks_insert" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VIRCNetworks_insert" "', argument " "2"" of type '" "std::vector< CIRCNetwork * >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< CIRCNetwork * >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< CIRCNetwork * >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VIRCNetworks_insert" "', argument " "2"" of type '" "std::vector< CIRCNetwork * >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VIRCNetworks_insert" "', argument " "3"" of type '" "std::vector< CIRCNetwork * >::value_type""'"); 
  }
  arg3 = reinterpret_cast< std::vector< CIRCNetwork * >::value_type >(argp3);
  result = (arg1)->insert(arg2,arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< CIRCNetwork * >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks_insert__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  std::vector< CIRCNetwork * >::iterator arg2 ;
  std::vector< CIRCNetwork * >::size_type arg3 ;
  std::vector< CIRCNetwork * >::value_type arg4 = (std::vector< CIRCNetwork * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  size_t val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:VIRCNetworks_insert",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks_insert" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VIRCNetworks_insert" "', argument " "2"" of type '" "std::vector< CIRCNetwork * >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< CIRCNetwork * >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< CIRCNetwork * >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VIRCNetworks_insert" "', argument " "2"" of type '" "std::vector< CIRCNetwork * >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VIRCNetworks_insert" "', argument " "3"" of type '" "std::vector< CIRCNetwork * >::size_type""'");
  } 
  arg3 = static_cast< std::vector< CIRCNetwork * >::size_type >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "VIRCNetworks_insert" "', argument " "4"" of type '" "std::vector< CIRCNetwork * >::value_type""'"); 
  }
  arg4 = reinterpret_cast< std::vector< CIRCNetwork * >::value_type >(argp4);
  (arg1)->insert(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks_insert(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CIRCNetwork*,std::allocator< CIRCNetwork * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< CIRCNetwork * >::iterator > *>(iter) != 0));
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_VIRCNetworks_insert__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CIRCNetwork*,std::allocator< CIRCNetwork * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< CIRCNetwork * >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_VIRCNetworks_insert__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'VIRCNetworks_insert'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< CIRCNetwork * >::insert(std::vector< CIRCNetwork * >::iterator,std::vector< CIRCNetwork * >::value_type)\n"
    "    std::vector< CIRCNetwork * >::insert(std::vector< CIRCNetwork * >::iterator,std::vector< CIRCNetwork * >::size_type,std::vector< CIRCNetwork * >::value_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks_reserve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  std::vector< CIRCNetwork * >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VIRCNetworks_reserve",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks_reserve" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VIRCNetworks_reserve" "', argument " "2"" of type '" "std::vector< CIRCNetwork * >::size_type""'");
  } 
  arg2 = static_cast< std::vector< CIRCNetwork * >::size_type >(val2);
  (arg1)->reserve(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VIRCNetworks_capacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< CIRCNetwork * >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VIRCNetworks_capacity",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks_capacity" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  result = ((std::vector< CIRCNetwork * > const *)arg1)->capacity();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_VIRCNetworks(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_VIRCNetworks",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_VIRCNetworks" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *VIRCNetworks_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_VChannels_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  arg2 = &obj0;
  if (!PyArg_ParseTuple(args,(char *)"O:VChannels_iterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels_iterator" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  result = (swig::SwigPyIterator *)std_vector_Sl_CChan_Sm__Sg__iterator(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VChannels___nonzero__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels___nonzero__" "', argument " "1"" of type '" "std::vector< CChan * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  result = (bool)std_vector_Sl_CChan_Sm__Sg____nonzero__((std::vector< CChan * > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels___bool__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VChannels___bool__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels___bool__" "', argument " "1"" of type '" "std::vector< CChan * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  result = (bool)std_vector_Sl_CChan_Sm__Sg____bool__((std::vector< CChan * > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< CChan * >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VChannels___len__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels___len__" "', argument " "1"" of type '" "std::vector< CChan * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  result = std_vector_Sl_CChan_Sm__Sg____len__((std::vector< CChan * > const *)arg1);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels_pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< CChan * >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VChannels_pop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels_pop" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  try {
    result = (std::vector< CChan * >::value_type)std_vector_Sl_CChan_Sm__Sg__pop(arg1);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CChan, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels___getslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  std::vector< CChan * >::difference_type arg2 ;
  std::vector< CChan * >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< CChan *,std::allocator< CChan * > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VChannels___getslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels___getslice__" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VChannels___getslice__" "', argument " "2"" of type '" "std::vector< CChan * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< CChan * >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VChannels___getslice__" "', argument " "3"" of type '" "std::vector< CChan * >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< CChan * >::difference_type >(val3);
  try {
    result = (std::vector< CChan *,std::allocator< CChan * > > *)std_vector_Sl_CChan_Sm__Sg____getslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels___setslice____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  std::vector< CChan * >::difference_type arg2 ;
  std::vector< CChan * >::difference_type arg3 ;
  std::vector< CChan *,std::allocator< CChan * > > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:VChannels___setslice__",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels___setslice__" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VChannels___setslice__" "', argument " "2"" of type '" "std::vector< CChan * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< CChan * >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VChannels___setslice__" "', argument " "3"" of type '" "std::vector< CChan * >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< CChan * >::difference_type >(val3);
  {
    std::vector<CChan*,std::allocator< CChan * > > *ptr = (std::vector<CChan*,std::allocator< CChan * > > *)0;
    res4 = swig::asptr(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "VChannels___setslice__" "', argument " "4"" of type '" "std::vector< CChan *,std::allocator< CChan * > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VChannels___setslice__" "', argument " "4"" of type '" "std::vector< CChan *,std::allocator< CChan * > > const &""'"); 
    }
    arg4 = ptr;
  }
  try {
    std_vector_Sl_CChan_Sm__Sg____setslice____SWIG_0(arg1,arg2,arg3,(std::vector< CChan *,std::allocator< CChan * > > const &)*arg4);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels___setslice____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  std::vector< CChan * >::difference_type arg2 ;
  std::vector< CChan * >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VChannels___setslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels___setslice__" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VChannels___setslice__" "', argument " "2"" of type '" "std::vector< CChan * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< CChan * >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VChannels___setslice__" "', argument " "3"" of type '" "std::vector< CChan * >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< CChan * >::difference_type >(val3);
  try {
    std_vector_Sl_CChan_Sm__Sg____setslice____SWIG_0(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels___setslice__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CChan*,std::allocator< CChan * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_VChannels___setslice____SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CChan*,std::allocator< CChan * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = swig::asptr(argv[3], (std::vector<CChan*,std::allocator< CChan * > >**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_VChannels___setslice____SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'VChannels___setslice__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< CChan * >::__setslice__(std::vector< CChan * >::difference_type,std::vector< CChan * >::difference_type,std::vector< CChan *,std::allocator< CChan * > > const &)\n"
    "    std::vector< CChan * >::__setslice__(std::vector< CChan * >::difference_type,std::vector< CChan * >::difference_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VChannels___delslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  std::vector< CChan * >::difference_type arg2 ;
  std::vector< CChan * >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VChannels___delslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels___delslice__" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VChannels___delslice__" "', argument " "2"" of type '" "std::vector< CChan * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< CChan * >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VChannels___delslice__" "', argument " "3"" of type '" "std::vector< CChan * >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< CChan * >::difference_type >(val3);
  try {
    std_vector_Sl_CChan_Sm__Sg____delslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels___delitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  std::vector< CChan * >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VChannels___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels___delitem__" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VChannels___delitem__" "', argument " "2"" of type '" "std::vector< CChan * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< CChan * >::difference_type >(val2);
  try {
    std_vector_Sl_CChan_Sm__Sg____delitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels___getitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< CChan *,std::allocator< CChan * > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VChannels___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels___getitem__" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VChannels___getitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    result = (std::vector< CChan *,std::allocator< CChan * > > *)std_vector_Sl_CChan_Sm__Sg____getitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  std::vector< CChan *,std::allocator< CChan * > > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VChannels___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels___setitem__" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VChannels___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  {
    std::vector<CChan*,std::allocator< CChan * > > *ptr = (std::vector<CChan*,std::allocator< CChan * > > *)0;
    res3 = swig::asptr(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VChannels___setitem__" "', argument " "3"" of type '" "std::vector< CChan *,std::allocator< CChan * > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VChannels___setitem__" "', argument " "3"" of type '" "std::vector< CChan *,std::allocator< CChan * > > const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    std_vector_Sl_CChan_Sm__Sg____setitem____SWIG_0(arg1,arg2,(std::vector< CChan *,std::allocator< CChan * > > const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VChannels___setitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels___setitem__" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VChannels___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_vector_Sl_CChan_Sm__Sg____setitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels___delitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VChannels___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels___delitem__" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VChannels___delitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_vector_Sl_CChan_Sm__Sg____delitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels___delitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CChan*,std::allocator< CChan * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_VChannels___delitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CChan*,std::allocator< CChan * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_VChannels___delitem____SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'VChannels___delitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< CChan * >::__delitem__(std::vector< CChan * >::difference_type)\n"
    "    std::vector< CChan * >::__delitem__(PySliceObject *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VChannels___getitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  std::vector< CChan * >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< CChan * >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VChannels___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels___getitem__" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VChannels___getitem__" "', argument " "2"" of type '" "std::vector< CChan * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< CChan * >::difference_type >(val2);
  try {
    result = (std::vector< CChan * >::value_type)std_vector_Sl_CChan_Sm__Sg____getitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CChan, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels___getitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CChan*,std::allocator< CChan * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_VChannels___getitem____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CChan*,std::allocator< CChan * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_VChannels___getitem____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'VChannels___getitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< CChan * >::__getitem__(PySliceObject *)\n"
    "    std::vector< CChan * >::__getitem__(std::vector< CChan * >::difference_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VChannels___setitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  std::vector< CChan * >::difference_type arg2 ;
  std::vector< CChan * >::value_type arg3 = (std::vector< CChan * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VChannels___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels___setitem__" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VChannels___setitem__" "', argument " "2"" of type '" "std::vector< CChan * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< CChan * >::difference_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VChannels___setitem__" "', argument " "3"" of type '" "std::vector< CChan * >::value_type""'"); 
  }
  arg3 = reinterpret_cast< std::vector< CChan * >::value_type >(argp3);
  try {
    std_vector_Sl_CChan_Sm__Sg____setitem____SWIG_2(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels___setitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CChan*,std::allocator< CChan * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_VChannels___setitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CChan*,std::allocator< CChan * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector<CChan*,std::allocator< CChan * > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_VChannels___setitem____SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CChan*,std::allocator< CChan * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CChan, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_VChannels___setitem____SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'VChannels___setitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< CChan * >::__setitem__(PySliceObject *,std::vector< CChan *,std::allocator< CChan * > > const &)\n"
    "    std::vector< CChan * >::__setitem__(PySliceObject *)\n"
    "    std::vector< CChan * >::__setitem__(std::vector< CChan * >::difference_type,std::vector< CChan * >::value_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VChannels_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  std::vector< CChan * >::value_type arg2 = (std::vector< CChan * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VChannels_append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels_append" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VChannels_append" "', argument " "2"" of type '" "std::vector< CChan * >::value_type""'"); 
  }
  arg2 = reinterpret_cast< std::vector< CChan * >::value_type >(argp2);
  std_vector_Sl_CChan_Sm__Sg__append(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VChannels__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_VChannels")) SWIG_fail;
  result = (std::vector< CChan * > *)new std::vector< CChan * >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VChannels__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  std::vector< CChan * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_VChannels",&obj0)) SWIG_fail;
  {
    std::vector<CChan*,std::allocator< CChan * > > *ptr = (std::vector<CChan*,std::allocator< CChan * > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VChannels" "', argument " "1"" of type '" "std::vector< CChan * > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_VChannels" "', argument " "1"" of type '" "std::vector< CChan * > const &""'"); 
    }
    arg1 = ptr;
  }
  result = (std::vector< CChan * > *)new std::vector< CChan * >((std::vector< CChan * > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VChannels_empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels_empty" "', argument " "1"" of type '" "std::vector< CChan * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  result = (bool)((std::vector< CChan * > const *)arg1)->empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< CChan * >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VChannels_size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels_size" "', argument " "1"" of type '" "std::vector< CChan * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  result = ((std::vector< CChan * > const *)arg1)->size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VChannels_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels_clear" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels_swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  std::vector< CChan * > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VChannels_swap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels_swap" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VChannels_swap" "', argument " "2"" of type '" "std::vector< CChan * > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VChannels_swap" "', argument " "2"" of type '" "std::vector< CChan * > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< CChan * > * >(argp2);
  (arg1)->swap(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels_get_allocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::allocator< CChan * > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VChannels_get_allocator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels_get_allocator" "', argument " "1"" of type '" "std::vector< CChan * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  result = ((std::vector< CChan * > const *)arg1)->get_allocator();
  resultobj = SWIG_NewPointerObj((new std::vector< CChan * >::allocator_type(static_cast< const std::vector< CChan * >::allocator_type& >(result))), SWIGTYPE_p_std__allocatorT_CChan_p_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< CChan * >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VChannels_begin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels_begin" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  result = (arg1)->begin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< CChan * >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< CChan * >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VChannels_end",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels_end" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  result = (arg1)->end();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< CChan * >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels_rbegin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< CChan * >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VChannels_rbegin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels_rbegin" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  result = (arg1)->rbegin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< CChan * >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels_rend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< CChan * >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VChannels_rend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels_rend" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  result = (arg1)->rend();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< CChan * >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VChannels__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * >::size_type arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< CChan * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_VChannels",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_VChannels" "', argument " "1"" of type '" "std::vector< CChan * >::size_type""'");
  } 
  arg1 = static_cast< std::vector< CChan * >::size_type >(val1);
  result = (std::vector< CChan * > *)new std::vector< CChan * >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels_pop_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VChannels_pop_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels_pop_back" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  (arg1)->pop_back();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels_resize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  std::vector< CChan * >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VChannels_resize",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels_resize" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VChannels_resize" "', argument " "2"" of type '" "std::vector< CChan * >::size_type""'");
  } 
  arg2 = static_cast< std::vector< CChan * >::size_type >(val2);
  (arg1)->resize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels_erase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  std::vector< CChan * >::iterator arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< CChan * >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VChannels_erase",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels_erase" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VChannels_erase" "', argument " "2"" of type '" "std::vector< CChan * >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< CChan * >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< CChan * >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VChannels_erase" "', argument " "2"" of type '" "std::vector< CChan * >::iterator""'");
    }
  }
  result = (arg1)->erase(arg2);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< CChan * >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels_erase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  std::vector< CChan * >::iterator arg2 ;
  std::vector< CChan * >::iterator arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  swig::SwigPyIterator *iter3 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< CChan * >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VChannels_erase",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels_erase" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VChannels_erase" "', argument " "2"" of type '" "std::vector< CChan * >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< CChan * >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< CChan * >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VChannels_erase" "', argument " "2"" of type '" "std::vector< CChan * >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, SWIG_as_voidptrptr(&iter3), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res3) || !iter3) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VChannels_erase" "', argument " "3"" of type '" "std::vector< CChan * >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< CChan * >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< CChan * >::iterator > *>(iter3);
    if (iter_t) {
      arg3 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VChannels_erase" "', argument " "3"" of type '" "std::vector< CChan * >::iterator""'");
    }
  }
  result = (arg1)->erase(arg2,arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< CChan * >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels_erase(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CChan*,std::allocator< CChan * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< CChan * >::iterator > *>(iter) != 0));
      if (_v) {
        return _wrap_VChannels_erase__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CChan*,std::allocator< CChan * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< CChan * >::iterator > *>(iter) != 0));
      if (_v) {
        swig::SwigPyIterator *iter = 0;
        int res = SWIG_ConvertPtr(argv[2], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
        _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< CChan * >::iterator > *>(iter) != 0));
        if (_v) {
          return _wrap_VChannels_erase__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'VChannels_erase'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< CChan * >::erase(std::vector< CChan * >::iterator)\n"
    "    std::vector< CChan * >::erase(std::vector< CChan * >::iterator,std::vector< CChan * >::iterator)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_VChannels__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * >::size_type arg1 ;
  std::vector< CChan * >::value_type arg2 = (std::vector< CChan * >::value_type) 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< CChan * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_VChannels",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_VChannels" "', argument " "1"" of type '" "std::vector< CChan * >::size_type""'");
  } 
  arg1 = static_cast< std::vector< CChan * >::size_type >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_VChannels" "', argument " "2"" of type '" "std::vector< CChan * >::value_type""'"); 
  }
  arg2 = reinterpret_cast< std::vector< CChan * >::value_type >(argp2);
  result = (std::vector< CChan * > *)new std::vector< CChan * >(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VChannels(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_VChannels__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_VChannels__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CChan*,std::allocator< CChan * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_VChannels__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CChan, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_VChannels__SWIG_3(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_VChannels'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< CChan * >::vector()\n"
    "    std::vector< CChan * >::vector(std::vector< CChan * > const &)\n"
    "    std::vector< CChan * >::vector(std::vector< CChan * >::size_type)\n"
    "    std::vector< CChan * >::vector(std::vector< CChan * >::size_type,std::vector< CChan * >::value_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VChannels_push_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  std::vector< CChan * >::value_type arg2 = (std::vector< CChan * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VChannels_push_back",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels_push_back" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VChannels_push_back" "', argument " "2"" of type '" "std::vector< CChan * >::value_type""'"); 
  }
  arg2 = reinterpret_cast< std::vector< CChan * >::value_type >(argp2);
  (arg1)->push_back(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels_front(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< CChan * >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VChannels_front",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels_front" "', argument " "1"" of type '" "std::vector< CChan * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  result = (std::vector< CChan * >::value_type)((std::vector< CChan * > const *)arg1)->front();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CChan, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< CChan * >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VChannels_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels_back" "', argument " "1"" of type '" "std::vector< CChan * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  result = (std::vector< CChan * >::value_type)((std::vector< CChan * > const *)arg1)->back();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CChan, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  std::vector< CChan * >::size_type arg2 ;
  std::vector< CChan * >::value_type arg3 = (std::vector< CChan * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VChannels_assign",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels_assign" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VChannels_assign" "', argument " "2"" of type '" "std::vector< CChan * >::size_type""'");
  } 
  arg2 = static_cast< std::vector< CChan * >::size_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VChannels_assign" "', argument " "3"" of type '" "std::vector< CChan * >::value_type""'"); 
  }
  arg3 = reinterpret_cast< std::vector< CChan * >::value_type >(argp3);
  (arg1)->assign(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels_resize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  std::vector< CChan * >::size_type arg2 ;
  std::vector< CChan * >::value_type arg3 = (std::vector< CChan * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VChannels_resize",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels_resize" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VChannels_resize" "', argument " "2"" of type '" "std::vector< CChan * >::size_type""'");
  } 
  arg2 = static_cast< std::vector< CChan * >::size_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VChannels_resize" "', argument " "3"" of type '" "std::vector< CChan * >::value_type""'"); 
  }
  arg3 = reinterpret_cast< std::vector< CChan * >::value_type >(argp3);
  (arg1)->resize(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels_resize(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CChan*,std::allocator< CChan * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_VChannels_resize__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CChan*,std::allocator< CChan * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CChan, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_VChannels_resize__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'VChannels_resize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< CChan * >::resize(std::vector< CChan * >::size_type)\n"
    "    std::vector< CChan * >::resize(std::vector< CChan * >::size_type,std::vector< CChan * >::value_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VChannels_insert__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  std::vector< CChan * >::iterator arg2 ;
  std::vector< CChan * >::value_type arg3 = (std::vector< CChan * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< CChan * >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VChannels_insert",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels_insert" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VChannels_insert" "', argument " "2"" of type '" "std::vector< CChan * >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< CChan * >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< CChan * >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VChannels_insert" "', argument " "2"" of type '" "std::vector< CChan * >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VChannels_insert" "', argument " "3"" of type '" "std::vector< CChan * >::value_type""'"); 
  }
  arg3 = reinterpret_cast< std::vector< CChan * >::value_type >(argp3);
  result = (arg1)->insert(arg2,arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< CChan * >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels_insert__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  std::vector< CChan * >::iterator arg2 ;
  std::vector< CChan * >::size_type arg3 ;
  std::vector< CChan * >::value_type arg4 = (std::vector< CChan * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  size_t val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:VChannels_insert",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels_insert" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VChannels_insert" "', argument " "2"" of type '" "std::vector< CChan * >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< CChan * >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< CChan * >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VChannels_insert" "', argument " "2"" of type '" "std::vector< CChan * >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VChannels_insert" "', argument " "3"" of type '" "std::vector< CChan * >::size_type""'");
  } 
  arg3 = static_cast< std::vector< CChan * >::size_type >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "VChannels_insert" "', argument " "4"" of type '" "std::vector< CChan * >::value_type""'"); 
  }
  arg4 = reinterpret_cast< std::vector< CChan * >::value_type >(argp4);
  (arg1)->insert(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels_insert(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CChan*,std::allocator< CChan * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< CChan * >::iterator > *>(iter) != 0));
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CChan, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_VChannels_insert__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CChan*,std::allocator< CChan * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< CChan * >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CChan, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_VChannels_insert__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'VChannels_insert'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< CChan * >::insert(std::vector< CChan * >::iterator,std::vector< CChan * >::value_type)\n"
    "    std::vector< CChan * >::insert(std::vector< CChan * >::iterator,std::vector< CChan * >::size_type,std::vector< CChan * >::value_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VChannels_reserve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  std::vector< CChan * >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VChannels_reserve",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels_reserve" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VChannels_reserve" "', argument " "2"" of type '" "std::vector< CChan * >::size_type""'");
  } 
  arg2 = static_cast< std::vector< CChan * >::size_type >(val2);
  (arg1)->reserve(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VChannels_capacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< CChan * >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VChannels_capacity",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels_capacity" "', argument " "1"" of type '" "std::vector< CChan * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  result = ((std::vector< CChan * > const *)arg1)->capacity();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_VChannels(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_VChannels",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_VChannels" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *VChannels_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_MNicks__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::less< CString > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::map< CString,CNick > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_MNicks",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__lessT_CString_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MNicks" "', argument " "1"" of type '" "std::less< CString > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MNicks" "', argument " "1"" of type '" "std::less< CString > const &""'"); 
  }
  arg1 = reinterpret_cast< std::less< CString > * >(argp1);
  result = (std::map< CString,CNick > *)new std::map< CString,CNick >((std::less< CString > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MNicks_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< CString,CNick > *arg1 = (std::map< CString,CNick > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  arg2 = &obj0;
  if (!PyArg_ParseTuple(args,(char *)"O:MNicks_iterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MNicks_iterator" "', argument " "1"" of type '" "std::map< CString,CNick > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< CString,CNick > * >(argp1);
  result = (swig::SwigPyIterator *)std_map_Sl_CString_Sc_CNick_Sg__iterator(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MNicks___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< CString,CNick > *arg1 = (std::map< CString,CNick > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MNicks___nonzero__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MNicks___nonzero__" "', argument " "1"" of type '" "std::map< CString,CNick > const *""'"); 
  }
  arg1 = reinterpret_cast< std::map< CString,CNick > * >(argp1);
  result = (bool)std_map_Sl_CString_Sc_CNick_Sg____nonzero__((std::map< CString,CNick > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MNicks___bool__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< CString,CNick > *arg1 = (std::map< CString,CNick > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MNicks___bool__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MNicks___bool__" "', argument " "1"" of type '" "std::map< CString,CNick > const *""'"); 
  }
  arg1 = reinterpret_cast< std::map< CString,CNick > * >(argp1);
  result = (bool)std_map_Sl_CString_Sc_CNick_Sg____bool__((std::map< CString,CNick > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MNicks___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< CString,CNick > *arg1 = (std::map< CString,CNick > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::map< CString,CNick >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MNicks___len__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MNicks___len__" "', argument " "1"" of type '" "std::map< CString,CNick > const *""'"); 
  }
  arg1 = reinterpret_cast< std::map< CString,CNick > * >(argp1);
  result = std_map_Sl_CString_Sc_CNick_Sg____len__((std::map< CString,CNick > const *)arg1);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MNicks___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< CString,CNick > *arg1 = (std::map< CString,CNick > *) 0 ;
  std::map< CString,CNick >::key_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::map< CString,CNick >::mapped_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MNicks___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MNicks___getitem__" "', argument " "1"" of type '" "std::map< CString,CNick > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< CString,CNick > * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MNicks___getitem__" "', argument " "2"" of type '" "std::map< CString,CNick >::key_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MNicks___getitem__" "', argument " "2"" of type '" "std::map< CString,CNick >::key_type const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    result = (std::map< CString,CNick >::mapped_type *) &std_map_Sl_CString_Sc_CNick_Sg____getitem__(arg1,(CString const &)*arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CNick, 0 |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_MNicks___delitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< CString,CNick > *arg1 = (std::map< CString,CNick > *) 0 ;
  std::map< CString,CNick >::key_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MNicks___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MNicks___delitem__" "', argument " "1"" of type '" "std::map< CString,CNick > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< CString,CNick > * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MNicks___delitem__" "', argument " "2"" of type '" "std::map< CString,CNick >::key_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MNicks___delitem__" "', argument " "2"" of type '" "std::map< CString,CNick >::key_type const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    std_map_Sl_CString_Sc_CNick_Sg____delitem__(arg1,(CString const &)*arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_MNicks_has_key(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< CString,CNick > *arg1 = (std::map< CString,CNick > *) 0 ;
  std::map< CString,CNick >::key_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MNicks_has_key",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MNicks_has_key" "', argument " "1"" of type '" "std::map< CString,CNick > const *""'"); 
  }
  arg1 = reinterpret_cast< std::map< CString,CNick > * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MNicks_has_key" "', argument " "2"" of type '" "std::map< CString,CNick >::key_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MNicks_has_key" "', argument " "2"" of type '" "std::map< CString,CNick >::key_type const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)std_map_Sl_CString_Sc_CNick_Sg__has_key((std::map< CString,CNick > const *)arg1,(CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_MNicks_keys(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< CString,CNick > *arg1 = (std::map< CString,CNick > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MNicks_keys",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MNicks_keys" "', argument " "1"" of type '" "std::map< CString,CNick > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< CString,CNick > * >(argp1);
  result = (PyObject *)std_map_Sl_CString_Sc_CNick_Sg__keys(arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MNicks_values(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< CString,CNick > *arg1 = (std::map< CString,CNick > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MNicks_values",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MNicks_values" "', argument " "1"" of type '" "std::map< CString,CNick > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< CString,CNick > * >(argp1);
  result = (PyObject *)std_map_Sl_CString_Sc_CNick_Sg__values(arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MNicks_items(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< CString,CNick > *arg1 = (std::map< CString,CNick > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MNicks_items",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MNicks_items" "', argument " "1"" of type '" "std::map< CString,CNick > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< CString,CNick > * >(argp1);
  result = (PyObject *)std_map_Sl_CString_Sc_CNick_Sg__items(arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MNicks___contains__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< CString,CNick > *arg1 = (std::map< CString,CNick > *) 0 ;
  std::map< CString,CNick >::key_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MNicks___contains__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MNicks___contains__" "', argument " "1"" of type '" "std::map< CString,CNick > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< CString,CNick > * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MNicks___contains__" "', argument " "2"" of type '" "std::map< CString,CNick >::key_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MNicks___contains__" "', argument " "2"" of type '" "std::map< CString,CNick >::key_type const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)std_map_Sl_CString_Sc_CNick_Sg____contains__(arg1,(CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_MNicks_key_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< CString,CNick > *arg1 = (std::map< CString,CNick > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  arg2 = &obj0;
  if (!PyArg_ParseTuple(args,(char *)"O:MNicks_key_iterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MNicks_key_iterator" "', argument " "1"" of type '" "std::map< CString,CNick > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< CString,CNick > * >(argp1);
  result = (swig::SwigPyIterator *)std_map_Sl_CString_Sc_CNick_Sg__key_iterator(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MNicks_value_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< CString,CNick > *arg1 = (std::map< CString,CNick > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  arg2 = &obj0;
  if (!PyArg_ParseTuple(args,(char *)"O:MNicks_value_iterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MNicks_value_iterator" "', argument " "1"" of type '" "std::map< CString,CNick > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< CString,CNick > * >(argp1);
  result = (swig::SwigPyIterator *)std_map_Sl_CString_Sc_CNick_Sg__value_iterator(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MNicks___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< CString,CNick > *arg1 = (std::map< CString,CNick > *) 0 ;
  std::map< CString,CNick >::key_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MNicks___setitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MNicks___setitem__" "', argument " "1"" of type '" "std::map< CString,CNick > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< CString,CNick > * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MNicks___setitem__" "', argument " "2"" of type '" "std::map< CString,CNick >::key_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MNicks___setitem__" "', argument " "2"" of type '" "std::map< CString,CNick >::key_type const &""'"); 
    }
    arg2 = ptr;
  }
  std_map_Sl_CString_Sc_CNick_Sg____setitem____SWIG_0(arg1,(CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_MNicks___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< CString,CNick > *arg1 = (std::map< CString,CNick > *) 0 ;
  std::map< CString,CNick >::key_type *arg2 = 0 ;
  std::map< CString,CNick >::mapped_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MNicks___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MNicks___setitem__" "', argument " "1"" of type '" "std::map< CString,CNick > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< CString,CNick > * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MNicks___setitem__" "', argument " "2"" of type '" "std::map< CString,CNick >::key_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MNicks___setitem__" "', argument " "2"" of type '" "std::map< CString,CNick >::key_type const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MNicks___setitem__" "', argument " "3"" of type '" "std::map< CString,CNick >::mapped_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MNicks___setitem__" "', argument " "3"" of type '" "std::map< CString,CNick >::mapped_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::map< CString,CNick >::mapped_type * >(argp3);
  try {
    std_map_Sl_CString_Sc_CNick_Sg____setitem____SWIG_1(arg1,(CString const &)*arg2,(CNick const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_MNicks___setitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::map<CString,CNick,std::less< CString >,std::allocator< std::pair< CString const,CNick > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_MNicks___setitem____SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::map<CString,CNick,std::less< CString >,std::allocator< std::pair< CString const,CNick > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_CNick, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_MNicks___setitem____SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'MNicks___setitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::map< CString,CNick >::__setitem__(std::map< CString,CNick >::key_type const &)\n"
    "    std::map< CString,CNick >::__setitem__(std::map< CString,CNick >::key_type const &,std::map< CString,CNick >::mapped_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_MNicks_asdict(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< CString,CNick > *arg1 = (std::map< CString,CNick > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MNicks_asdict",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MNicks_asdict" "', argument " "1"" of type '" "std::map< CString,CNick > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< CString,CNick > * >(argp1);
  result = (PyObject *)std_map_Sl_CString_Sc_CNick_Sg__asdict(arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MNicks__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< CString,CNick > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_MNicks")) SWIG_fail;
  result = (std::map< CString,CNick > *)new std::map< CString,CNick >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MNicks__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< CString,CNick > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  std::map< CString,CNick > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_MNicks",&obj0)) SWIG_fail;
  {
    std::map<CString,CNick,std::less< CString >,std::allocator< std::pair< CString const,CNick > > > *ptr = (std::map<CString,CNick,std::less< CString >,std::allocator< std::pair< CString const,CNick > > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MNicks" "', argument " "1"" of type '" "std::map< CString,CNick > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MNicks" "', argument " "1"" of type '" "std::map< CString,CNick > const &""'"); 
    }
    arg1 = ptr;
  }
  result = (std::map< CString,CNick > *)new std::map< CString,CNick >((std::map< CString,CNick > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MNicks(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_MNicks__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__lessT_CString_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MNicks__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::map<CString,CNick,std::less< CString >,std::allocator< std::pair< CString const,CNick > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MNicks__SWIG_2(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_MNicks'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::map< CString,CNick >::map(std::less< CString > const &)\n"
    "    std::map< CString,CNick >::map()\n"
    "    std::map< CString,CNick >::map(std::map< CString,CNick > const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_MNicks_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< CString,CNick > *arg1 = (std::map< CString,CNick > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MNicks_empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MNicks_empty" "', argument " "1"" of type '" "std::map< CString,CNick > const *""'"); 
  }
  arg1 = reinterpret_cast< std::map< CString,CNick > * >(argp1);
  result = (bool)((std::map< CString,CNick > const *)arg1)->empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MNicks_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< CString,CNick > *arg1 = (std::map< CString,CNick > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::map< CString,CNick >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MNicks_size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MNicks_size" "', argument " "1"" of type '" "std::map< CString,CNick > const *""'"); 
  }
  arg1 = reinterpret_cast< std::map< CString,CNick > * >(argp1);
  result = ((std::map< CString,CNick > const *)arg1)->size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MNicks_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< CString,CNick > *arg1 = (std::map< CString,CNick > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MNicks_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MNicks_clear" "', argument " "1"" of type '" "std::map< CString,CNick > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< CString,CNick > * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MNicks_swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< CString,CNick > *arg1 = (std::map< CString,CNick > *) 0 ;
  std::map< CString,CNick > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MNicks_swap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MNicks_swap" "', argument " "1"" of type '" "std::map< CString,CNick > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< CString,CNick > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MNicks_swap" "', argument " "2"" of type '" "std::map< CString,CNick > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MNicks_swap" "', argument " "2"" of type '" "std::map< CString,CNick > &""'"); 
  }
  arg2 = reinterpret_cast< std::map< CString,CNick > * >(argp2);
  (arg1)->swap(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MNicks_get_allocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< CString,CNick > *arg1 = (std::map< CString,CNick > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::allocator< std::pair< CString const,CNick > > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MNicks_get_allocator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MNicks_get_allocator" "', argument " "1"" of type '" "std::map< CString,CNick > const *""'"); 
  }
  arg1 = reinterpret_cast< std::map< CString,CNick > * >(argp1);
  result = ((std::map< CString,CNick > const *)arg1)->get_allocator();
  resultobj = SWIG_NewPointerObj((new std::map< CString,CNick >::allocator_type(static_cast< const std::map< CString,CNick >::allocator_type& >(result))), SWIGTYPE_p_std__allocatorT_std__pairT_CString_const_CNick_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MNicks_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< CString,CNick > *arg1 = (std::map< CString,CNick > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::map< CString,CNick >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MNicks_begin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MNicks_begin" "', argument " "1"" of type '" "std::map< CString,CNick > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< CString,CNick > * >(argp1);
  result = (arg1)->begin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::map< CString,CNick >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MNicks_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< CString,CNick > *arg1 = (std::map< CString,CNick > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::map< CString,CNick >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MNicks_end",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MNicks_end" "', argument " "1"" of type '" "std::map< CString,CNick > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< CString,CNick > * >(argp1);
  result = (arg1)->end();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::map< CString,CNick >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MNicks_rbegin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< CString,CNick > *arg1 = (std::map< CString,CNick > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::map< CString,CNick >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MNicks_rbegin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MNicks_rbegin" "', argument " "1"" of type '" "std::map< CString,CNick > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< CString,CNick > * >(argp1);
  result = (arg1)->rbegin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::map< CString,CNick >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MNicks_rend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< CString,CNick > *arg1 = (std::map< CString,CNick > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::map< CString,CNick >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MNicks_rend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MNicks_rend" "', argument " "1"" of type '" "std::map< CString,CNick > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< CString,CNick > * >(argp1);
  result = (arg1)->rend();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::map< CString,CNick >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MNicks_erase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< CString,CNick > *arg1 = (std::map< CString,CNick > *) 0 ;
  std::map< CString,CNick >::key_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::map< CString,CNick >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MNicks_erase",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MNicks_erase" "', argument " "1"" of type '" "std::map< CString,CNick > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< CString,CNick > * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MNicks_erase" "', argument " "2"" of type '" "std::map< CString,CNick >::key_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MNicks_erase" "', argument " "2"" of type '" "std::map< CString,CNick >::key_type const &""'"); 
    }
    arg2 = ptr;
  }
  result = (arg1)->erase((std::map< CString,CNick >::key_type const &)*arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_MNicks_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< CString,CNick > *arg1 = (std::map< CString,CNick > *) 0 ;
  std::map< CString,CNick >::key_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::map< CString,CNick >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MNicks_count",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MNicks_count" "', argument " "1"" of type '" "std::map< CString,CNick > const *""'"); 
  }
  arg1 = reinterpret_cast< std::map< CString,CNick > * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MNicks_count" "', argument " "2"" of type '" "std::map< CString,CNick >::key_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MNicks_count" "', argument " "2"" of type '" "std::map< CString,CNick >::key_type const &""'"); 
    }
    arg2 = ptr;
  }
  result = ((std::map< CString,CNick > const *)arg1)->count((std::map< CString,CNick >::key_type const &)*arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_MNicks_erase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< CString,CNick > *arg1 = (std::map< CString,CNick > *) 0 ;
  std::map< CString,CNick >::iterator arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MNicks_erase",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MNicks_erase" "', argument " "1"" of type '" "std::map< CString,CNick > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< CString,CNick > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "MNicks_erase" "', argument " "2"" of type '" "std::map< CString,CNick >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::map< CString,CNick >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::map< CString,CNick >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "MNicks_erase" "', argument " "2"" of type '" "std::map< CString,CNick >::iterator""'");
    }
  }
  (arg1)->erase(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MNicks_erase__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< CString,CNick > *arg1 = (std::map< CString,CNick > *) 0 ;
  std::map< CString,CNick >::iterator arg2 ;
  std::map< CString,CNick >::iterator arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  swig::SwigPyIterator *iter3 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MNicks_erase",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MNicks_erase" "', argument " "1"" of type '" "std::map< CString,CNick > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< CString,CNick > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "MNicks_erase" "', argument " "2"" of type '" "std::map< CString,CNick >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::map< CString,CNick >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::map< CString,CNick >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "MNicks_erase" "', argument " "2"" of type '" "std::map< CString,CNick >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, SWIG_as_voidptrptr(&iter3), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res3) || !iter3) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "MNicks_erase" "', argument " "3"" of type '" "std::map< CString,CNick >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::map< CString,CNick >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::map< CString,CNick >::iterator > *>(iter3);
    if (iter_t) {
      arg3 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "MNicks_erase" "', argument " "3"" of type '" "std::map< CString,CNick >::iterator""'");
    }
  }
  (arg1)->erase(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MNicks_erase(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::map<CString,CNick,std::less< CString >,std::allocator< std::pair< CString const,CNick > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::map< CString,CNick >::iterator > *>(iter) != 0));
      if (_v) {
        return _wrap_MNicks_erase__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::map<CString,CNick,std::less< CString >,std::allocator< std::pair< CString const,CNick > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_MNicks_erase__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::map<CString,CNick,std::less< CString >,std::allocator< std::pair< CString const,CNick > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::map< CString,CNick >::iterator > *>(iter) != 0));
      if (_v) {
        swig::SwigPyIterator *iter = 0;
        int res = SWIG_ConvertPtr(argv[2], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
        _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::map< CString,CNick >::iterator > *>(iter) != 0));
        if (_v) {
          return _wrap_MNicks_erase__SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'MNicks_erase'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::map< CString,CNick >::erase(std::map< CString,CNick >::key_type const &)\n"
    "    std::map< CString,CNick >::erase(std::map< CString,CNick >::iterator)\n"
    "    std::map< CString,CNick >::erase(std::map< CString,CNick >::iterator,std::map< CString,CNick >::iterator)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_MNicks_find(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< CString,CNick > *arg1 = (std::map< CString,CNick > *) 0 ;
  std::map< CString,CNick >::key_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::map< CString,CNick >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MNicks_find",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MNicks_find" "', argument " "1"" of type '" "std::map< CString,CNick > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< CString,CNick > * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MNicks_find" "', argument " "2"" of type '" "std::map< CString,CNick >::key_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MNicks_find" "', argument " "2"" of type '" "std::map< CString,CNick >::key_type const &""'"); 
    }
    arg2 = ptr;
  }
  result = (arg1)->find((std::map< CString,CNick >::key_type const &)*arg2);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::map< CString,CNick >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_MNicks_lower_bound(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< CString,CNick > *arg1 = (std::map< CString,CNick > *) 0 ;
  std::map< CString,CNick >::key_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::map< CString,CNick >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MNicks_lower_bound",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MNicks_lower_bound" "', argument " "1"" of type '" "std::map< CString,CNick > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< CString,CNick > * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MNicks_lower_bound" "', argument " "2"" of type '" "std::map< CString,CNick >::key_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MNicks_lower_bound" "', argument " "2"" of type '" "std::map< CString,CNick >::key_type const &""'"); 
    }
    arg2 = ptr;
  }
  result = (arg1)->lower_bound((std::map< CString,CNick >::key_type const &)*arg2);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::map< CString,CNick >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_MNicks_upper_bound(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< CString,CNick > *arg1 = (std::map< CString,CNick > *) 0 ;
  std::map< CString,CNick >::key_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::map< CString,CNick >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MNicks_upper_bound",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MNicks_upper_bound" "', argument " "1"" of type '" "std::map< CString,CNick > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< CString,CNick > * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MNicks_upper_bound" "', argument " "2"" of type '" "std::map< CString,CNick >::key_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MNicks_upper_bound" "', argument " "2"" of type '" "std::map< CString,CNick >::key_type const &""'"); 
    }
    arg2 = ptr;
  }
  result = (arg1)->upper_bound((std::map< CString,CNick >::key_type const &)*arg2);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::map< CString,CNick >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MNicks(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< CString,CNick > *arg1 = (std::map< CString,CNick > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_MNicks",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MNicks" "', argument " "1"" of type '" "std::map< CString,CNick > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< CString,CNick > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MNicks_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SetFdCloseOnExec(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SetFdCloseOnExec",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "SetFdCloseOnExec" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  SetFdCloseOnExec(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN int Swig_var_g_HexDigits_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable g_HexDigits is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_g_HexDigits_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_FromCharPtr(g_HexDigits);
  return pyobj;
}


SWIGINTERN PyObject *_wrap_new_CUtils(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUtils *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CUtils")) SWIG_fail;
  result = (CUtils *)new CUtils();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CUtils, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CUtils(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUtils *arg1 = (CUtils *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CUtils",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUtils, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CUtils" "', argument " "1"" of type '" "CUtils *""'"); 
  }
  arg1 = reinterpret_cast< CUtils * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUtils_GetIP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long arg1 ;
  unsigned long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUtils_GetIP",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CUtils_GetIP" "', argument " "1"" of type '" "unsigned long""'");
  } 
  arg1 = static_cast< unsigned long >(val1);
  result = CUtils::GetIP(arg1);
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUtils_GetLongIP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  unsigned long result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUtils_GetLongIP",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_GetLongIP" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetLongIP" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  result = (unsigned long)CUtils::GetLongIP((CString const &)*arg1);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUtils_PrintError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUtils_PrintError",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_PrintError" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_PrintError" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  CUtils::PrintError((CString const &)*arg1);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUtils_PrintMessage__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  bool arg2 ;
  int res1 = SWIG_OLDOBJ ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUtils_PrintMessage",&obj0,&obj1)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_PrintMessage" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_PrintMessage" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUtils_PrintMessage" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  CUtils::PrintMessage((CString const &)*arg1,arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUtils_PrintMessage__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUtils_PrintMessage",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_PrintMessage" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_PrintMessage" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  CUtils::PrintMessage((CString const &)*arg1);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUtils_PrintMessage(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CUtils_PrintMessage__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CUtils_PrintMessage__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CUtils_PrintMessage'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CUtils::PrintMessage(CString const &,bool)\n"
    "    CUtils::PrintMessage(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CUtils_PrintPrompt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUtils_PrintPrompt",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_PrintPrompt" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_PrintPrompt" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  CUtils::PrintPrompt((CString const &)*arg1);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUtils_PrintAction(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUtils_PrintAction",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_PrintAction" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_PrintAction" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  CUtils::PrintAction((CString const &)*arg1);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUtils_PrintStatus__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  CString *arg2 = 0 ;
  bool val1 ;
  int ecode1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUtils_PrintStatus",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CUtils_PrintStatus" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUtils_PrintStatus" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_PrintStatus" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  CUtils::PrintStatus(arg1,(CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUtils_PrintStatus__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  bool val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUtils_PrintStatus",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CUtils_PrintStatus" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  CUtils::PrintStatus(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUtils_PrintStatus(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_bool(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_CUtils_PrintStatus__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_bool(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CUtils_PrintStatus__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CUtils_PrintStatus'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CUtils::PrintStatus(bool,CString const &)\n"
    "    CUtils::PrintStatus(bool)\n");
  return 0;
}


SWIGINTERN int Swig_var_CUtils_sDefaultHash_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable CUtils_sDefaultHash is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_CUtils_sDefaultHash_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_std_string((CString)(CUtils::sDefaultHash));
  return pyobj;
}


SWIGINTERN PyObject *_wrap_CUtils_GetSaltedHashPass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUtils_GetSaltedHashPass",&obj0)) SWIG_fail;
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj0, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg1 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 1 sSalt");
    }
  }
  result = CUtils::GetSaltedHashPass(*arg1);
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUtils_GetSalt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)":CUtils_GetSalt")) SWIG_fail;
  result = CUtils::GetSalt();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUtils_SaltedMD5Hash(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  CString *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUtils_SaltedMD5Hash",&obj0,&obj1)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_SaltedMD5Hash" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_SaltedMD5Hash" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUtils_SaltedMD5Hash" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_SaltedMD5Hash" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = CUtils::SaltedMD5Hash((CString const &)*arg1,(CString const &)*arg2);
  resultobj = SWIG_From_std_string((CString)(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUtils_SaltedSHA256Hash(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  CString *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUtils_SaltedSHA256Hash",&obj0,&obj1)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_SaltedSHA256Hash" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_SaltedSHA256Hash" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUtils_SaltedSHA256Hash" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_SaltedSHA256Hash" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = CUtils::SaltedSHA256Hash((CString const &)*arg1,(CString const &)*arg2);
  resultobj = SWIG_From_std_string((CString)(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUtils_GetPass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUtils_GetPass",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_GetPass" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetPass" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  result = CUtils::GetPass((CString const &)*arg1);
  resultobj = SWIG_From_std_string((CString)(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUtils_GetInput__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  CString *arg4 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CUtils_GetInput",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_GetInput" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetInput" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sRet");
    }
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUtils_GetInput" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetInput" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CUtils_GetInput" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetInput" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  result = (bool)CUtils::GetInput((CString const &)*arg1,*arg2,(CString const &)*arg3,(CString const &)*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUtils_GetInput__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CUtils_GetInput",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_GetInput" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetInput" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sRet");
    }
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUtils_GetInput" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetInput" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = (bool)CUtils::GetInput((CString const &)*arg1,*arg2,(CString const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUtils_GetInput__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  CString *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUtils_GetInput",&obj0,&obj1)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_GetInput" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetInput" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sRet");
    }
  }
  result = (bool)CUtils::GetInput((CString const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUtils_GetInput(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CString, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CUtils_GetInput__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CString, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CUtils_GetInput__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CString, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (CString**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CUtils_GetInput__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CUtils_GetInput'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CUtils::GetInput(CString const &,CString &,CString const &,CString const &)\n"
    "    CUtils::GetInput(CString const &,CString &,CString const &)\n"
    "    CUtils::GetInput(CString const &,CString &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CUtils_GetBoolInput__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  bool arg2 ;
  int res1 = SWIG_OLDOBJ ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUtils_GetBoolInput",&obj0,&obj1)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_GetBoolInput" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetBoolInput" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUtils_GetBoolInput" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (bool)CUtils::GetBoolInput((CString const &)*arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUtils_GetBoolInput__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  bool *arg2 = (bool *) 0 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUtils_GetBoolInput",&obj0,&obj1)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_GetBoolInput" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetBoolInput" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_bool, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUtils_GetBoolInput" "', argument " "2"" of type '" "bool *""'"); 
  }
  arg2 = reinterpret_cast< bool * >(argp2);
  result = (bool)CUtils::GetBoolInput((CString const &)*arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUtils_GetBoolInput__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUtils_GetBoolInput",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_GetBoolInput" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetBoolInput" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  result = (bool)CUtils::GetBoolInput((CString const &)*arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUtils_GetBoolInput(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CUtils_GetBoolInput__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_bool, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CUtils_GetBoolInput__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CUtils_GetBoolInput__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CUtils_GetBoolInput'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CUtils::GetBoolInput(CString const &,bool)\n"
    "    CUtils::GetBoolInput(CString const &,bool *)\n"
    "    CUtils::GetBoolInput(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CUtils_GetNumInput__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  unsigned int *arg2 = 0 ;
  unsigned int arg3 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CUtils_GetNumInput",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_GetNumInput" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetNumInput" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_unsigned_int,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUtils_GetNumInput" "', argument " "2"" of type '" "unsigned int &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetNumInput" "', argument " "2"" of type '" "unsigned int &""'"); 
  }
  arg2 = reinterpret_cast< unsigned int * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CUtils_GetNumInput" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CUtils_GetNumInput" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CUtils_GetNumInput" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  result = (bool)CUtils::GetNumInput((CString const &)*arg1,*arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUtils_GetNumInput__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  unsigned int *arg2 = 0 ;
  unsigned int arg3 ;
  unsigned int arg4 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CUtils_GetNumInput",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_GetNumInput" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetNumInput" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_unsigned_int,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUtils_GetNumInput" "', argument " "2"" of type '" "unsigned int &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetNumInput" "', argument " "2"" of type '" "unsigned int &""'"); 
  }
  arg2 = reinterpret_cast< unsigned int * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CUtils_GetNumInput" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CUtils_GetNumInput" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (bool)CUtils::GetNumInput((CString const &)*arg1,*arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUtils_GetNumInput__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  unsigned int *arg2 = 0 ;
  unsigned int arg3 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CUtils_GetNumInput",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_GetNumInput" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetNumInput" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_unsigned_int,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUtils_GetNumInput" "', argument " "2"" of type '" "unsigned int &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetNumInput" "', argument " "2"" of type '" "unsigned int &""'"); 
  }
  arg2 = reinterpret_cast< unsigned int * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CUtils_GetNumInput" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (bool)CUtils::GetNumInput((CString const &)*arg1,*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUtils_GetNumInput__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  unsigned int *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUtils_GetNumInput",&obj0,&obj1)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_GetNumInput" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetNumInput" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_unsigned_int,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUtils_GetNumInput" "', argument " "2"" of type '" "unsigned int &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetNumInput" "', argument " "2"" of type '" "unsigned int &""'"); 
  }
  arg2 = reinterpret_cast< unsigned int * >(argp2);
  result = (bool)CUtils::GetNumInput((CString const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUtils_GetNumInput(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_int, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CUtils_GetNumInput__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_int, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CUtils_GetNumInput__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_int, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_CUtils_GetNumInput__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_int, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_CUtils_GetNumInput__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CUtils_GetNumInput'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CUtils::GetNumInput(CString const &,unsigned int &,unsigned int,unsigned int,unsigned int)\n"
    "    CUtils::GetNumInput(CString const &,unsigned int &,unsigned int,unsigned int)\n"
    "    CUtils::GetNumInput(CString const &,unsigned int &,unsigned int)\n"
    "    CUtils::GetNumInput(CString const &,unsigned int &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CUtils_GetMillTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long long result;
  
  if (!PyArg_ParseTuple(args,(char *)":CUtils_GetMillTime")) SWIG_fail;
  result = (unsigned long long)CUtils::GetMillTime();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUtils_CTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  time_t arg1 ;
  CString *arg2 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUtils_CTime",&obj0,&obj1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_time_t,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_CTime" "', argument " "1"" of type '" "time_t""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_CTime" "', argument " "1"" of type '" "time_t""'");
    } else {
      time_t * temp = reinterpret_cast< time_t * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUtils_CTime" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_CTime" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = CUtils::CTime(arg1,(CString const &)*arg2);
  resultobj = SWIG_From_std_string((CString)(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUtils_FormatTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  time_t arg1 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CUtils_FormatTime",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_time_t,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_FormatTime" "', argument " "1"" of type '" "time_t""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_FormatTime" "', argument " "1"" of type '" "time_t""'");
    } else {
      time_t * temp = reinterpret_cast< time_t * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUtils_FormatTime" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_FormatTime" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUtils_FormatTime" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_FormatTime" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = CUtils::FormatTime(arg1,(CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_From_std_string((CString)(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUtils_GetTimezones(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SCString result;
  
  if (!PyArg_ParseTuple(args,(char *)":CUtils_GetTimezones")) SWIG_fail;
  result = CUtils::GetTimezones();
  resultobj = SWIG_NewPointerObj((new SCString(static_cast< const SCString& >(result))), SWIGTYPE_p_SCString, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CUtils_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CUtils, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CException(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CException::EType arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  CException *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_CException",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CException" "', argument " "1"" of type '" "CException::EType""'");
  } 
  arg1 = static_cast< CException::EType >(val1);
  result = (CException *)new CException(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CException, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CException(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CException *arg1 = (CException *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CException",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CException, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CException" "', argument " "1"" of type '" "CException *""'"); 
  }
  arg1 = reinterpret_cast< CException * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CException_GetType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CException *arg1 = (CException *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CException::EType result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CException_GetType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CException, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CException_GetType" "', argument " "1"" of type '" "CException const *""'"); 
  }
  arg1 = reinterpret_cast< CException * >(argp1);
  result = (CException::EType)((CException const *)arg1)->GetType();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CException_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CException, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CTable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTable *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CTable")) SWIG_fail;
  result = (CTable *)new CTable();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CTable, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CTable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTable *arg1 = (CTable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CTable",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTable, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CTable" "', argument " "1"" of type '" "CTable *""'"); 
  }
  arg1 = reinterpret_cast< CTable * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTable_AddColumn(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTable *arg1 = (CTable *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CTable_AddColumn",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTable_AddColumn" "', argument " "1"" of type '" "CTable *""'"); 
  }
  arg1 = reinterpret_cast< CTable * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTable_AddColumn" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTable_AddColumn" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->AddColumn((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTable_AddRow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTable *arg1 = (CTable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CTable_AddRow",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTable_AddRow" "', argument " "1"" of type '" "CTable *""'"); 
  }
  arg1 = reinterpret_cast< CTable * >(argp1);
  result = (unsigned int)(arg1)->AddRow();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTable_SetCell__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTable *arg1 = (CTable *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CTable_SetCell",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTable_SetCell" "', argument " "1"" of type '" "CTable *""'"); 
  }
  arg1 = reinterpret_cast< CTable * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTable_SetCell" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTable_SetCell" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CTable_SetCell" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTable_SetCell" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CTable_SetCell" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (bool)(arg1)->SetCell((CString const &)*arg2,(CString const &)*arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTable_SetCell__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTable *arg1 = (CTable *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CTable_SetCell",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTable_SetCell" "', argument " "1"" of type '" "CTable *""'"); 
  }
  arg1 = reinterpret_cast< CTable * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTable_SetCell" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTable_SetCell" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CTable_SetCell" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTable_SetCell" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = (bool)(arg1)->SetCell((CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTable_SetCell(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CTable, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CTable_SetCell__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CTable, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_CTable_SetCell__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CTable_SetCell'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CTable::SetCell(CString const &,CString const &,unsigned int)\n"
    "    CTable::SetCell(CString const &,CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CTable_GetLine(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTable *arg1 = (CTable *) 0 ;
  unsigned int arg2 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CTable_GetLine",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTable_GetLine" "', argument " "1"" of type '" "CTable const *""'"); 
  }
  arg1 = reinterpret_cast< CTable * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CTable_GetLine" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sLine");
    }
  }
  result = (bool)((CTable const *)arg1)->GetLine(arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTable_GetColumnWidth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTable *arg1 = (CTable *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CTable_GetColumnWidth",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTable_GetColumnWidth" "', argument " "1"" of type '" "CTable const *""'"); 
  }
  arg1 = reinterpret_cast< CTable * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CTable_GetColumnWidth" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (unsigned int)((CTable const *)arg1)->GetColumnWidth(arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTable_Clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTable *arg1 = (CTable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CTable_Clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTable_Clear" "', argument " "1"" of type '" "CTable *""'"); 
  }
  arg1 = reinterpret_cast< CTable * >(argp1);
  (arg1)->Clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CTable_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CTable, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CConfigEntry__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CConfigEntry *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CConfigEntry")) SWIG_fail;
  result = (CConfigEntry *)new CConfigEntry();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CConfigEntry, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CConfigEntry__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CConfig *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CConfigEntry *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_CConfigEntry",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_CConfig,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CConfigEntry" "', argument " "1"" of type '" "CConfig const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CConfigEntry" "', argument " "1"" of type '" "CConfig const &""'"); 
  }
  arg1 = reinterpret_cast< CConfig * >(argp1);
  result = (CConfigEntry *)new CConfigEntry((CConfig const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CConfigEntry, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CConfigEntry__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CConfigEntry *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CConfigEntry *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_CConfigEntry",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_CConfigEntry,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CConfigEntry" "', argument " "1"" of type '" "CConfigEntry const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CConfigEntry" "', argument " "1"" of type '" "CConfigEntry const &""'"); 
  }
  arg1 = reinterpret_cast< CConfigEntry * >(argp1);
  result = (CConfigEntry *)new CConfigEntry((CConfigEntry const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CConfigEntry, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CConfigEntry(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_CConfigEntry__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_CConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_CConfigEntry__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_CConfigEntry, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_CConfigEntry__SWIG_2(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_CConfigEntry'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CConfigEntry::CConfigEntry()\n"
    "    CConfigEntry::CConfigEntry(CConfig const &)\n"
    "    CConfigEntry::CConfigEntry(CConfigEntry const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_CConfigEntry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CConfigEntry *arg1 = (CConfigEntry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CConfigEntry",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CConfigEntry, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CConfigEntry" "', argument " "1"" of type '" "CConfigEntry *""'"); 
  }
  arg1 = reinterpret_cast< CConfigEntry * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CConfigEntry_m_pSubConfig_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CConfigEntry *arg1 = (CConfigEntry *) 0 ;
  CConfig *arg2 = (CConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CConfigEntry_m_pSubConfig_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CConfigEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfigEntry_m_pSubConfig_set" "', argument " "1"" of type '" "CConfigEntry *""'"); 
  }
  arg1 = reinterpret_cast< CConfigEntry * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CConfig, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfigEntry_m_pSubConfig_set" "', argument " "2"" of type '" "CConfig *""'"); 
  }
  arg2 = reinterpret_cast< CConfig * >(argp2);
  if (arg1) (arg1)->m_pSubConfig = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CConfigEntry_m_pSubConfig_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CConfigEntry *arg1 = (CConfigEntry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CConfigEntry_m_pSubConfig_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CConfigEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfigEntry_m_pSubConfig_get" "', argument " "1"" of type '" "CConfigEntry *""'"); 
  }
  arg1 = reinterpret_cast< CConfigEntry * >(argp1);
  result = (CConfig *) ((arg1)->m_pSubConfig);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CConfig, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CConfigEntry_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CConfigEntry, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_CConfig_BeginEntries(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CConfig *arg1 = (CConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CConfig::EntryMapIterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CConfig_BeginEntries",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_BeginEntries" "', argument " "1"" of type '" "CConfig const *""'"); 
  }
  arg1 = reinterpret_cast< CConfig * >(argp1);
  result = ((CConfig const *)arg1)->BeginEntries();
  resultobj = SWIG_NewPointerObj((new CConfig::EntryMapIterator(static_cast< const CConfig::EntryMapIterator& >(result))), SWIGTYPE_p_CConfig__EntryMap__const_iterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CConfig_EndEntries(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CConfig *arg1 = (CConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CConfig::EntryMapIterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CConfig_EndEntries",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_EndEntries" "', argument " "1"" of type '" "CConfig const *""'"); 
  }
  arg1 = reinterpret_cast< CConfig * >(argp1);
  result = ((CConfig const *)arg1)->EndEntries();
  resultobj = SWIG_NewPointerObj((new CConfig::EntryMapIterator(static_cast< const CConfig::EntryMapIterator& >(result))), SWIGTYPE_p_CConfig__EntryMap__const_iterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CConfig_BeginSubConfigs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CConfig *arg1 = (CConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CConfig::SubConfigMapIterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CConfig_BeginSubConfigs",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_BeginSubConfigs" "', argument " "1"" of type '" "CConfig const *""'"); 
  }
  arg1 = reinterpret_cast< CConfig * >(argp1);
  result = ((CConfig const *)arg1)->BeginSubConfigs();
  resultobj = SWIG_NewPointerObj((new CConfig::SubConfigMapIterator(static_cast< const CConfig::SubConfigMapIterator& >(result))), SWIGTYPE_p_CConfig__SubConfigMap__const_iterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CConfig_EndSubConfigs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CConfig *arg1 = (CConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CConfig::SubConfigMapIterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CConfig_EndSubConfigs",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_EndSubConfigs" "', argument " "1"" of type '" "CConfig const *""'"); 
  }
  arg1 = reinterpret_cast< CConfig * >(argp1);
  result = ((CConfig const *)arg1)->EndSubConfigs();
  resultobj = SWIG_NewPointerObj((new CConfig::SubConfigMapIterator(static_cast< const CConfig::SubConfigMapIterator& >(result))), SWIGTYPE_p_CConfig__SubConfigMap__const_iterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CConfig_AddKeyValuePair(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CConfig *arg1 = (CConfig *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CConfig_AddKeyValuePair",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_AddKeyValuePair" "', argument " "1"" of type '" "CConfig *""'"); 
  }
  arg1 = reinterpret_cast< CConfig * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfig_AddKeyValuePair" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_AddKeyValuePair" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CConfig_AddKeyValuePair" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_AddKeyValuePair" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->AddKeyValuePair((CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CConfig_AddSubConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CConfig *arg1 = (CConfig *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  CConfig arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CConfig_AddSubConfig",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_AddSubConfig" "', argument " "1"" of type '" "CConfig *""'"); 
  }
  arg1 = reinterpret_cast< CConfig * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfig_AddSubConfig" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_AddSubConfig" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CConfig_AddSubConfig" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_AddSubConfig" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_CConfig,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CConfig_AddSubConfig" "', argument " "4"" of type '" "CConfig""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_AddSubConfig" "', argument " "4"" of type '" "CConfig""'");
    } else {
      CConfig * temp = reinterpret_cast< CConfig * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  result = (bool)(arg1)->AddSubConfig((CString const &)*arg2,(CString const &)*arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CConfig_FindStringVector__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CConfig *arg1 = (CConfig *) 0 ;
  CString *arg2 = 0 ;
  VCString *arg3 = 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CConfig_FindStringVector",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_FindStringVector" "', argument " "1"" of type '" "CConfig *""'"); 
  }
  arg1 = reinterpret_cast< CConfig * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfig_FindStringVector" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindStringVector" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_VCString,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CConfig_FindStringVector" "', argument " "3"" of type '" "VCString &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindStringVector" "', argument " "3"" of type '" "VCString &""'"); 
  }
  arg3 = reinterpret_cast< VCString * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CConfig_FindStringVector" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (bool)(arg1)->FindStringVector((CString const &)*arg2,*arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CConfig_FindStringVector__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CConfig *arg1 = (CConfig *) 0 ;
  CString *arg2 = 0 ;
  VCString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CConfig_FindStringVector",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_FindStringVector" "', argument " "1"" of type '" "CConfig *""'"); 
  }
  arg1 = reinterpret_cast< CConfig * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfig_FindStringVector" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindStringVector" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_VCString,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CConfig_FindStringVector" "', argument " "3"" of type '" "VCString &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindStringVector" "', argument " "3"" of type '" "VCString &""'"); 
  }
  arg3 = reinterpret_cast< VCString * >(argp3);
  result = (bool)(arg1)->FindStringVector((CString const &)*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CConfig_FindStringVector(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_VCString, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CConfig_FindStringVector__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_VCString, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_CConfig_FindStringVector__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CConfig_FindStringVector'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CConfig::FindStringVector(CString const &,VCString &,bool)\n"
    "    CConfig::FindStringVector(CString const &,VCString &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CConfig_FindStringEntry__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CConfig *arg1 = (CConfig *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CConfig_FindStringEntry",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_FindStringEntry" "', argument " "1"" of type '" "CConfig *""'"); 
  }
  arg1 = reinterpret_cast< CConfig * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfig_FindStringEntry" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindStringEntry" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sRes");
    }
  }
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CConfig_FindStringEntry" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindStringEntry" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  result = (bool)(arg1)->FindStringEntry((CString const &)*arg2,*arg3,(CString const &)*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CConfig_FindStringEntry__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CConfig *arg1 = (CConfig *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CConfig_FindStringEntry",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_FindStringEntry" "', argument " "1"" of type '" "CConfig *""'"); 
  }
  arg1 = reinterpret_cast< CConfig * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfig_FindStringEntry" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindStringEntry" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sRes");
    }
  }
  result = (bool)(arg1)->FindStringEntry((CString const &)*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CConfig_FindStringEntry(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CConfig_FindStringEntry__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (CString**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CConfig_FindStringEntry__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CConfig_FindStringEntry'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CConfig::FindStringEntry(CString const &,CString &,CString const &)\n"
    "    CConfig::FindStringEntry(CString const &,CString &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CConfig_FindBoolEntry__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CConfig *arg1 = (CConfig *) 0 ;
  CString *arg2 = 0 ;
  bool *arg3 = 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CConfig_FindBoolEntry",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_FindBoolEntry" "', argument " "1"" of type '" "CConfig *""'"); 
  }
  arg1 = reinterpret_cast< CConfig * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfig_FindBoolEntry" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindBoolEntry" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_bool,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CConfig_FindBoolEntry" "', argument " "3"" of type '" "bool &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindBoolEntry" "', argument " "3"" of type '" "bool &""'"); 
  }
  arg3 = reinterpret_cast< bool * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CConfig_FindBoolEntry" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (bool)(arg1)->FindBoolEntry((CString const &)*arg2,*arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CConfig_FindBoolEntry__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CConfig *arg1 = (CConfig *) 0 ;
  CString *arg2 = 0 ;
  bool *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CConfig_FindBoolEntry",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_FindBoolEntry" "', argument " "1"" of type '" "CConfig *""'"); 
  }
  arg1 = reinterpret_cast< CConfig * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfig_FindBoolEntry" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindBoolEntry" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_bool,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CConfig_FindBoolEntry" "', argument " "3"" of type '" "bool &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindBoolEntry" "', argument " "3"" of type '" "bool &""'"); 
  }
  arg3 = reinterpret_cast< bool * >(argp3);
  result = (bool)(arg1)->FindBoolEntry((CString const &)*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CConfig_FindBoolEntry(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_bool, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CConfig_FindBoolEntry__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_bool, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_CConfig_FindBoolEntry__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CConfig_FindBoolEntry'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CConfig::FindBoolEntry(CString const &,bool &,bool)\n"
    "    CConfig::FindBoolEntry(CString const &,bool &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CConfig_FindUIntEntry__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CConfig *arg1 = (CConfig *) 0 ;
  CString *arg2 = 0 ;
  unsigned int *arg3 = 0 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CConfig_FindUIntEntry",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_FindUIntEntry" "', argument " "1"" of type '" "CConfig *""'"); 
  }
  arg1 = reinterpret_cast< CConfig * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfig_FindUIntEntry" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindUIntEntry" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_unsigned_int,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CConfig_FindUIntEntry" "', argument " "3"" of type '" "unsigned int &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindUIntEntry" "', argument " "3"" of type '" "unsigned int &""'"); 
  }
  arg3 = reinterpret_cast< unsigned int * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CConfig_FindUIntEntry" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (bool)(arg1)->FindUIntEntry((CString const &)*arg2,*arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CConfig_FindUIntEntry__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CConfig *arg1 = (CConfig *) 0 ;
  CString *arg2 = 0 ;
  unsigned int *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CConfig_FindUIntEntry",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_FindUIntEntry" "', argument " "1"" of type '" "CConfig *""'"); 
  }
  arg1 = reinterpret_cast< CConfig * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfig_FindUIntEntry" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindUIntEntry" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_unsigned_int,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CConfig_FindUIntEntry" "', argument " "3"" of type '" "unsigned int &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindUIntEntry" "', argument " "3"" of type '" "unsigned int &""'"); 
  }
  arg3 = reinterpret_cast< unsigned int * >(argp3);
  result = (bool)(arg1)->FindUIntEntry((CString const &)*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CConfig_FindUIntEntry(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_unsigned_int, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CConfig_FindUIntEntry__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_unsigned_int, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_CConfig_FindUIntEntry__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CConfig_FindUIntEntry'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CConfig::FindUIntEntry(CString const &,unsigned int &,unsigned int)\n"
    "    CConfig::FindUIntEntry(CString const &,unsigned int &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CConfig_FindDoubleEntry__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CConfig *arg1 = (CConfig *) 0 ;
  CString *arg2 = 0 ;
  double *arg3 = 0 ;
  double arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CConfig_FindDoubleEntry",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_FindDoubleEntry" "', argument " "1"" of type '" "CConfig *""'"); 
  }
  arg1 = reinterpret_cast< CConfig * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfig_FindDoubleEntry" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindDoubleEntry" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_double,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CConfig_FindDoubleEntry" "', argument " "3"" of type '" "double &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindDoubleEntry" "', argument " "3"" of type '" "double &""'"); 
  }
  arg3 = reinterpret_cast< double * >(argp3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CConfig_FindDoubleEntry" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  result = (bool)(arg1)->FindDoubleEntry((CString const &)*arg2,*arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CConfig_FindDoubleEntry__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CConfig *arg1 = (CConfig *) 0 ;
  CString *arg2 = 0 ;
  double *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CConfig_FindDoubleEntry",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_FindDoubleEntry" "', argument " "1"" of type '" "CConfig *""'"); 
  }
  arg1 = reinterpret_cast< CConfig * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfig_FindDoubleEntry" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindDoubleEntry" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_double,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CConfig_FindDoubleEntry" "', argument " "3"" of type '" "double &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindDoubleEntry" "', argument " "3"" of type '" "double &""'"); 
  }
  arg3 = reinterpret_cast< double * >(argp3);
  result = (bool)(arg1)->FindDoubleEntry((CString const &)*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CConfig_FindDoubleEntry(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_double, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CConfig_FindDoubleEntry__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_double, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_CConfig_FindDoubleEntry__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CConfig_FindDoubleEntry'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CConfig::FindDoubleEntry(CString const &,double &,double)\n"
    "    CConfig::FindDoubleEntry(CString const &,double &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CConfig_FindSubConfig__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CConfig *arg1 = (CConfig *) 0 ;
  CString *arg2 = 0 ;
  CConfig::SubConfig *arg3 = 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CConfig_FindSubConfig",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_FindSubConfig" "', argument " "1"" of type '" "CConfig *""'"); 
  }
  arg1 = reinterpret_cast< CConfig * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfig_FindSubConfig" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindSubConfig" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mapT_CString_CConfigEntry_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CConfigEntry_t_t_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CConfig_FindSubConfig" "', argument " "3"" of type '" "CConfig::SubConfig &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindSubConfig" "', argument " "3"" of type '" "CConfig::SubConfig &""'"); 
  }
  arg3 = reinterpret_cast< CConfig::SubConfig * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CConfig_FindSubConfig" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (bool)(arg1)->FindSubConfig((CString const &)*arg2,*arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CConfig_FindSubConfig__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CConfig *arg1 = (CConfig *) 0 ;
  CString *arg2 = 0 ;
  CConfig::SubConfig *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CConfig_FindSubConfig",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_FindSubConfig" "', argument " "1"" of type '" "CConfig *""'"); 
  }
  arg1 = reinterpret_cast< CConfig * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfig_FindSubConfig" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindSubConfig" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mapT_CString_CConfigEntry_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CConfigEntry_t_t_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CConfig_FindSubConfig" "', argument " "3"" of type '" "CConfig::SubConfig &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindSubConfig" "', argument " "3"" of type '" "CConfig::SubConfig &""'"); 
  }
  arg3 = reinterpret_cast< CConfig::SubConfig * >(argp3);
  result = (bool)(arg1)->FindSubConfig((CString const &)*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CConfig_FindSubConfig(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_mapT_CString_CConfigEntry_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CConfigEntry_t_t_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CConfig_FindSubConfig__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_mapT_CString_CConfigEntry_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CConfigEntry_t_t_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_CConfig_FindSubConfig__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CConfig_FindSubConfig'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CConfig::FindSubConfig(CString const &,CConfig::SubConfig &,bool)\n"
    "    CConfig::FindSubConfig(CString const &,CConfig::SubConfig &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CConfig_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CConfig *arg1 = (CConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CConfig_empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_empty" "', argument " "1"" of type '" "CConfig const *""'"); 
  }
  arg1 = reinterpret_cast< CConfig * >(argp1);
  result = (bool)((CConfig const *)arg1)->empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CConfig_Parse(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CConfig *arg1 = (CConfig *) 0 ;
  CFile *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CConfig_Parse",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_Parse" "', argument " "1"" of type '" "CConfig *""'"); 
  }
  arg1 = reinterpret_cast< CConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CFile,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfig_Parse" "', argument " "2"" of type '" "CFile &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_Parse" "', argument " "2"" of type '" "CFile &""'"); 
  }
  arg2 = reinterpret_cast< CFile * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sErrorMsg");
    }
  }
  result = (bool)(arg1)->Parse(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CConfig_Write__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CConfig *arg1 = (CConfig *) 0 ;
  CFile *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CConfig_Write",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_Write" "', argument " "1"" of type '" "CConfig *""'"); 
  }
  arg1 = reinterpret_cast< CConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CFile,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfig_Write" "', argument " "2"" of type '" "CFile &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_Write" "', argument " "2"" of type '" "CFile &""'"); 
  }
  arg2 = reinterpret_cast< CFile * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CConfig_Write" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  (arg1)->Write(*arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CConfig_Write__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CConfig *arg1 = (CConfig *) 0 ;
  CFile *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CConfig_Write",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_Write" "', argument " "1"" of type '" "CConfig *""'"); 
  }
  arg1 = reinterpret_cast< CConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CFile,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfig_Write" "', argument " "2"" of type '" "CFile &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_Write" "', argument " "2"" of type '" "CFile &""'"); 
  }
  arg2 = reinterpret_cast< CFile * >(argp2);
  (arg1)->Write(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CConfig_Write(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CFile, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CConfig_Write__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CFile, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CConfig_Write__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CConfig_Write'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CConfig::Write(CFile &,unsigned int)\n"
    "    CConfig::Write(CFile &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_CConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CConfig")) SWIG_fail;
  result = (CConfig *)new CConfig();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CConfig, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CConfig *arg1 = (CConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CConfig, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CConfig" "', argument " "1"" of type '" "CConfig *""'"); 
  }
  arg1 = reinterpret_cast< CConfig * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CConfig_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CConfig, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CSCharBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  CSCharBuffer *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_CSCharBuffer",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CSCharBuffer" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  result = (CSCharBuffer *)new CSCharBuffer(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSCharBuffer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CSCharBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSCharBuffer *arg1 = (CSCharBuffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CSCharBuffer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSCharBuffer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CSCharBuffer" "', argument " "1"" of type '" "CSCharBuffer *""'"); 
  }
  arg1 = reinterpret_cast< CSCharBuffer * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSCharBuffer___call__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSCharBuffer *arg1 = (CSCharBuffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSCharBuffer___call__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSCharBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSCharBuffer___call__" "', argument " "1"" of type '" "CSCharBuffer *""'"); 
  }
  arg1 = reinterpret_cast< CSCharBuffer * >(argp1);
  result = (char *)(arg1)->operator ()();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CSCharBuffer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CSCharBuffer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CSSockAddr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSSockAddr *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CSSockAddr")) SWIG_fail;
  result = (CSSockAddr *)new CSSockAddr();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSSockAddr, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CSSockAddr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSSockAddr *arg1 = (CSSockAddr *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CSSockAddr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSSockAddr, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CSSockAddr" "', argument " "1"" of type '" "CSSockAddr *""'"); 
  }
  arg1 = reinterpret_cast< CSSockAddr * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSSockAddr_SinFamily(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSSockAddr *arg1 = (CSSockAddr *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSSockAddr_SinFamily",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSSockAddr, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSSockAddr_SinFamily" "', argument " "1"" of type '" "CSSockAddr *""'"); 
  }
  arg1 = reinterpret_cast< CSSockAddr * >(argp1);
  (arg1)->SinFamily();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSSockAddr_SinPort(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSSockAddr *arg1 = (CSSockAddr *) 0 ;
  unsigned short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSSockAddr_SinPort",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSSockAddr, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSSockAddr_SinPort" "', argument " "1"" of type '" "CSSockAddr *""'"); 
  }
  arg1 = reinterpret_cast< CSSockAddr * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSSockAddr_SinPort" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  (arg1)->SinPort(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSSockAddr_SetIPv6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSSockAddr *arg1 = (CSSockAddr *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSSockAddr_SetIPv6",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSSockAddr, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSSockAddr_SetIPv6" "', argument " "1"" of type '" "CSSockAddr *""'"); 
  }
  arg1 = reinterpret_cast< CSSockAddr * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSSockAddr_SetIPv6" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetIPv6(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSSockAddr_GetIPv6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSSockAddr *arg1 = (CSSockAddr *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSSockAddr_GetIPv6",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSSockAddr, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSSockAddr_GetIPv6" "', argument " "1"" of type '" "CSSockAddr const *""'"); 
  }
  arg1 = reinterpret_cast< CSSockAddr * >(argp1);
  result = (bool)((CSSockAddr const *)arg1)->GetIPv6();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSSockAddr_GetSockAddrLen(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSSockAddr *arg1 = (CSSockAddr *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  socklen_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSSockAddr_GetSockAddrLen",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSSockAddr, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSSockAddr_GetSockAddrLen" "', argument " "1"" of type '" "CSSockAddr *""'"); 
  }
  arg1 = reinterpret_cast< CSSockAddr * >(argp1);
  result = (arg1)->GetSockAddrLen();
  resultobj = SWIG_NewPointerObj((new socklen_t(static_cast< const socklen_t& >(result))), SWIGTYPE_p_socklen_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSSockAddr_GetSockAddr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSSockAddr *arg1 = (CSSockAddr *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  sockaddr_in *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSSockAddr_GetSockAddr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSSockAddr, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSSockAddr_GetSockAddr" "', argument " "1"" of type '" "CSSockAddr *""'"); 
  }
  arg1 = reinterpret_cast< CSSockAddr * >(argp1);
  result = (sockaddr_in *)(arg1)->GetSockAddr();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sockaddr_in, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSSockAddr_GetAddr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSSockAddr *arg1 = (CSSockAddr *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  in_addr *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSSockAddr_GetAddr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSSockAddr, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSSockAddr_GetAddr" "', argument " "1"" of type '" "CSSockAddr *""'"); 
  }
  arg1 = reinterpret_cast< CSSockAddr * >(argp1);
  result = (in_addr *)(arg1)->GetAddr();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_in_addr, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSSockAddr_SetAFRequire(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSSockAddr *arg1 = (CSSockAddr *) 0 ;
  CSSockAddr::EAFRequire arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSSockAddr_SetAFRequire",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSSockAddr, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSSockAddr_SetAFRequire" "', argument " "1"" of type '" "CSSockAddr *""'"); 
  }
  arg1 = reinterpret_cast< CSSockAddr * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSSockAddr_SetAFRequire" "', argument " "2"" of type '" "CSSockAddr::EAFRequire""'");
  } 
  arg2 = static_cast< CSSockAddr::EAFRequire >(val2);
  (arg1)->SetAFRequire(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSSockAddr_GetAFRequire(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSSockAddr *arg1 = (CSSockAddr *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CSSockAddr::EAFRequire result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSSockAddr_GetAFRequire",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSSockAddr, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSSockAddr_GetAFRequire" "', argument " "1"" of type '" "CSSockAddr const *""'"); 
  }
  arg1 = reinterpret_cast< CSSockAddr * >(argp1);
  result = (CSSockAddr::EAFRequire)((CSSockAddr const *)arg1)->GetAFRequire();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CSSockAddr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CSSockAddr, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CGetAddrInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  Csock *arg2 = (Csock *) 0 ;
  CSSockAddr *arg3 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CGetAddrInfo *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_CGetAddrInfo",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CGetAddrInfo" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CGetAddrInfo" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CGetAddrInfo" "', argument " "2"" of type '" "Csock *""'"); 
  }
  arg2 = reinterpret_cast< Csock * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CSSockAddr,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CGetAddrInfo" "', argument " "3"" of type '" "CSSockAddr &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CGetAddrInfo" "', argument " "3"" of type '" "CSSockAddr &""'"); 
  }
  arg3 = reinterpret_cast< CSSockAddr * >(argp3);
  result = (CGetAddrInfo *)new CGetAddrInfo((CString const &)*arg1,arg2,*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CGetAddrInfo, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CGetAddrInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CGetAddrInfo *arg1 = (CGetAddrInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CGetAddrInfo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CGetAddrInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CGetAddrInfo" "', argument " "1"" of type '" "CGetAddrInfo *""'"); 
  }
  arg1 = reinterpret_cast< CGetAddrInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CGetAddrInfo_Init(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CGetAddrInfo *arg1 = (CGetAddrInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CGetAddrInfo_Init",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CGetAddrInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CGetAddrInfo_Init" "', argument " "1"" of type '" "CGetAddrInfo *""'"); 
  }
  arg1 = reinterpret_cast< CGetAddrInfo * >(argp1);
  (arg1)->Init();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CGetAddrInfo_Process(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CGetAddrInfo *arg1 = (CGetAddrInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CGetAddrInfo_Process",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CGetAddrInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CGetAddrInfo_Process" "', argument " "1"" of type '" "CGetAddrInfo *""'"); 
  }
  arg1 = reinterpret_cast< CGetAddrInfo * >(argp1);
  result = (int)(arg1)->Process();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CGetAddrInfo_Finish(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CGetAddrInfo *arg1 = (CGetAddrInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CGetAddrInfo_Finish",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CGetAddrInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CGetAddrInfo_Finish" "', argument " "1"" of type '" "CGetAddrInfo *""'"); 
  }
  arg1 = reinterpret_cast< CGetAddrInfo * >(argp1);
  result = (int)(arg1)->Finish();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CGetAddrInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CGetAddrInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_GetAddrInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  Csock *arg2 = (Csock *) 0 ;
  CSSockAddr *arg3 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:GetAddrInfo",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GetAddrInfo" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GetAddrInfo" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GetAddrInfo" "', argument " "2"" of type '" "Csock *""'"); 
  }
  arg2 = reinterpret_cast< Csock * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CSSockAddr,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GetAddrInfo" "', argument " "3"" of type '" "CSSockAddr &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GetAddrInfo" "', argument " "3"" of type '" "CSSockAddr &""'"); 
  }
  arg3 = reinterpret_cast< CSSockAddr * >(argp3);
  result = (int)GetAddrInfo((CString const &)*arg1,arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_GetCsockClassIdx(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)":GetCsockClassIdx")) SWIG_fail;
  result = (int)GetCsockClassIdx();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN int Swig_var_CS_BLOCKSIZE_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable CS_BLOCKSIZE is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_CS_BLOCKSIZE_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(CS_BLOCKSIZE));
  return pyobj;
}


SWIGINTERN PyObject *_wrap_InitCsocket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)":InitCsocket")) SWIG_fail;
  result = (bool)InitCsocket();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ShutdownCsocket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if (!PyArg_ParseTuple(args,(char *)":ShutdownCsocket")) SWIG_fail;
  ShutdownCsocket();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GetSockError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)":GetSockError")) SWIG_fail;
  result = (int)GetSockError();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TFD_ZERO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fd_set *arg1 = (fd_set *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TFD_ZERO",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fd_set, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TFD_ZERO" "', argument " "1"" of type '" "fd_set *""'"); 
  }
  arg1 = reinterpret_cast< fd_set * >(argp1);
  TFD_ZERO(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TFD_SET(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  cs_sock_t arg1 ;
  fd_set *arg2 = (fd_set *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TFD_SET",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "TFD_SET" "', argument " "1"" of type '" "cs_sock_t""'");
  } 
  arg1 = static_cast< cs_sock_t >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_fd_set, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TFD_SET" "', argument " "2"" of type '" "fd_set *""'"); 
  }
  arg2 = reinterpret_cast< fd_set * >(argp2);
  TFD_SET(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TFD_ISSET(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  cs_sock_t arg1 ;
  fd_set *arg2 = (fd_set *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TFD_ISSET",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "TFD_ISSET" "', argument " "1"" of type '" "cs_sock_t""'");
  } 
  arg1 = static_cast< cs_sock_t >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_fd_set, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TFD_ISSET" "', argument " "2"" of type '" "fd_set *""'"); 
  }
  arg2 = reinterpret_cast< fd_set * >(argp2);
  result = (bool)TFD_ISSET(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TFD_CLR(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  cs_sock_t arg1 ;
  fd_set *arg2 = (fd_set *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TFD_CLR",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "TFD_CLR" "', argument " "1"" of type '" "cs_sock_t""'");
  } 
  arg1 = static_cast< cs_sock_t >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_fd_set, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TFD_CLR" "', argument " "2"" of type '" "fd_set *""'"); 
  }
  arg2 = reinterpret_cast< fd_set * >(argp2);
  TFD_CLR(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap___Perror(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  char *arg2 = (char *) 0 ;
  unsigned int arg3 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:__Perror",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "__Perror" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__Perror" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__Perror" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "__Perror" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  __Perror((CString const &)*arg1,(char const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_millitime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long long result;
  
  if (!PyArg_ParseTuple(args,(char *)":millitime")) SWIG_fail;
  result = (unsigned long long)millitime();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CCron(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CCron *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CCron")) SWIG_fail;
  result = (CCron *)new CCron();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CCron, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CCron(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CCron *arg1 = (CCron *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CCron",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CCron, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CCron" "', argument " "1"" of type '" "CCron *""'"); 
  }
  arg1 = reinterpret_cast< CCron * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CCron_run(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CCron *arg1 = (CCron *) 0 ;
  timeval *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CCron_run",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CCron, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CCron_run" "', argument " "1"" of type '" "CCron *""'"); 
  }
  arg1 = reinterpret_cast< CCron * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_timeval,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CCron_run" "', argument " "2"" of type '" "timeval &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CCron_run" "', argument " "2"" of type '" "timeval &""'"); 
  }
  arg2 = reinterpret_cast< timeval * >(argp2);
  (arg1)->run(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CCron_StartMaxCycles__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CCron *arg1 = (CCron *) 0 ;
  double arg2 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CCron_StartMaxCycles",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CCron, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CCron_StartMaxCycles" "', argument " "1"" of type '" "CCron *""'"); 
  }
  arg1 = reinterpret_cast< CCron * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CCron_StartMaxCycles" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CCron_StartMaxCycles" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  (arg1)->StartMaxCycles(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CCron_StartMaxCycles__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CCron *arg1 = (CCron *) 0 ;
  timeval *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CCron_StartMaxCycles",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CCron, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CCron_StartMaxCycles" "', argument " "1"" of type '" "CCron *""'"); 
  }
  arg1 = reinterpret_cast< CCron * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_timeval,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CCron_StartMaxCycles" "', argument " "2"" of type '" "timeval const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CCron_StartMaxCycles" "', argument " "2"" of type '" "timeval const &""'"); 
  }
  arg2 = reinterpret_cast< timeval * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CCron_StartMaxCycles" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  (arg1)->StartMaxCycles((timeval const &)*arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CCron_StartMaxCycles(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CCron, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_timeval, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CCron_StartMaxCycles__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CCron, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CCron_StartMaxCycles__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CCron_StartMaxCycles'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CCron::StartMaxCycles(double,unsigned int)\n"
    "    CCron::StartMaxCycles(timeval const &,unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CCron_Start__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CCron *arg1 = (CCron *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CCron_Start",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CCron, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CCron_Start" "', argument " "1"" of type '" "CCron *""'"); 
  }
  arg1 = reinterpret_cast< CCron * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CCron_Start" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->Start(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CCron_Start__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CCron *arg1 = (CCron *) 0 ;
  timeval *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CCron_Start",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CCron, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CCron_Start" "', argument " "1"" of type '" "CCron *""'"); 
  }
  arg1 = reinterpret_cast< CCron * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_timeval,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CCron_Start" "', argument " "2"" of type '" "timeval const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CCron_Start" "', argument " "2"" of type '" "timeval const &""'"); 
  }
  arg2 = reinterpret_cast< timeval * >(argp2);
  (arg1)->Start((timeval const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CCron_Start(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CCron, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_timeval, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CCron_Start__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CCron, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CCron_Start__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CCron_Start'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CCron::Start(double)\n"
    "    CCron::Start(timeval const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CCron_Stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CCron *arg1 = (CCron *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CCron_Stop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CCron, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CCron_Stop" "', argument " "1"" of type '" "CCron *""'"); 
  }
  arg1 = reinterpret_cast< CCron * >(argp1);
  (arg1)->Stop();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CCron_Pause(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CCron *arg1 = (CCron *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CCron_Pause",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CCron, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CCron_Pause" "', argument " "1"" of type '" "CCron *""'"); 
  }
  arg1 = reinterpret_cast< CCron * >(argp1);
  (arg1)->Pause();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CCron_UnPause(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CCron *arg1 = (CCron *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CCron_UnPause",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CCron, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CCron_UnPause" "', argument " "1"" of type '" "CCron *""'"); 
  }
  arg1 = reinterpret_cast< CCron * >(argp1);
  (arg1)->UnPause();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CCron_GetInterval(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CCron *arg1 = (CCron *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  timeval result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CCron_GetInterval",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CCron, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CCron_GetInterval" "', argument " "1"" of type '" "CCron const *""'"); 
  }
  arg1 = reinterpret_cast< CCron * >(argp1);
  result = ((CCron const *)arg1)->GetInterval();
  resultobj = SWIG_NewPointerObj((new timeval(static_cast< const timeval& >(result))), SWIGTYPE_p_timeval, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CCron_GetMaxCycles(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CCron *arg1 = (CCron *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CCron_GetMaxCycles",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CCron, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CCron_GetMaxCycles" "', argument " "1"" of type '" "CCron const *""'"); 
  }
  arg1 = reinterpret_cast< CCron * >(argp1);
  result = (unsigned int)((CCron const *)arg1)->GetMaxCycles();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CCron_GetCyclesLeft(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CCron *arg1 = (CCron *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CCron_GetCyclesLeft",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CCron, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CCron_GetCyclesLeft" "', argument " "1"" of type '" "CCron const *""'"); 
  }
  arg1 = reinterpret_cast< CCron * >(argp1);
  result = (unsigned int)((CCron const *)arg1)->GetCyclesLeft();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CCron_isValid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CCron *arg1 = (CCron *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CCron_isValid",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CCron, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CCron_isValid" "', argument " "1"" of type '" "CCron *""'"); 
  }
  arg1 = reinterpret_cast< CCron * >(argp1);
  result = (bool)(arg1)->isValid();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CCron_GetName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CCron *arg1 = (CCron *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CCron_GetName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CCron, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CCron_GetName" "', argument " "1"" of type '" "CCron const *""'"); 
  }
  arg1 = reinterpret_cast< CCron * >(argp1);
  result = (CString *) &((CCron const *)arg1)->GetName();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CCron_SetName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CCron *arg1 = (CCron *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CCron_SetName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CCron, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CCron_SetName" "', argument " "1"" of type '" "CCron *""'"); 
  }
  arg1 = reinterpret_cast< CCron * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CCron_SetName" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CCron_SetName" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetName((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CCron_GetNextRun(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CCron *arg1 = (CCron *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  timeval result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CCron_GetNextRun",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CCron, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CCron_GetNextRun" "', argument " "1"" of type '" "CCron const *""'"); 
  }
  arg1 = reinterpret_cast< CCron * >(argp1);
  result = ((CCron const *)arg1)->GetNextRun();
  resultobj = SWIG_NewPointerObj((new timeval(static_cast< const timeval& >(result))), SWIGTYPE_p_timeval, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CCron_RunJob(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CCron *arg1 = (CCron *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CCron_RunJob",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CCron, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CCron_RunJob" "', argument " "1"" of type '" "CCron *""'"); 
  }
  arg1 = reinterpret_cast< CCron * >(argp1);
  (arg1)->RunJob();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CCron_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CCron, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CSMonitorFD(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSMonitorFD *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CSMonitorFD")) SWIG_fail;
  result = (CSMonitorFD *)new CSMonitorFD();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSMonitorFD, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CSMonitorFD(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSMonitorFD *arg1 = (CSMonitorFD *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CSMonitorFD",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSMonitorFD, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CSMonitorFD" "', argument " "1"" of type '" "CSMonitorFD *""'"); 
  }
  arg1 = reinterpret_cast< CSMonitorFD * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSMonitorFD_GatherFDsForSelect(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSMonitorFD *arg1 = (CSMonitorFD *) 0 ;
  std::map< int,short,std::less< int >,std::allocator< std::pair< int const,short > > > *arg2 = 0 ;
  long *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CSMonitorFD_GatherFDsForSelect",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSMonitorFD, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSMonitorFD_GatherFDsForSelect" "', argument " "1"" of type '" "CSMonitorFD *""'"); 
  }
  arg1 = reinterpret_cast< CSMonitorFD * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__mapT_int_short_std__lessT_int_t_std__allocatorT_std__pairT_int_const_short_t_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSMonitorFD_GatherFDsForSelect" "', argument " "2"" of type '" "std::map< int,short,std::less< int >,std::allocator< std::pair< int const,short > > > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSMonitorFD_GatherFDsForSelect" "', argument " "2"" of type '" "std::map< int,short,std::less< int >,std::allocator< std::pair< int const,short > > > &""'"); 
  }
  arg2 = reinterpret_cast< std::map< int,short,std::less< int >,std::allocator< std::pair< int const,short > > > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_long,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSMonitorFD_GatherFDsForSelect" "', argument " "3"" of type '" "long &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSMonitorFD_GatherFDsForSelect" "', argument " "3"" of type '" "long &""'"); 
  }
  arg3 = reinterpret_cast< long * >(argp3);
  result = (bool)(arg1)->GatherFDsForSelect(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSMonitorFD_FDsThatTriggered(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSMonitorFD *arg1 = (CSMonitorFD *) 0 ;
  std::map< int,short,std::less< int >,std::allocator< std::pair< int const,short > > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSMonitorFD_FDsThatTriggered",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSMonitorFD, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSMonitorFD_FDsThatTriggered" "', argument " "1"" of type '" "CSMonitorFD *""'"); 
  }
  arg1 = reinterpret_cast< CSMonitorFD * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__mapT_int_short_std__lessT_int_t_std__allocatorT_std__pairT_int_const_short_t_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSMonitorFD_FDsThatTriggered" "', argument " "2"" of type '" "std::map< int,short,std::less< int >,std::allocator< std::pair< int const,short > > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSMonitorFD_FDsThatTriggered" "', argument " "2"" of type '" "std::map< int,short,std::less< int >,std::allocator< std::pair< int const,short > > > const &""'"); 
  }
  arg2 = reinterpret_cast< std::map< int,short,std::less< int >,std::allocator< std::pair< int const,short > > > * >(argp2);
  result = (bool)(arg1)->FDsThatTriggered((std::map< int,short,std::less< int >,std::allocator< std::pair< int const,short > > > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSMonitorFD_CheckFDs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSMonitorFD *arg1 = (CSMonitorFD *) 0 ;
  std::map< int,short,std::less< int >,std::allocator< std::pair< int const,short > > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSMonitorFD_CheckFDs",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSMonitorFD, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSMonitorFD_CheckFDs" "', argument " "1"" of type '" "CSMonitorFD *""'"); 
  }
  arg1 = reinterpret_cast< CSMonitorFD * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__mapT_int_short_std__lessT_int_t_std__allocatorT_std__pairT_int_const_short_t_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSMonitorFD_CheckFDs" "', argument " "2"" of type '" "std::map< int,short,std::less< int >,std::allocator< std::pair< int const,short > > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSMonitorFD_CheckFDs" "', argument " "2"" of type '" "std::map< int,short,std::less< int >,std::allocator< std::pair< int const,short > > > const &""'"); 
  }
  arg2 = reinterpret_cast< std::map< int,short,std::less< int >,std::allocator< std::pair< int const,short > > > * >(argp2);
  result = (bool)(arg1)->CheckFDs((std::map< int,short,std::less< int >,std::allocator< std::pair< int const,short > > > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSMonitorFD_Add(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSMonitorFD *arg1 = (CSMonitorFD *) 0 ;
  int arg2 ;
  short arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  short val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CSMonitorFD_Add",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSMonitorFD, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSMonitorFD_Add" "', argument " "1"" of type '" "CSMonitorFD *""'"); 
  }
  arg1 = reinterpret_cast< CSMonitorFD * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSMonitorFD_Add" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_short(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSMonitorFD_Add" "', argument " "3"" of type '" "short""'");
  } 
  arg3 = static_cast< short >(val3);
  (arg1)->Add(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSMonitorFD_Remove(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSMonitorFD *arg1 = (CSMonitorFD *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSMonitorFD_Remove",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSMonitorFD, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSMonitorFD_Remove" "', argument " "1"" of type '" "CSMonitorFD *""'"); 
  }
  arg1 = reinterpret_cast< CSMonitorFD * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSMonitorFD_Remove" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Remove(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSMonitorFD_DisableMonitor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSMonitorFD *arg1 = (CSMonitorFD *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSMonitorFD_DisableMonitor",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSMonitorFD, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSMonitorFD_DisableMonitor" "', argument " "1"" of type '" "CSMonitorFD *""'"); 
  }
  arg1 = reinterpret_cast< CSMonitorFD * >(argp1);
  (arg1)->DisableMonitor();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSMonitorFD_IsEnabled(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSMonitorFD *arg1 = (CSMonitorFD *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSMonitorFD_IsEnabled",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSMonitorFD, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSMonitorFD_IsEnabled" "', argument " "1"" of type '" "CSMonitorFD const *""'"); 
  }
  arg1 = reinterpret_cast< CSMonitorFD * >(argp1);
  result = (bool)((CSMonitorFD const *)arg1)->IsEnabled();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CSMonitorFD_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CSMonitorFD, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CSockCommon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockCommon *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CSockCommon")) SWIG_fail;
  result = (CSockCommon *)new CSockCommon();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSockCommon, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CSockCommon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockCommon *arg1 = (CSockCommon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CSockCommon",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockCommon, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CSockCommon" "', argument " "1"" of type '" "CSockCommon *""'"); 
  }
  arg1 = reinterpret_cast< CSockCommon * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockCommon_CleanupCrons(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockCommon *arg1 = (CSockCommon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSockCommon_CleanupCrons",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockCommon, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockCommon_CleanupCrons" "', argument " "1"" of type '" "CSockCommon *""'"); 
  }
  arg1 = reinterpret_cast< CSockCommon * >(argp1);
  (arg1)->CleanupCrons();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockCommon_CleanupFDMonitors(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockCommon *arg1 = (CSockCommon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSockCommon_CleanupFDMonitors",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockCommon, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockCommon_CleanupFDMonitors" "', argument " "1"" of type '" "CSockCommon *""'"); 
  }
  arg1 = reinterpret_cast< CSockCommon * >(argp1);
  (arg1)->CleanupFDMonitors();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockCommon_GetCrons(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockCommon *arg1 = (CSockCommon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< CCron *,std::allocator< CCron * > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSockCommon_GetCrons",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockCommon, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockCommon_GetCrons" "', argument " "1"" of type '" "CSockCommon const *""'"); 
  }
  arg1 = reinterpret_cast< CSockCommon * >(argp1);
  result = (std::vector< CCron *,std::allocator< CCron * > > *) &((CSockCommon const *)arg1)->GetCrons();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CCron_p_std__allocatorT_CCron_p_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockCommon_Cron(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockCommon *arg1 = (CSockCommon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSockCommon_Cron",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockCommon, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockCommon_Cron" "', argument " "1"" of type '" "CSockCommon *""'"); 
  }
  arg1 = reinterpret_cast< CSockCommon * >(argp1);
  (arg1)->Cron();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockCommon_AddCron(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockCommon *arg1 = (CSockCommon *) 0 ;
  CCron *arg2 = (CCron *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSockCommon_AddCron",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockCommon, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockCommon_AddCron" "', argument " "1"" of type '" "CSockCommon *""'"); 
  }
  arg1 = reinterpret_cast< CSockCommon * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CCron, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockCommon_AddCron" "', argument " "2"" of type '" "CCron *""'"); 
  }
  arg2 = reinterpret_cast< CCron * >(argp2);
  (arg1)->AddCron(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockCommon_DelCron__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockCommon *arg1 = (CSockCommon *) 0 ;
  CString *arg2 = 0 ;
  bool arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CSockCommon_DelCron",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockCommon, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockCommon_DelCron" "', argument " "1"" of type '" "CSockCommon *""'"); 
  }
  arg1 = reinterpret_cast< CSockCommon * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockCommon_DelCron" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockCommon_DelCron" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSockCommon_DelCron" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSockCommon_DelCron" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  (arg1)->DelCron((CString const &)*arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockCommon_DelCron__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockCommon *arg1 = (CSockCommon *) 0 ;
  CString *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CSockCommon_DelCron",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockCommon, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockCommon_DelCron" "', argument " "1"" of type '" "CSockCommon *""'"); 
  }
  arg1 = reinterpret_cast< CSockCommon * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockCommon_DelCron" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockCommon_DelCron" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSockCommon_DelCron" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  (arg1)->DelCron((CString const &)*arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockCommon_DelCron__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockCommon *arg1 = (CSockCommon *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSockCommon_DelCron",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockCommon, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockCommon_DelCron" "', argument " "1"" of type '" "CSockCommon *""'"); 
  }
  arg1 = reinterpret_cast< CSockCommon * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockCommon_DelCron" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockCommon_DelCron" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->DelCron((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockCommon_DelCron__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockCommon *arg1 = (CSockCommon *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSockCommon_DelCron",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockCommon, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockCommon_DelCron" "', argument " "1"" of type '" "CSockCommon *""'"); 
  }
  arg1 = reinterpret_cast< CSockCommon * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSockCommon_DelCron" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  (arg1)->DelCron(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockCommon_DelCron(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSockCommon, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CSockCommon_DelCron__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSockCommon, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CSockCommon_DelCron__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSockCommon, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CSockCommon_DelCron__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSockCommon, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_CSockCommon_DelCron__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CSockCommon_DelCron'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CSockCommon::DelCron(CString const &,bool,bool)\n"
    "    CSockCommon::DelCron(CString const &,bool)\n"
    "    CSockCommon::DelCron(CString const &)\n"
    "    CSockCommon::DelCron(unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CSockCommon_DelCronByAddr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockCommon *arg1 = (CSockCommon *) 0 ;
  CCron *arg2 = (CCron *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSockCommon_DelCronByAddr",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockCommon, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockCommon_DelCronByAddr" "', argument " "1"" of type '" "CSockCommon *""'"); 
  }
  arg1 = reinterpret_cast< CSockCommon * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CCron, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockCommon_DelCronByAddr" "', argument " "2"" of type '" "CCron *""'"); 
  }
  arg2 = reinterpret_cast< CCron * >(argp2);
  (arg1)->DelCronByAddr(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockCommon_CheckFDs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockCommon *arg1 = (CSockCommon *) 0 ;
  std::map< int,short,std::less< int >,std::allocator< std::pair< int const,short > > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSockCommon_CheckFDs",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockCommon, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockCommon_CheckFDs" "', argument " "1"" of type '" "CSockCommon *""'"); 
  }
  arg1 = reinterpret_cast< CSockCommon * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__mapT_int_short_std__lessT_int_t_std__allocatorT_std__pairT_int_const_short_t_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockCommon_CheckFDs" "', argument " "2"" of type '" "std::map< int,short,std::less< int >,std::allocator< std::pair< int const,short > > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockCommon_CheckFDs" "', argument " "2"" of type '" "std::map< int,short,std::less< int >,std::allocator< std::pair< int const,short > > > const &""'"); 
  }
  arg2 = reinterpret_cast< std::map< int,short,std::less< int >,std::allocator< std::pair< int const,short > > > * >(argp2);
  (arg1)->CheckFDs((std::map< int,short,std::less< int >,std::allocator< std::pair< int const,short > > > const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockCommon_AssignFDs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockCommon *arg1 = (CSockCommon *) 0 ;
  std::map< int,short,std::less< int >,std::allocator< std::pair< int const,short > > > *arg2 = 0 ;
  timeval *arg3 = (timeval *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CSockCommon_AssignFDs",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockCommon, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockCommon_AssignFDs" "', argument " "1"" of type '" "CSockCommon *""'"); 
  }
  arg1 = reinterpret_cast< CSockCommon * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__mapT_int_short_std__lessT_int_t_std__allocatorT_std__pairT_int_const_short_t_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockCommon_AssignFDs" "', argument " "2"" of type '" "std::map< int,short,std::less< int >,std::allocator< std::pair< int const,short > > > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockCommon_AssignFDs" "', argument " "2"" of type '" "std::map< int,short,std::less< int >,std::allocator< std::pair< int const,short > > > &""'"); 
  }
  arg2 = reinterpret_cast< std::map< int,short,std::less< int >,std::allocator< std::pair< int const,short > > > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_timeval, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockCommon_AssignFDs" "', argument " "3"" of type '" "timeval *""'"); 
  }
  arg3 = reinterpret_cast< timeval * >(argp3);
  (arg1)->AssignFDs(*arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockCommon_MonitorFD(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockCommon *arg1 = (CSockCommon *) 0 ;
  CSMonitorFD *arg2 = (CSMonitorFD *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSockCommon_MonitorFD",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockCommon, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockCommon_MonitorFD" "', argument " "1"" of type '" "CSockCommon *""'"); 
  }
  arg1 = reinterpret_cast< CSockCommon * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CSMonitorFD, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockCommon_MonitorFD" "', argument " "2"" of type '" "CSMonitorFD *""'"); 
  }
  arg2 = reinterpret_cast< CSMonitorFD * >(argp2);
  (arg1)->MonitorFD(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CSockCommon_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CSockCommon, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Csock__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  Csock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_Csock",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Csock" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (Csock *)new Csock(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Csock__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_Csock")) SWIG_fail;
  result = (Csock *)new Csock();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Csock__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  unsigned short arg2 ;
  int arg3 ;
  int res1 = SWIG_OLDOBJ ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Csock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_Csock",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Csock" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Csock" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Csock" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Csock" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (Csock *)new Csock((CString const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Csock__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  unsigned short arg2 ;
  int res1 = SWIG_OLDOBJ ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Csock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_Csock",&obj0,&obj1)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Csock" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Csock" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Csock" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  result = (Csock *)new Csock((CString const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Csock(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_Csock__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_Csock__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_Csock__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_Csock__SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_Csock'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Csock::Csock(int)\n"
    "    Csock::Csock()\n"
    "    Csock::Csock(CString const &,unsigned short,int)\n"
    "    Csock::Csock(CString const &,unsigned short)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Csock_GetSockObj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  CString *arg2 = 0 ;
  unsigned short arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned short val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Csock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Csock_GetSockObj",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetSockObj" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_GetSockObj" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_GetSockObj" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_short(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Csock_GetSockObj" "', argument " "3"" of type '" "unsigned short""'");
  } 
  arg3 = static_cast< unsigned short >(val3);
  result = (Csock *)(arg1)->GetSockObj((CString const &)*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Csock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Csock",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Csock" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_Dereference(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_Dereference",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_Dereference" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  (arg1)->Dereference();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_Copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  Csock *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock_Copy",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_Copy" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Csock,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_Copy" "', argument " "2"" of type '" "Csock const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_Copy" "', argument " "2"" of type '" "Csock const &""'"); 
  }
  arg2 = reinterpret_cast< Csock * >(argp2);
  (arg1)->Copy((Csock const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock___lshift____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Csock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock___lshift__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock___lshift__" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock___lshift__" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock___lshift__" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (Csock *) &(arg1)->operator <<((CString const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock___lshift____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  std::ostream &(*arg2)(std::ostream &) = (std::ostream &(*)(std::ostream &)) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Csock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock___lshift__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock___lshift__" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_r_std__ostream__r_std__ostream);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "Csock___lshift__" "', argument " "2"" of type '" "std::ostream &(*)(std::ostream &)""'"); 
    }
  }
  result = (Csock *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock___lshift____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Csock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock___lshift__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock___lshift__" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock___lshift__" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (Csock *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock___lshift____SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Csock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock___lshift__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock___lshift__" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock___lshift__" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (Csock *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock___lshift____SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Csock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock___lshift__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock___lshift__" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock___lshift__" "', argument " "2"" of type '" "long""'");
  } 
  arg2 = static_cast< long >(val2);
  result = (Csock *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock___lshift____SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  unsigned long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Csock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock___lshift__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock___lshift__" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock___lshift__" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  result = (Csock *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock___lshift____SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  unsigned long long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Csock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock___lshift__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock___lshift__" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock___lshift__" "', argument " "2"" of type '" "unsigned long long""'");
  } 
  arg2 = static_cast< unsigned long long >(val2);
  result = (Csock *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock___lshift____SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Csock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock___lshift__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock___lshift__" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock___lshift__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (Csock *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock___lshift____SWIG_8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Csock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock___lshift__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock___lshift__" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock___lshift__" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  result = (Csock *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock___lshift__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *ptr = 0;
      int res = SWIG_ConvertFunctionPtr(argv[1], &ptr, SWIGTYPE_p_f_r_std__ostream__r_std__ostream);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Csock___lshift____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Csock___lshift____SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Csock___lshift____SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Csock___lshift____SWIG_5(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Csock___lshift____SWIG_4(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Csock___lshift____SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Csock___lshift____SWIG_7(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Csock___lshift____SWIG_8(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Csock___lshift____SWIG_0(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_Csock_Connect(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_Connect",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_Connect" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (bool)(arg1)->Connect();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_Listen__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  unsigned short arg2 ;
  int arg3 ;
  CString *arg4 = 0 ;
  unsigned int arg5 ;
  bool arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:Csock_Listen",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_Listen" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_Listen" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Csock_Listen" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Csock_Listen" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_Listen" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  ecode5 = SWIG_AsVal_unsigned_SS_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Csock_Listen" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "Csock_Listen" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  result = (bool)(arg1)->Listen(arg2,arg3,(CString const &)*arg4,arg5,arg6);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_Listen__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  unsigned short arg2 ;
  int arg3 ;
  CString *arg4 = 0 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:Csock_Listen",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_Listen" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_Listen" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Csock_Listen" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Csock_Listen" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_Listen" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  ecode5 = SWIG_AsVal_unsigned_SS_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Csock_Listen" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  result = (bool)(arg1)->Listen(arg2,arg3,(CString const &)*arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_Listen__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  unsigned short arg2 ;
  int arg3 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:Csock_Listen",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_Listen" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_Listen" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Csock_Listen" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Csock_Listen" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_Listen" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  result = (bool)(arg1)->Listen(arg2,arg3,(CString const &)*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_Listen__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  unsigned short arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Csock_Listen",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_Listen" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_Listen" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Csock_Listen" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (bool)(arg1)->Listen(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_Listen__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  unsigned short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock_Listen",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_Listen" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_Listen" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  result = (bool)(arg1)->Listen(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_Listen(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 6) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Csock_Listen__SWIG_4(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Csock_Listen__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (CString**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_Csock_Listen__SWIG_2(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (CString**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_Csock_Listen__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (CString**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_Csock_Listen__SWIG_0(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Csock_Listen'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Csock::Listen(unsigned short,int,CString const &,unsigned int,bool)\n"
    "    Csock::Listen(unsigned short,int,CString const &,unsigned int)\n"
    "    Csock::Listen(unsigned short,int,CString const &)\n"
    "    Csock::Listen(unsigned short,int)\n"
    "    Csock::Listen(unsigned short)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Csock_Accept(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  CString *arg2 = 0 ;
  unsigned short *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  cs_sock_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Csock_Accept",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_Accept" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sHost");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_unsigned_short,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Csock_Accept" "', argument " "3"" of type '" "unsigned short &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_Accept" "', argument " "3"" of type '" "unsigned short &""'"); 
  }
  arg3 = reinterpret_cast< unsigned short * >(argp3);
  result = (cs_sock_t)(arg1)->Accept(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_AcceptSSL(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_AcceptSSL",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_AcceptSSL" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (bool)(arg1)->AcceptSSL();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_SSLClientSetup(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_SSLClientSetup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SSLClientSetup" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (bool)(arg1)->SSLClientSetup();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_SSLServerSetup(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_SSLServerSetup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SSLServerSetup" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (bool)(arg1)->SSLServerSetup();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_ConnectSSL(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_ConnectSSL",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ConnectSSL" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (bool)(arg1)->ConnectSSL();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_StartTLS(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_StartTLS",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_StartTLS" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (bool)(arg1)->StartTLS();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_Write__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Csock_Write",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_Write" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_Write" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Csock_Write" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  result = (bool)(arg1)->Write((char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_Write__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock_Write",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_Write" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_Write" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_Write" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->Write((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_Write(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Csock_Write__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Csock_Write__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Csock_Write'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Csock::Write(char const *,size_t)\n"
    "    Csock::Write(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Csock_Read(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  cs_ssize_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Csock_Read",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_Read" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_Read" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Csock_Read" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  result = (arg1)->Read(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new cs_ssize_t(static_cast< const cs_ssize_t& >(result))), SWIGTYPE_p_ssize_t, SWIG_POINTER_OWN |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetLocalIP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_GetLocalIP",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetLocalIP" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (arg1)->GetLocalIP();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetRemoteIP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_GetRemoteIP",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetRemoteIP" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (arg1)->GetRemoteIP();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_IsConnected(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_IsConnected",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_IsConnected" "', argument " "1"" of type '" "Csock const *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (bool)((Csock const *)arg1)->IsConnected();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_SetIsConnected(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock_SetIsConnected",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetIsConnected" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_SetIsConnected" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetIsConnected(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetRSock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  cs_sock_t *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_GetRSock",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetRSock" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (cs_sock_t *) &(arg1)->GetRSock();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_SetRSock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  cs_sock_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock_SetRSock",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetRSock" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_SetRSock" "', argument " "2"" of type '" "cs_sock_t""'");
  } 
  arg2 = static_cast< cs_sock_t >(val2);
  (arg1)->SetRSock(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetWSock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  cs_sock_t *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_GetWSock",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetWSock" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (cs_sock_t *) &(arg1)->GetWSock();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_SetWSock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  cs_sock_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock_SetWSock",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetWSock" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_SetWSock" "', argument " "2"" of type '" "cs_sock_t""'");
  } 
  arg2 = static_cast< cs_sock_t >(val2);
  (arg1)->SetWSock(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_SetSock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  cs_sock_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock_SetSock",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetSock" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_SetSock" "', argument " "2"" of type '" "cs_sock_t""'");
  } 
  arg2 = static_cast< cs_sock_t >(val2);
  (arg1)->SetSock(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetSock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  cs_sock_t *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_GetSock",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetSock" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (cs_sock_t *) &(arg1)->GetSock();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_CallSockError__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  int arg2 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Csock_CallSockError",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_CallSockError" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_CallSockError" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Csock_CallSockError" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_CallSockError" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->CallSockError(arg2,(CString const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_CallSockError__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock_CallSockError",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_CallSockError" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_CallSockError" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->CallSockError(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_CallSockError(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Csock_CallSockError__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Csock_CallSockError__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Csock_CallSockError'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Csock::CallSockError(int,CString const &)\n"
    "    Csock::CallSockError(int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Csock_ResetTimer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_ResetTimer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ResetTimer" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  (arg1)->ResetTimer();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_PauseRead(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_PauseRead",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_PauseRead" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  (arg1)->PauseRead();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_UnPauseRead(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_UnPauseRead",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_UnPauseRead" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  (arg1)->UnPauseRead();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_IsReadPaused(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_IsReadPaused",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_IsReadPaused" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (bool)(arg1)->IsReadPaused();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_SetTimeout__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  int arg2 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Csock_SetTimeout",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetTimeout" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_SetTimeout" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Csock_SetTimeout" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  (arg1)->SetTimeout(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_SetTimeout__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock_SetTimeout",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetTimeout" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_SetTimeout" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->SetTimeout(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_SetTimeout(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Csock_SetTimeout__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Csock_SetTimeout__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Csock_SetTimeout'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Csock::SetTimeout(int,unsigned int)\n"
    "    Csock::SetTimeout(int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Csock_SetTimeoutType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock_SetTimeoutType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetTimeoutType" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_SetTimeoutType" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  (arg1)->SetTimeoutType(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetTimeout(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_GetTimeout",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetTimeout" "', argument " "1"" of type '" "Csock const *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (int)((Csock const *)arg1)->GetTimeout();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetTimeoutType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_GetTimeoutType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetTimeoutType" "', argument " "1"" of type '" "Csock const *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (unsigned int)((Csock const *)arg1)->GetTimeoutType();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_CheckTimeout(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  time_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock_CheckTimeout",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_CheckTimeout" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_time_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_CheckTimeout" "', argument " "2"" of type '" "time_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_CheckTimeout" "', argument " "2"" of type '" "time_t""'");
    } else {
      time_t * temp = reinterpret_cast< time_t * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (bool)(arg1)->CheckTimeout(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_PushBuff__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:Csock_PushBuff",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_PushBuff" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_PushBuff" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Csock_PushBuff" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Csock_PushBuff" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  (arg1)->PushBuff((char const *)arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_PushBuff__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Csock_PushBuff",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_PushBuff" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_PushBuff" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Csock_PushBuff" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  (arg1)->PushBuff((char const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_PushBuff(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Csock_PushBuff__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Csock_PushBuff__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Csock_PushBuff'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Csock::PushBuff(char const *,size_t,bool)\n"
    "    Csock::PushBuff(char const *,size_t)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Csock_GetInternalReadBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_GetInternalReadBuffer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetInternalReadBuffer" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (CString *) &(arg1)->GetInternalReadBuffer();
  {
    if (result) {
      resultobj = CPyRetString::wrap(*result);
    } else {
      resultobj = Py_None;
      Py_INCREF(Py_None);
    }
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetInternalWriteBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_GetInternalWriteBuffer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetInternalWriteBuffer" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (CString *) &(arg1)->GetInternalWriteBuffer();
  {
    if (result) {
      resultobj = CPyRetString::wrap(*result);
    } else {
      resultobj = Py_None;
      Py_INCREF(Py_None);
    }
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_SetMaxBufferThreshold(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock_SetMaxBufferThreshold",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetMaxBufferThreshold" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_SetMaxBufferThreshold" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  (arg1)->SetMaxBufferThreshold(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetMaxBufferThreshold(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_GetMaxBufferThreshold",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetMaxBufferThreshold" "', argument " "1"" of type '" "Csock const *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (unsigned int)((Csock const *)arg1)->GetMaxBufferThreshold();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_GetType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetType" "', argument " "1"" of type '" "Csock const *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (int)((Csock const *)arg1)->GetType();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_SetType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock_SetType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetType" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_SetType" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->SetType(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetSockName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_GetSockName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetSockName" "', argument " "1"" of type '" "Csock const *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (CString *) &((Csock const *)arg1)->GetSockName();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_SetSockName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock_SetSockName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetSockName" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_SetSockName" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_SetSockName" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetSockName((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetHostName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_GetHostName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetHostName" "', argument " "1"" of type '" "Csock const *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (CString *) &((Csock const *)arg1)->GetHostName();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_SetHostName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock_SetHostName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetHostName" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_SetHostName" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_SetHostName" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetHostName((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetStartTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned long long result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_GetStartTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetStartTime" "', argument " "1"" of type '" "Csock const *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (unsigned long long)((Csock const *)arg1)->GetStartTime();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_ResetStartTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_ResetStartTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ResetStartTime" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  (arg1)->ResetStartTime();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetBytesRead(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned long long result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_GetBytesRead",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetBytesRead" "', argument " "1"" of type '" "Csock const *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (unsigned long long)((Csock const *)arg1)->GetBytesRead();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_ResetBytesRead(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_ResetBytesRead",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ResetBytesRead" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  (arg1)->ResetBytesRead();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetBytesWritten(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned long long result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_GetBytesWritten",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetBytesWritten" "', argument " "1"" of type '" "Csock const *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (unsigned long long)((Csock const *)arg1)->GetBytesWritten();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_ResetBytesWritten(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_ResetBytesWritten",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ResetBytesWritten" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  (arg1)->ResetBytesWritten();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetAvgRead__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  unsigned long long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock_GetAvgRead",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetAvgRead" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_GetAvgRead" "', argument " "2"" of type '" "unsigned long long""'");
  } 
  arg2 = static_cast< unsigned long long >(val2);
  result = (double)(arg1)->GetAvgRead(arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetAvgRead__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_GetAvgRead",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetAvgRead" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (double)(arg1)->GetAvgRead();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetAvgRead(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Csock_GetAvgRead__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Csock_GetAvgRead__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Csock_GetAvgRead'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Csock::GetAvgRead(unsigned long long)\n"
    "    Csock::GetAvgRead()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Csock_GetAvgWrite__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  unsigned long long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock_GetAvgWrite",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetAvgWrite" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_GetAvgWrite" "', argument " "2"" of type '" "unsigned long long""'");
  } 
  arg2 = static_cast< unsigned long long >(val2);
  result = (double)(arg1)->GetAvgWrite(arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetAvgWrite__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_GetAvgWrite",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetAvgWrite" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (double)(arg1)->GetAvgWrite();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetAvgWrite(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Csock_GetAvgWrite__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Csock_GetAvgWrite__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Csock_GetAvgWrite'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Csock::GetAvgWrite(unsigned long long)\n"
    "    Csock::GetAvgWrite()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Csock_GetRemotePort(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned short result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_GetRemotePort",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetRemotePort" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (unsigned short)(arg1)->GetRemotePort();
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetLocalPort(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned short result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_GetLocalPort",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetLocalPort" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (unsigned short)(arg1)->GetLocalPort();
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetPort(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned short result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_GetPort",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetPort" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (unsigned short)(arg1)->GetPort();
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_SetPort(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  unsigned short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock_SetPort",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetPort" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_SetPort" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  (arg1)->SetPort(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_Close__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  Csock::ECloseType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock_Close",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_Close" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_Close" "', argument " "2"" of type '" "Csock::ECloseType""'");
  } 
  arg2 = static_cast< Csock::ECloseType >(val2);
  (arg1)->Close(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_Close__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_Close",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_Close" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  (arg1)->Close();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_Close(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Csock_Close__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Csock_Close__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Csock_Close'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Csock::Close(Csock::ECloseType)\n"
    "    Csock::Close()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Csock_GetCloseType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Csock::ECloseType result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_GetCloseType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetCloseType" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (Csock::ECloseType)(arg1)->GetCloseType();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_IsClosed(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_IsClosed",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_IsClosed" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (bool)(arg1)->IsClosed();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_NonBlockingIO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_NonBlockingIO",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_NonBlockingIO" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  (arg1)->NonBlockingIO();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetSSL(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_GetSSL",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetSSL" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (bool)(arg1)->GetSSL();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_SetSSL(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock_SetSSL",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetSSL" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_SetSSL" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetSSL(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetWriteBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_GetWriteBuffer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetWriteBuffer" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (CString *) &(arg1)->GetWriteBuffer();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_ClearWriteBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_ClearWriteBuffer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ClearWriteBuffer" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  (arg1)->ClearWriteBuffer();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_SslIsEstablished(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_SslIsEstablished",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SslIsEstablished" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (bool)(arg1)->SslIsEstablished();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_ConnectInetd__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  bool arg2 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Csock_ConnectInetd",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ConnectInetd" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_ConnectInetd" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Csock_ConnectInetd" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_ConnectInetd" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = (bool)(arg1)->ConnectInetd(arg2,(CString const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_ConnectInetd__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock_ConnectInetd",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ConnectInetd" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_ConnectInetd" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (bool)(arg1)->ConnectInetd(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_ConnectInetd__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_ConnectInetd",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ConnectInetd" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (bool)(arg1)->ConnectInetd();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_ConnectInetd(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Csock_ConnectInetd__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Csock_ConnectInetd__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Csock_ConnectInetd__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Csock_ConnectInetd'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Csock::ConnectInetd(bool,CString const &)\n"
    "    Csock::ConnectInetd(bool)\n"
    "    Csock::ConnectInetd()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Csock_ConnectFD__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  int arg2 ;
  int arg3 ;
  CString *arg4 = 0 ;
  bool arg5 ;
  Csock::ETConn arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  bool val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:Csock_ConnectFD",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ConnectFD" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_ConnectFD" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Csock_ConnectFD" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Csock_ConnectFD" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_ConnectFD" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Csock_ConnectFD" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "Csock_ConnectFD" "', argument " "6"" of type '" "Csock::ETConn""'");
  } 
  arg6 = static_cast< Csock::ETConn >(val6);
  result = (bool)(arg1)->ConnectFD(arg2,arg3,(CString const &)*arg4,arg5,arg6);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_ConnectFD__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  int arg2 ;
  int arg3 ;
  CString *arg4 = 0 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:Csock_ConnectFD",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ConnectFD" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_ConnectFD" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Csock_ConnectFD" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Csock_ConnectFD" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_ConnectFD" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Csock_ConnectFD" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  result = (bool)(arg1)->ConnectFD(arg2,arg3,(CString const &)*arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_ConnectFD__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  int arg2 ;
  int arg3 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:Csock_ConnectFD",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ConnectFD" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_ConnectFD" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Csock_ConnectFD" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Csock_ConnectFD" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_ConnectFD" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  result = (bool)(arg1)->ConnectFD(arg2,arg3,(CString const &)*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_ConnectFD(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 6) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (CString**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_Csock_ConnectFD__SWIG_2(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (CString**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_Csock_ConnectFD__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (CString**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_int(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_Csock_ConnectFD__SWIG_0(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Csock_ConnectFD'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Csock::ConnectFD(int,int,CString const &,bool,Csock::ETConn)\n"
    "    Csock::ConnectFD(int,int,CString const &,bool)\n"
    "    Csock::ConnectFD(int,int,CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Csock_SetParentSockName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock_SetParentSockName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetParentSockName" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_SetParentSockName" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_SetParentSockName" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetParentSockName((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetParentSockName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_GetParentSockName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetParentSockName" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (CString *) &(arg1)->GetParentSockName();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_SetRate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  unsigned int arg2 ;
  unsigned long long arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned long long val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Csock_SetRate",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetRate" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_SetRate" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_long_SS_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Csock_SetRate" "', argument " "3"" of type '" "unsigned long long""'");
  } 
  arg3 = static_cast< unsigned long long >(val3);
  (arg1)->SetRate(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetRateBytes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_GetRateBytes",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetRateBytes" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (unsigned int)(arg1)->GetRateBytes();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetRateTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned long long result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_GetRateTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetRateTime" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (unsigned long long)(arg1)->GetRateTime();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_Connected(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_Connected",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_Connected" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  (arg1)->Connected();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_Disconnected(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_Disconnected",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_Disconnected" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  (arg1)->Disconnected();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_Timeout(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_Timeout",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_Timeout" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  (arg1)->Timeout();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_ReadData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Csock_ReadData",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ReadData" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_ReadData" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Csock_ReadData" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  (arg1)->ReadData((char const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_ReadLine(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock_ReadLine",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ReadLine" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_ReadLine" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_ReadLine" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->ReadLine((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_EnableReadLine(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_EnableReadLine",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_EnableReadLine" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  (arg1)->EnableReadLine();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_DisableReadLine(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_DisableReadLine",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_DisableReadLine" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  (arg1)->DisableReadLine();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_HasReadLine(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_HasReadLine",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_HasReadLine" "', argument " "1"" of type '" "Csock const *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (bool)((Csock const *)arg1)->HasReadLine();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_ReachedMaxBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_ReachedMaxBuffer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ReachedMaxBuffer" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  (arg1)->ReachedMaxBuffer();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_SockError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  int arg2 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Csock_SockError",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SockError" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_SockError" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Csock_SockError" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_SockError" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->SockError(arg2,(CString const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_ConnectionFrom(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  CString *arg2 = 0 ;
  unsigned short arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned short val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Csock_ConnectionFrom",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ConnectionFrom" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_ConnectionFrom" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_ConnectionFrom" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_short(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Csock_ConnectionFrom" "', argument " "3"" of type '" "unsigned short""'");
  } 
  arg3 = static_cast< unsigned short >(val3);
  result = (bool)(arg1)->ConnectionFrom((CString const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_Listening(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  CString *arg2 = 0 ;
  unsigned short arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned short val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Csock_Listening",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_Listening" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_Listening" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_Listening" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_short(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Csock_Listening" "', argument " "3"" of type '" "unsigned short""'");
  } 
  arg3 = static_cast< unsigned short >(val3);
  (arg1)->Listening((CString const &)*arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_ConnectionRefused(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_ConnectionRefused",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ConnectionRefused" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  (arg1)->ConnectionRefused();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_ReadPaused(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_ReadPaused",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ReadPaused" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  (arg1)->ReadPaused();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetTimeSinceLastDataTransaction__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  time_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  time_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock_GetTimeSinceLastDataTransaction",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetTimeSinceLastDataTransaction" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_time_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_GetTimeSinceLastDataTransaction" "', argument " "2"" of type '" "time_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_GetTimeSinceLastDataTransaction" "', argument " "2"" of type '" "time_t""'");
    } else {
      time_t * temp = reinterpret_cast< time_t * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (arg1)->GetTimeSinceLastDataTransaction(arg2);
  resultobj = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetTimeSinceLastDataTransaction__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  time_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_GetTimeSinceLastDataTransaction",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetTimeSinceLastDataTransaction" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (arg1)->GetTimeSinceLastDataTransaction();
  resultobj = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetTimeSinceLastDataTransaction(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Csock_GetTimeSinceLastDataTransaction__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_time_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Csock_GetTimeSinceLastDataTransaction__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Csock_GetTimeSinceLastDataTransaction'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Csock::GetTimeSinceLastDataTransaction(time_t)\n"
    "    Csock::GetTimeSinceLastDataTransaction()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Csock_GetLastCheckTimeout(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  time_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_GetLastCheckTimeout",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetLastCheckTimeout" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (arg1)->GetLastCheckTimeout();
  resultobj = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetNextCheckTimeout__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  time_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  time_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock_GetNextCheckTimeout",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetNextCheckTimeout" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_time_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_GetNextCheckTimeout" "', argument " "2"" of type '" "time_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_GetNextCheckTimeout" "', argument " "2"" of type '" "time_t""'");
    } else {
      time_t * temp = reinterpret_cast< time_t * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (arg1)->GetNextCheckTimeout(arg2);
  resultobj = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetNextCheckTimeout__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  time_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_GetNextCheckTimeout",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetNextCheckTimeout" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (arg1)->GetNextCheckTimeout();
  resultobj = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetNextCheckTimeout(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Csock_GetNextCheckTimeout__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Csock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_time_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Csock_GetNextCheckTimeout__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Csock_GetNextCheckTimeout'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Csock::GetNextCheckTimeout(time_t)\n"
    "    Csock::GetNextCheckTimeout()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Csock_GetPending(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_GetPending",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetPending" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (int)(arg1)->GetPending();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetConState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Csock::ECONState result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_GetConState",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetConState" "', argument " "1"" of type '" "Csock const *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (Csock::ECONState)((Csock const *)arg1)->GetConState();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_SetConState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  Csock::ECONState arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock_SetConState",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetConState" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_SetConState" "', argument " "2"" of type '" "Csock::ECONState""'");
  } 
  arg2 = static_cast< Csock::ECONState >(val2);
  (arg1)->SetConState(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_CreateSocksFD(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_CreateSocksFD",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_CreateSocksFD" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (bool)(arg1)->CreateSocksFD();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_CloseSocksFD(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_CloseSocksFD",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_CloseSocksFD" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  (arg1)->CloseSocksFD();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetBindHost(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_GetBindHost",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetBindHost" "', argument " "1"" of type '" "Csock const *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (CString *) &((Csock const *)arg1)->GetBindHost();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_SetBindHost(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock_SetBindHost",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetBindHost" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_SetBindHost" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_SetBindHost" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetBindHost((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_DNSLookup(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  Csock::EDNSLType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock_DNSLookup",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_DNSLookup" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_DNSLookup" "', argument " "2"" of type '" "Csock::EDNSLType""'");
  } 
  arg2 = static_cast< Csock::EDNSLType >(val2);
  result = (int)(arg1)->DNSLookup(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_SetupVHost(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_SetupVHost",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetupVHost" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (bool)(arg1)->SetupVHost();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetIPv6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_GetIPv6",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetIPv6" "', argument " "1"" of type '" "Csock const *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (bool)((Csock const *)arg1)->GetIPv6();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_SetIPv6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock_SetIPv6",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetIPv6" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_SetIPv6" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetIPv6(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_SetAFRequire(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  CSSockAddr::EAFRequire arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock_SetAFRequire",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetAFRequire" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_SetAFRequire" "', argument " "2"" of type '" "CSSockAddr::EAFRequire""'");
  } 
  arg2 = static_cast< CSSockAddr::EAFRequire >(val2);
  (arg1)->SetAFRequire(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_AllowWrite(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  unsigned long long *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock_AllowWrite",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_AllowWrite" "', argument " "1"" of type '" "Csock const *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_unsigned_long_long,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_AllowWrite" "', argument " "2"" of type '" "unsigned long long &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_AllowWrite" "', argument " "2"" of type '" "unsigned long long &""'"); 
  }
  arg2 = reinterpret_cast< unsigned long long * >(argp2);
  result = (bool)((Csock const *)arg1)->AllowWrite(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_SetSkipConnect(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Csock_SetSkipConnect",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetSkipConnect" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_SetSkipConnect" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetSkipConnect(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetAddrInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  CString *arg2 = 0 ;
  CSSockAddr *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Csock_GetAddrInfo",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetAddrInfo" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_GetAddrInfo" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_GetAddrInfo" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CSSockAddr,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Csock_GetAddrInfo" "', argument " "3"" of type '" "CSSockAddr &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_GetAddrInfo" "', argument " "3"" of type '" "CSSockAddr &""'"); 
  }
  arg3 = reinterpret_cast< CSSockAddr * >(argp3);
  result = (int)(arg1)->GetAddrInfo((CString const &)*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_ConvertAddress(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  sockaddr_storage *arg2 = (sockaddr_storage *) 0 ;
  socklen_t arg3 ;
  CString *arg4 = 0 ;
  unsigned short *arg5 = (unsigned short *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:Csock_ConvertAddress",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ConvertAddress" "', argument " "1"" of type '" "Csock *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_sockaddr_storage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_ConvertAddress" "', argument " "2"" of type '" "sockaddr_storage const *""'"); 
  }
  arg2 = reinterpret_cast< sockaddr_storage * >(argp2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_socklen_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Csock_ConvertAddress" "', argument " "3"" of type '" "socklen_t""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_ConvertAddress" "', argument " "3"" of type '" "socklen_t""'");
    } else {
      socklen_t * temp = reinterpret_cast< socklen_t * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj3, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg4 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 4 sIP");
    }
  }
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_unsigned_short, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "Csock_ConvertAddress" "', argument " "5"" of type '" "unsigned short *""'"); 
  }
  arg5 = reinterpret_cast< unsigned short * >(argp5);
  result = (int)(arg1)->ConvertAddress((sockaddr_storage const *)arg2,arg3,*arg4,arg5);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Csock_GetMaxConns(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Csock *arg1 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Csock_GetMaxConns",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetMaxConns" "', argument " "1"" of type '" "Csock const *""'"); 
  }
  arg1 = reinterpret_cast< Csock * >(argp1);
  result = (int)((Csock const *)arg1)->GetMaxConns();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Csock_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Csock, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CSConnection__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  unsigned short arg2 ;
  int arg3 ;
  int res1 = SWIG_OLDOBJ ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CSConnection *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_CSConnection",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CSConnection" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CSConnection" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CSConnection" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CSConnection" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (CSConnection *)new CSConnection((CString const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSConnection, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CSConnection__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  unsigned short arg2 ;
  int res1 = SWIG_OLDOBJ ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CSConnection *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_CSConnection",&obj0,&obj1)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CSConnection" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CSConnection" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CSConnection" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  result = (CSConnection *)new CSConnection((CString const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSConnection, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CSConnection(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_CSConnection__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_CSConnection__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_CSConnection'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CSConnection::CSConnection(CString const &,unsigned short,int)\n"
    "    CSConnection::CSConnection(CString const &,unsigned short)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_CSConnection(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSConnection *arg1 = (CSConnection *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CSConnection",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSConnection, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CSConnection" "', argument " "1"" of type '" "CSConnection *""'"); 
  }
  arg1 = reinterpret_cast< CSConnection * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSConnection_GetHostname(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSConnection *arg1 = (CSConnection *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSConnection_GetHostname",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSConnection_GetHostname" "', argument " "1"" of type '" "CSConnection const *""'"); 
  }
  arg1 = reinterpret_cast< CSConnection * >(argp1);
  result = (CString *) &((CSConnection const *)arg1)->GetHostname();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSConnection_GetSockName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSConnection *arg1 = (CSConnection *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSConnection_GetSockName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSConnection_GetSockName" "', argument " "1"" of type '" "CSConnection const *""'"); 
  }
  arg1 = reinterpret_cast< CSConnection * >(argp1);
  result = (CString *) &((CSConnection const *)arg1)->GetSockName();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSConnection_GetBindHost(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSConnection *arg1 = (CSConnection *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSConnection_GetBindHost",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSConnection_GetBindHost" "', argument " "1"" of type '" "CSConnection const *""'"); 
  }
  arg1 = reinterpret_cast< CSConnection * >(argp1);
  result = (CString *) &((CSConnection const *)arg1)->GetBindHost();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSConnection_GetPort(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSConnection *arg1 = (CSConnection *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned short result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSConnection_GetPort",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSConnection_GetPort" "', argument " "1"" of type '" "CSConnection const *""'"); 
  }
  arg1 = reinterpret_cast< CSConnection * >(argp1);
  result = (unsigned short)((CSConnection const *)arg1)->GetPort();
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSConnection_GetTimeout(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSConnection *arg1 = (CSConnection *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSConnection_GetTimeout",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSConnection_GetTimeout" "', argument " "1"" of type '" "CSConnection const *""'"); 
  }
  arg1 = reinterpret_cast< CSConnection * >(argp1);
  result = (int)((CSConnection const *)arg1)->GetTimeout();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSConnection_GetIsSSL(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSConnection *arg1 = (CSConnection *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSConnection_GetIsSSL",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSConnection_GetIsSSL" "', argument " "1"" of type '" "CSConnection const *""'"); 
  }
  arg1 = reinterpret_cast< CSConnection * >(argp1);
  result = (bool)((CSConnection const *)arg1)->GetIsSSL();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSConnection_GetAFRequire(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSConnection *arg1 = (CSConnection *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CSSockAddr::EAFRequire result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSConnection_GetAFRequire",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSConnection_GetAFRequire" "', argument " "1"" of type '" "CSConnection const *""'"); 
  }
  arg1 = reinterpret_cast< CSConnection * >(argp1);
  result = (CSSockAddr::EAFRequire)((CSConnection const *)arg1)->GetAFRequire();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSConnection_SetHostname(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSConnection *arg1 = (CSConnection *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSConnection_SetHostname",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSConnection_SetHostname" "', argument " "1"" of type '" "CSConnection *""'"); 
  }
  arg1 = reinterpret_cast< CSConnection * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSConnection_SetHostname" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSConnection_SetHostname" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetHostname((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSConnection_SetSockName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSConnection *arg1 = (CSConnection *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSConnection_SetSockName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSConnection_SetSockName" "', argument " "1"" of type '" "CSConnection *""'"); 
  }
  arg1 = reinterpret_cast< CSConnection * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSConnection_SetSockName" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSConnection_SetSockName" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetSockName((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSConnection_SetBindHost(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSConnection *arg1 = (CSConnection *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSConnection_SetBindHost",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSConnection_SetBindHost" "', argument " "1"" of type '" "CSConnection *""'"); 
  }
  arg1 = reinterpret_cast< CSConnection * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSConnection_SetBindHost" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSConnection_SetBindHost" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetBindHost((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSConnection_SetPort(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSConnection *arg1 = (CSConnection *) 0 ;
  unsigned short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSConnection_SetPort",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSConnection_SetPort" "', argument " "1"" of type '" "CSConnection *""'"); 
  }
  arg1 = reinterpret_cast< CSConnection * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSConnection_SetPort" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  (arg1)->SetPort(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSConnection_SetTimeout(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSConnection *arg1 = (CSConnection *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSConnection_SetTimeout",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSConnection_SetTimeout" "', argument " "1"" of type '" "CSConnection *""'"); 
  }
  arg1 = reinterpret_cast< CSConnection * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSConnection_SetTimeout" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->SetTimeout(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSConnection_SetIsSSL(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSConnection *arg1 = (CSConnection *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSConnection_SetIsSSL",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSConnection_SetIsSSL" "', argument " "1"" of type '" "CSConnection *""'"); 
  }
  arg1 = reinterpret_cast< CSConnection * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSConnection_SetIsSSL" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetIsSSL(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSConnection_SetAFRequire(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSConnection *arg1 = (CSConnection *) 0 ;
  CSSockAddr::EAFRequire arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSConnection_SetAFRequire",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSConnection_SetAFRequire" "', argument " "1"" of type '" "CSConnection *""'"); 
  }
  arg1 = reinterpret_cast< CSConnection * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSConnection_SetAFRequire" "', argument " "2"" of type '" "CSSockAddr::EAFRequire""'");
  } 
  arg2 = static_cast< CSSockAddr::EAFRequire >(val2);
  (arg1)->SetAFRequire(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CSConnection_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CSConnection, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CSSSLConnection__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  unsigned short arg2 ;
  int arg3 ;
  int res1 = SWIG_OLDOBJ ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CSSSLConnection *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_CSSSLConnection",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CSSSLConnection" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CSSSLConnection" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CSSSLConnection" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CSSSLConnection" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (CSSSLConnection *)new CSSSLConnection((CString const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSSSLConnection, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CSSSLConnection__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  unsigned short arg2 ;
  int res1 = SWIG_OLDOBJ ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CSSSLConnection *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_CSSSLConnection",&obj0,&obj1)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CSSSLConnection" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CSSSLConnection" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CSSSLConnection" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  result = (CSSSLConnection *)new CSSSLConnection((CString const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSSSLConnection, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CSSSLConnection(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_CSSSLConnection__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_CSSSLConnection__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_CSSSLConnection'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CSSSLConnection::CSSSLConnection(CString const &,unsigned short,int)\n"
    "    CSSSLConnection::CSSSLConnection(CString const &,unsigned short)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_CSSSLConnection(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSSSLConnection *arg1 = (CSSSLConnection *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CSSSLConnection",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSSSLConnection, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CSSSLConnection" "', argument " "1"" of type '" "CSSSLConnection *""'"); 
  }
  arg1 = reinterpret_cast< CSSSLConnection * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CSSSLConnection_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CSSSLConnection, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CSListener__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short arg1 ;
  CString *arg2 = 0 ;
  bool arg3 ;
  unsigned short val1 ;
  int ecode1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CSListener *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_CSListener",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_short(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CSListener" "', argument " "1"" of type '" "unsigned short""'");
  } 
  arg1 = static_cast< unsigned short >(val1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CSListener" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CSListener" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CSListener" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (CSListener *)new CSListener(arg1,(CString const &)*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSListener, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CSListener__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short arg1 ;
  CString *arg2 = 0 ;
  unsigned short val1 ;
  int ecode1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CSListener *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_CSListener",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_short(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CSListener" "', argument " "1"" of type '" "unsigned short""'");
  } 
  arg1 = static_cast< unsigned short >(val1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CSListener" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CSListener" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (CSListener *)new CSListener(arg1,(CString const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSListener, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CSListener__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short arg1 ;
  unsigned short val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  CSListener *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_CSListener",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_short(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CSListener" "', argument " "1"" of type '" "unsigned short""'");
  } 
  arg1 = static_cast< unsigned short >(val1);
  result = (CSListener *)new CSListener(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSListener, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CSListener(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_short(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_CSListener__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_short(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_CSListener__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_short(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_CSListener__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_CSListener'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CSListener::CSListener(unsigned short,CString const &,bool)\n"
    "    CSListener::CSListener(unsigned short,CString const &)\n"
    "    CSListener::CSListener(unsigned short)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_CSListener(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSListener *arg1 = (CSListener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CSListener",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSListener, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CSListener" "', argument " "1"" of type '" "CSListener *""'"); 
  }
  arg1 = reinterpret_cast< CSListener * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSListener_SetDetach(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSListener *arg1 = (CSListener *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSListener_SetDetach",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSListener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSListener_SetDetach" "', argument " "1"" of type '" "CSListener *""'"); 
  }
  arg1 = reinterpret_cast< CSListener * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSListener_SetDetach" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetDetach(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSListener_GetDetach(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSListener *arg1 = (CSListener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSListener_GetDetach",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSListener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSListener_GetDetach" "', argument " "1"" of type '" "CSListener const *""'"); 
  }
  arg1 = reinterpret_cast< CSListener * >(argp1);
  result = (bool)((CSListener const *)arg1)->GetDetach();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSListener_GetPort(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSListener *arg1 = (CSListener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned short result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSListener_GetPort",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSListener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSListener_GetPort" "', argument " "1"" of type '" "CSListener const *""'"); 
  }
  arg1 = reinterpret_cast< CSListener * >(argp1);
  result = (unsigned short)((CSListener const *)arg1)->GetPort();
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSListener_GetSockName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSListener *arg1 = (CSListener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSListener_GetSockName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSListener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSListener_GetSockName" "', argument " "1"" of type '" "CSListener const *""'"); 
  }
  arg1 = reinterpret_cast< CSListener * >(argp1);
  result = (CString *) &((CSListener const *)arg1)->GetSockName();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSListener_GetBindHost(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSListener *arg1 = (CSListener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSListener_GetBindHost",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSListener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSListener_GetBindHost" "', argument " "1"" of type '" "CSListener const *""'"); 
  }
  arg1 = reinterpret_cast< CSListener * >(argp1);
  result = (CString *) &((CSListener const *)arg1)->GetBindHost();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSListener_GetIsSSL(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSListener *arg1 = (CSListener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSListener_GetIsSSL",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSListener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSListener_GetIsSSL" "', argument " "1"" of type '" "CSListener const *""'"); 
  }
  arg1 = reinterpret_cast< CSListener * >(argp1);
  result = (bool)((CSListener const *)arg1)->GetIsSSL();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSListener_GetMaxConns(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSListener *arg1 = (CSListener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSListener_GetMaxConns",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSListener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSListener_GetMaxConns" "', argument " "1"" of type '" "CSListener const *""'"); 
  }
  arg1 = reinterpret_cast< CSListener * >(argp1);
  result = (int)((CSListener const *)arg1)->GetMaxConns();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSListener_GetTimeout(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSListener *arg1 = (CSListener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSListener_GetTimeout",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSListener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSListener_GetTimeout" "', argument " "1"" of type '" "CSListener const *""'"); 
  }
  arg1 = reinterpret_cast< CSListener * >(argp1);
  result = (unsigned int)((CSListener const *)arg1)->GetTimeout();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSListener_GetAFRequire(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSListener *arg1 = (CSListener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CSSockAddr::EAFRequire result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSListener_GetAFRequire",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSListener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSListener_GetAFRequire" "', argument " "1"" of type '" "CSListener const *""'"); 
  }
  arg1 = reinterpret_cast< CSListener * >(argp1);
  result = (CSSockAddr::EAFRequire)((CSListener const *)arg1)->GetAFRequire();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSListener_SetPort(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSListener *arg1 = (CSListener *) 0 ;
  unsigned short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSListener_SetPort",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSListener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSListener_SetPort" "', argument " "1"" of type '" "CSListener *""'"); 
  }
  arg1 = reinterpret_cast< CSListener * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSListener_SetPort" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  (arg1)->SetPort(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSListener_SetSockName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSListener *arg1 = (CSListener *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSListener_SetSockName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSListener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSListener_SetSockName" "', argument " "1"" of type '" "CSListener *""'"); 
  }
  arg1 = reinterpret_cast< CSListener * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSListener_SetSockName" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSListener_SetSockName" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetSockName((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSListener_SetBindHost(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSListener *arg1 = (CSListener *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSListener_SetBindHost",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSListener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSListener_SetBindHost" "', argument " "1"" of type '" "CSListener *""'"); 
  }
  arg1 = reinterpret_cast< CSListener * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSListener_SetBindHost" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSListener_SetBindHost" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetBindHost((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSListener_SetIsSSL(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSListener *arg1 = (CSListener *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSListener_SetIsSSL",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSListener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSListener_SetIsSSL" "', argument " "1"" of type '" "CSListener *""'"); 
  }
  arg1 = reinterpret_cast< CSListener * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSListener_SetIsSSL" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetIsSSL(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSListener_SetMaxConns(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSListener *arg1 = (CSListener *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSListener_SetMaxConns",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSListener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSListener_SetMaxConns" "', argument " "1"" of type '" "CSListener *""'"); 
  }
  arg1 = reinterpret_cast< CSListener * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSListener_SetMaxConns" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->SetMaxConns(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSListener_SetTimeout(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSListener *arg1 = (CSListener *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSListener_SetTimeout",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSListener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSListener_SetTimeout" "', argument " "1"" of type '" "CSListener *""'"); 
  }
  arg1 = reinterpret_cast< CSListener * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSListener_SetTimeout" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  (arg1)->SetTimeout(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSListener_SetAFRequire(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSListener *arg1 = (CSListener *) 0 ;
  CSSockAddr::EAFRequire arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSListener_SetAFRequire",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSListener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSListener_SetAFRequire" "', argument " "1"" of type '" "CSListener *""'"); 
  }
  arg1 = reinterpret_cast< CSListener * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSListener_SetAFRequire" "', argument " "2"" of type '" "CSSockAddr::EAFRequire""'");
  } 
  arg2 = static_cast< CSSockAddr::EAFRequire >(val2);
  (arg1)->SetAFRequire(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CSListener_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CSListener, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CSocketManager(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocketManager *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CSocketManager")) SWIG_fail;
  result = (CSocketManager *)new CSocketManager();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSocketManager, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CSocketManager(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocketManager *arg1 = (CSocketManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CSocketManager",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocketManager, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CSocketManager" "', argument " "1"" of type '" "CSocketManager *""'"); 
  }
  arg1 = reinterpret_cast< CSocketManager * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocketManager_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocketManager *arg1 = (CSocketManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSocketManager_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_clear" "', argument " "1"" of type '" "CSocketManager *""'"); 
  }
  arg1 = reinterpret_cast< CSocketManager * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocketManager_Cleanup(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocketManager *arg1 = (CSocketManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSocketManager_Cleanup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_Cleanup" "', argument " "1"" of type '" "CSocketManager *""'"); 
  }
  arg1 = reinterpret_cast< CSocketManager * >(argp1);
  (arg1)->Cleanup();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocketManager_GetSockObj__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocketManager *arg1 = (CSocketManager *) 0 ;
  CString *arg2 = 0 ;
  unsigned short arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned short val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  Csock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CSocketManager_GetSockObj",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_GetSockObj" "', argument " "1"" of type '" "CSocketManager *""'"); 
  }
  arg1 = reinterpret_cast< CSocketManager * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocketManager_GetSockObj" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_GetSockObj" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_short(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSocketManager_GetSockObj" "', argument " "3"" of type '" "unsigned short""'");
  } 
  arg3 = static_cast< unsigned short >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSocketManager_GetSockObj" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = (Csock *)(arg1)->GetSockObj((CString const &)*arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocketManager_GetSockObj__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocketManager *arg1 = (CSocketManager *) 0 ;
  CString *arg2 = 0 ;
  unsigned short arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned short val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Csock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CSocketManager_GetSockObj",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_GetSockObj" "', argument " "1"" of type '" "CSocketManager *""'"); 
  }
  arg1 = reinterpret_cast< CSocketManager * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocketManager_GetSockObj" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_GetSockObj" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_short(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSocketManager_GetSockObj" "', argument " "3"" of type '" "unsigned short""'");
  } 
  arg3 = static_cast< unsigned short >(val3);
  result = (Csock *)(arg1)->GetSockObj((CString const &)*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocketManager_GetSockObj(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSocketManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_short(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CSocketManager_GetSockObj__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSocketManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_short(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_CSocketManager_GetSockObj__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CSocketManager_GetSockObj'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CSocketManager::GetSockObj(CString const &,unsigned short,int)\n"
    "    CSocketManager::GetSockObj(CString const &,unsigned short)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CSocketManager_Connect__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocketManager *arg1 = (CSocketManager *) 0 ;
  CSConnection *arg2 = 0 ;
  Csock *arg3 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CSocketManager_Connect",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_Connect" "', argument " "1"" of type '" "CSocketManager *""'"); 
  }
  arg1 = reinterpret_cast< CSocketManager * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CSConnection,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocketManager_Connect" "', argument " "2"" of type '" "CSConnection const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_Connect" "', argument " "2"" of type '" "CSConnection const &""'"); 
  }
  arg2 = reinterpret_cast< CSConnection * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSocketManager_Connect" "', argument " "3"" of type '" "Csock *""'"); 
  }
  arg3 = reinterpret_cast< Csock * >(argp3);
  (arg1)->Connect((CSConnection const &)*arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocketManager_Connect__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocketManager *arg1 = (CSocketManager *) 0 ;
  CSConnection *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSocketManager_Connect",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_Connect" "', argument " "1"" of type '" "CSocketManager *""'"); 
  }
  arg1 = reinterpret_cast< CSocketManager * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CSConnection,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocketManager_Connect" "', argument " "2"" of type '" "CSConnection const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_Connect" "', argument " "2"" of type '" "CSConnection const &""'"); 
  }
  arg2 = reinterpret_cast< CSConnection * >(argp2);
  (arg1)->Connect((CSConnection const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocketManager_Connect(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSocketManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_CSConnection, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CSocketManager_Connect__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSocketManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_CSConnection, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CSocketManager_Connect__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CSocketManager_Connect'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CSocketManager::Connect(CSConnection const &,Csock *)\n"
    "    CSocketManager::Connect(CSConnection const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CSocketManager_Listen__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocketManager *arg1 = (CSocketManager *) 0 ;
  CSListener *arg2 = 0 ;
  Csock *arg3 = (Csock *) 0 ;
  unsigned short *arg4 = (unsigned short *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CSocketManager_Listen",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_Listen" "', argument " "1"" of type '" "CSocketManager *""'"); 
  }
  arg1 = reinterpret_cast< CSocketManager * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CSListener,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocketManager_Listen" "', argument " "2"" of type '" "CSListener const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_Listen" "', argument " "2"" of type '" "CSListener const &""'"); 
  }
  arg2 = reinterpret_cast< CSListener * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSocketManager_Listen" "', argument " "3"" of type '" "Csock *""'"); 
  }
  arg3 = reinterpret_cast< Csock * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_unsigned_short, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CSocketManager_Listen" "', argument " "4"" of type '" "unsigned short *""'"); 
  }
  arg4 = reinterpret_cast< unsigned short * >(argp4);
  result = (bool)(arg1)->Listen((CSListener const &)*arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocketManager_Listen__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocketManager *arg1 = (CSocketManager *) 0 ;
  CSListener *arg2 = 0 ;
  Csock *arg3 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CSocketManager_Listen",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_Listen" "', argument " "1"" of type '" "CSocketManager *""'"); 
  }
  arg1 = reinterpret_cast< CSocketManager * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CSListener,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocketManager_Listen" "', argument " "2"" of type '" "CSListener const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_Listen" "', argument " "2"" of type '" "CSListener const &""'"); 
  }
  arg2 = reinterpret_cast< CSListener * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSocketManager_Listen" "', argument " "3"" of type '" "Csock *""'"); 
  }
  arg3 = reinterpret_cast< Csock * >(argp3);
  result = (bool)(arg1)->Listen((CSListener const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocketManager_Listen__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocketManager *arg1 = (CSocketManager *) 0 ;
  CSListener *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSocketManager_Listen",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_Listen" "', argument " "1"" of type '" "CSocketManager *""'"); 
  }
  arg1 = reinterpret_cast< CSocketManager * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CSListener,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocketManager_Listen" "', argument " "2"" of type '" "CSListener const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_Listen" "', argument " "2"" of type '" "CSListener const &""'"); 
  }
  arg2 = reinterpret_cast< CSListener * >(argp2);
  result = (bool)(arg1)->Listen((CSListener const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocketManager_Listen(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSocketManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_CSListener, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CSocketManager_Listen__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSocketManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_CSListener, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CSocketManager_Listen__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSocketManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_CSListener, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_unsigned_short, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CSocketManager_Listen__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CSocketManager_Listen'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CSocketManager::Listen(CSListener const &,Csock *,unsigned short *)\n"
    "    CSocketManager::Listen(CSListener const &,Csock *)\n"
    "    CSocketManager::Listen(CSListener const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CSocketManager_HasFDs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocketManager *arg1 = (CSocketManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSocketManager_HasFDs",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_HasFDs" "', argument " "1"" of type '" "CSocketManager const *""'"); 
  }
  arg1 = reinterpret_cast< CSocketManager * >(argp1);
  result = (bool)((CSocketManager const *)arg1)->HasFDs();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocketManager_Loop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocketManager *arg1 = (CSocketManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSocketManager_Loop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_Loop" "', argument " "1"" of type '" "CSocketManager *""'"); 
  }
  arg1 = reinterpret_cast< CSocketManager * >(argp1);
  (arg1)->Loop();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocketManager_DynamicSelectLoop__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocketManager *arg1 = (CSocketManager *) 0 ;
  u_long arg2 ;
  u_long arg3 ;
  time_t arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CSocketManager_DynamicSelectLoop",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_DynamicSelectLoop" "', argument " "1"" of type '" "CSocketManager *""'"); 
  }
  arg1 = reinterpret_cast< CSocketManager * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_u_long,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocketManager_DynamicSelectLoop" "', argument " "2"" of type '" "u_long""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_DynamicSelectLoop" "', argument " "2"" of type '" "u_long""'");
    } else {
      u_long * temp = reinterpret_cast< u_long * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_u_long,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSocketManager_DynamicSelectLoop" "', argument " "3"" of type '" "u_long""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_DynamicSelectLoop" "', argument " "3"" of type '" "u_long""'");
    } else {
      u_long * temp = reinterpret_cast< u_long * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_time_t,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CSocketManager_DynamicSelectLoop" "', argument " "4"" of type '" "time_t""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_DynamicSelectLoop" "', argument " "4"" of type '" "time_t""'");
    } else {
      time_t * temp = reinterpret_cast< time_t * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  (arg1)->DynamicSelectLoop(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocketManager_DynamicSelectLoop__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocketManager *arg1 = (CSocketManager *) 0 ;
  u_long arg2 ;
  u_long arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CSocketManager_DynamicSelectLoop",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_DynamicSelectLoop" "', argument " "1"" of type '" "CSocketManager *""'"); 
  }
  arg1 = reinterpret_cast< CSocketManager * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_u_long,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocketManager_DynamicSelectLoop" "', argument " "2"" of type '" "u_long""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_DynamicSelectLoop" "', argument " "2"" of type '" "u_long""'");
    } else {
      u_long * temp = reinterpret_cast< u_long * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_u_long,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSocketManager_DynamicSelectLoop" "', argument " "3"" of type '" "u_long""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_DynamicSelectLoop" "', argument " "3"" of type '" "u_long""'");
    } else {
      u_long * temp = reinterpret_cast< u_long * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  (arg1)->DynamicSelectLoop(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocketManager_DynamicSelectLoop(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSocketManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_u_long, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_u_long, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CSocketManager_DynamicSelectLoop__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSocketManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_u_long, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_u_long, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_time_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CSocketManager_DynamicSelectLoop__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CSocketManager_DynamicSelectLoop'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CSocketManager::DynamicSelectLoop(u_long,u_long,time_t)\n"
    "    CSocketManager::DynamicSelectLoop(u_long,u_long)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CSocketManager_AddSock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocketManager *arg1 = (CSocketManager *) 0 ;
  Csock *arg2 = (Csock *) 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CSocketManager_AddSock",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_AddSock" "', argument " "1"" of type '" "CSocketManager *""'"); 
  }
  arg1 = reinterpret_cast< CSocketManager * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocketManager_AddSock" "', argument " "2"" of type '" "Csock *""'"); 
  }
  arg2 = reinterpret_cast< Csock * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSocketManager_AddSock" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_AddSock" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->AddSock(arg2,(CString const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocketManager_FindSockByRemotePort(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocketManager *arg1 = (CSocketManager *) 0 ;
  unsigned short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Csock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSocketManager_FindSockByRemotePort",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_FindSockByRemotePort" "', argument " "1"" of type '" "CSocketManager *""'"); 
  }
  arg1 = reinterpret_cast< CSocketManager * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSocketManager_FindSockByRemotePort" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  result = (Csock *)(arg1)->FindSockByRemotePort(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocketManager_FindSockByLocalPort(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocketManager *arg1 = (CSocketManager *) 0 ;
  unsigned short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Csock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSocketManager_FindSockByLocalPort",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_FindSockByLocalPort" "', argument " "1"" of type '" "CSocketManager *""'"); 
  }
  arg1 = reinterpret_cast< CSocketManager * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSocketManager_FindSockByLocalPort" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  result = (Csock *)(arg1)->FindSockByLocalPort(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocketManager_FindSockByName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocketManager *arg1 = (CSocketManager *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Csock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSocketManager_FindSockByName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_FindSockByName" "', argument " "1"" of type '" "CSocketManager *""'"); 
  }
  arg1 = reinterpret_cast< CSocketManager * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocketManager_FindSockByName" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_FindSockByName" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (Csock *)(arg1)->FindSockByName((CString const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocketManager_FindSockByFD(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocketManager *arg1 = (CSocketManager *) 0 ;
  cs_sock_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Csock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSocketManager_FindSockByFD",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_FindSockByFD" "', argument " "1"" of type '" "CSocketManager *""'"); 
  }
  arg1 = reinterpret_cast< CSocketManager * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSocketManager_FindSockByFD" "', argument " "2"" of type '" "cs_sock_t""'");
  } 
  arg2 = static_cast< cs_sock_t >(val2);
  result = (Csock *)(arg1)->FindSockByFD(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocketManager_FindSocksByName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocketManager *arg1 = (CSocketManager *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< std::vector< Csock *,std::allocator< Csock * > > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSocketManager_FindSocksByName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_FindSocksByName" "', argument " "1"" of type '" "CSocketManager *""'"); 
  }
  arg1 = reinterpret_cast< CSocketManager * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocketManager_FindSocksByName" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_FindSocksByName" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (arg1)->FindSocksByName((CString const &)*arg2);
  resultobj = SWIG_NewPointerObj((new std::vector< Csock *,std::allocator< Csock * > >(static_cast< const std::vector< Csock *,std::allocator< Csock * > >& >(result))), SWIGTYPE_p_std__vectorT_Csock_p_std__allocatorT_Csock_p_t_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocketManager_FindSocksByRemoteHost(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocketManager *arg1 = (CSocketManager *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< std::vector< Csock *,std::allocator< Csock * > > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSocketManager_FindSocksByRemoteHost",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_FindSocksByRemoteHost" "', argument " "1"" of type '" "CSocketManager *""'"); 
  }
  arg1 = reinterpret_cast< CSocketManager * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocketManager_FindSocksByRemoteHost" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_FindSocksByRemoteHost" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (arg1)->FindSocksByRemoteHost((CString const &)*arg2);
  resultobj = SWIG_NewPointerObj((new std::vector< Csock *,std::allocator< Csock * > >(static_cast< const std::vector< Csock *,std::allocator< Csock * > >& >(result))), SWIGTYPE_p_std__vectorT_Csock_p_std__allocatorT_Csock_p_t_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocketManager_GetErrno(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocketManager *arg1 = (CSocketManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSocketManager_GetErrno",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_GetErrno" "', argument " "1"" of type '" "CSocketManager *""'"); 
  }
  arg1 = reinterpret_cast< CSocketManager * >(argp1);
  result = (int)(arg1)->GetErrno();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocketManager_GetSelectTimeout(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocketManager *arg1 = (CSocketManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  u_long result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSocketManager_GetSelectTimeout",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_GetSelectTimeout" "', argument " "1"" of type '" "CSocketManager *""'"); 
  }
  arg1 = reinterpret_cast< CSocketManager * >(argp1);
  result = (arg1)->GetSelectTimeout();
  resultobj = SWIG_NewPointerObj((new u_long(static_cast< const u_long& >(result))), SWIGTYPE_p_u_long, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocketManager_SetSelectTimeout(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocketManager *arg1 = (CSocketManager *) 0 ;
  u_long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSocketManager_SetSelectTimeout",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_SetSelectTimeout" "', argument " "1"" of type '" "CSocketManager *""'"); 
  }
  arg1 = reinterpret_cast< CSocketManager * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_u_long,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocketManager_SetSelectTimeout" "', argument " "2"" of type '" "u_long""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_SetSelectTimeout" "', argument " "2"" of type '" "u_long""'");
    } else {
      u_long * temp = reinterpret_cast< u_long * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SetSelectTimeout(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocketManager_DelSockByAddr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocketManager *arg1 = (CSocketManager *) 0 ;
  Csock *arg2 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSocketManager_DelSockByAddr",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_DelSockByAddr" "', argument " "1"" of type '" "CSocketManager *""'"); 
  }
  arg1 = reinterpret_cast< CSocketManager * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocketManager_DelSockByAddr" "', argument " "2"" of type '" "Csock *""'"); 
  }
  arg2 = reinterpret_cast< Csock * >(argp2);
  (arg1)->DelSockByAddr(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocketManager_DelSock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocketManager *arg1 = (CSocketManager *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSocketManager_DelSock",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_DelSock" "', argument " "1"" of type '" "CSocketManager *""'"); 
  }
  arg1 = reinterpret_cast< CSocketManager * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSocketManager_DelSock" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  (arg1)->DelSock(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocketManager_SwapSockByIdx(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocketManager *arg1 = (CSocketManager *) 0 ;
  Csock *arg2 = (Csock *) 0 ;
  u_long arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CSocketManager_SwapSockByIdx",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_SwapSockByIdx" "', argument " "1"" of type '" "CSocketManager *""'"); 
  }
  arg1 = reinterpret_cast< CSocketManager * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocketManager_SwapSockByIdx" "', argument " "2"" of type '" "Csock *""'"); 
  }
  arg2 = reinterpret_cast< Csock * >(argp2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_u_long,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSocketManager_SwapSockByIdx" "', argument " "3"" of type '" "u_long""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_SwapSockByIdx" "', argument " "3"" of type '" "u_long""'");
    } else {
      u_long * temp = reinterpret_cast< u_long * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = (bool)(arg1)->SwapSockByIdx(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocketManager_SwapSockByAddr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocketManager *arg1 = (CSocketManager *) 0 ;
  Csock *arg2 = (Csock *) 0 ;
  Csock *arg3 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CSocketManager_SwapSockByAddr",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_SwapSockByAddr" "', argument " "1"" of type '" "CSocketManager *""'"); 
  }
  arg1 = reinterpret_cast< CSocketManager * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocketManager_SwapSockByAddr" "', argument " "2"" of type '" "Csock *""'"); 
  }
  arg2 = reinterpret_cast< Csock * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSocketManager_SwapSockByAddr" "', argument " "3"" of type '" "Csock *""'"); 
  }
  arg3 = reinterpret_cast< Csock * >(argp3);
  result = (bool)(arg1)->SwapSockByAddr(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocketManager_GetBytesRead(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocketManager *arg1 = (CSocketManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned long long result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSocketManager_GetBytesRead",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_GetBytesRead" "', argument " "1"" of type '" "CSocketManager const *""'"); 
  }
  arg1 = reinterpret_cast< CSocketManager * >(argp1);
  result = (unsigned long long)((CSocketManager const *)arg1)->GetBytesRead();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocketManager_GetBytesWritten(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocketManager *arg1 = (CSocketManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned long long result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSocketManager_GetBytesWritten",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_GetBytesWritten" "', argument " "1"" of type '" "CSocketManager const *""'"); 
  }
  arg1 = reinterpret_cast< CSocketManager * >(argp1);
  result = (unsigned long long)((CSocketManager const *)arg1)->GetBytesWritten();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocketManager_FDSetCheck(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocketManager *arg1 = (CSocketManager *) 0 ;
  int arg2 ;
  std::map< int,short,std::less< int >,std::allocator< std::pair< int const,short > > > *arg3 = 0 ;
  CSocketManager::ECheckType arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CSocketManager_FDSetCheck",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_FDSetCheck" "', argument " "1"" of type '" "CSocketManager *""'"); 
  }
  arg1 = reinterpret_cast< CSocketManager * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSocketManager_FDSetCheck" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_std__mapT_int_short_std__lessT_int_t_std__allocatorT_std__pairT_int_const_short_t_t_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSocketManager_FDSetCheck" "', argument " "3"" of type '" "std::map< int,short,std::less< int >,std::allocator< std::pair< int const,short > > > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_FDSetCheck" "', argument " "3"" of type '" "std::map< int,short,std::less< int >,std::allocator< std::pair< int const,short > > > &""'"); 
  }
  arg3 = reinterpret_cast< std::map< int,short,std::less< int >,std::allocator< std::pair< int const,short > > > * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSocketManager_FDSetCheck" "', argument " "4"" of type '" "CSocketManager::ECheckType""'");
  } 
  arg4 = static_cast< CSocketManager::ECheckType >(val4);
  (arg1)->FDSetCheck(arg2,*arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocketManager_FDHasCheck(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocketManager *arg1 = (CSocketManager *) 0 ;
  int arg2 ;
  std::map< int,short,std::less< int >,std::allocator< std::pair< int const,short > > > *arg3 = 0 ;
  CSocketManager::ECheckType arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CSocketManager_FDHasCheck",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_FDHasCheck" "', argument " "1"" of type '" "CSocketManager *""'"); 
  }
  arg1 = reinterpret_cast< CSocketManager * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSocketManager_FDHasCheck" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_std__mapT_int_short_std__lessT_int_t_std__allocatorT_std__pairT_int_const_short_t_t_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSocketManager_FDHasCheck" "', argument " "3"" of type '" "std::map< int,short,std::less< int >,std::allocator< std::pair< int const,short > > > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_FDHasCheck" "', argument " "3"" of type '" "std::map< int,short,std::less< int >,std::allocator< std::pair< int const,short > > > &""'"); 
  }
  arg3 = reinterpret_cast< std::map< int,short,std::less< int >,std::allocator< std::pair< int const,short > > > * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSocketManager_FDHasCheck" "', argument " "4"" of type '" "CSocketManager::ECheckType""'");
  } 
  arg4 = static_cast< CSocketManager::ECheckType >(val4);
  result = (bool)(arg1)->FDHasCheck(arg2,*arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CSocketManager_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CSocketManager, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ZNCSocketManager(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TSocketManager< CZNCSock > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ZNCSocketManager")) SWIG_fail;
  result = (TSocketManager< CZNCSock > *)new TSocketManager< CZNCSock >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TSocketManagerT_CZNCSock_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ZNCSocketManager(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TSocketManager< CZNCSock > *arg1 = (TSocketManager< CZNCSock > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ZNCSocketManager",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TSocketManagerT_CZNCSock_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ZNCSocketManager" "', argument " "1"" of type '" "TSocketManager< CZNCSock > *""'"); 
  }
  arg1 = reinterpret_cast< TSocketManager< CZNCSock > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ZNCSocketManager_GetSockObj__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TSocketManager< CZNCSock > *arg1 = (TSocketManager< CZNCSock > *) 0 ;
  CString *arg2 = 0 ;
  unsigned short arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned short val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CZNCSock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ZNCSocketManager_GetSockObj",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TSocketManagerT_CZNCSock_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ZNCSocketManager_GetSockObj" "', argument " "1"" of type '" "TSocketManager< CZNCSock > *""'"); 
  }
  arg1 = reinterpret_cast< TSocketManager< CZNCSock > * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ZNCSocketManager_GetSockObj" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ZNCSocketManager_GetSockObj" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_short(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ZNCSocketManager_GetSockObj" "', argument " "3"" of type '" "unsigned short""'");
  } 
  arg3 = static_cast< unsigned short >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ZNCSocketManager_GetSockObj" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = (CZNCSock *)(arg1)->GetSockObj((CString const &)*arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CZNCSock, 0 |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_ZNCSocketManager_GetSockObj__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TSocketManager< CZNCSock > *arg1 = (TSocketManager< CZNCSock > *) 0 ;
  CString *arg2 = 0 ;
  unsigned short arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned short val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CZNCSock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ZNCSocketManager_GetSockObj",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TSocketManagerT_CZNCSock_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ZNCSocketManager_GetSockObj" "', argument " "1"" of type '" "TSocketManager< CZNCSock > *""'"); 
  }
  arg1 = reinterpret_cast< TSocketManager< CZNCSock > * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ZNCSocketManager_GetSockObj" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ZNCSocketManager_GetSockObj" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_short(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ZNCSocketManager_GetSockObj" "', argument " "3"" of type '" "unsigned short""'");
  } 
  arg3 = static_cast< unsigned short >(val3);
  result = (CZNCSock *)(arg1)->GetSockObj((CString const &)*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CZNCSock, 0 |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_ZNCSocketManager_GetSockObj(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_TSocketManagerT_CZNCSock_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_short(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ZNCSocketManager_GetSockObj__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_TSocketManagerT_CZNCSock_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_short(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_ZNCSocketManager_GetSockObj__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ZNCSocketManager_GetSockObj'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    TSocketManager< CZNCSock >::GetSockObj(CString const &,unsigned short,int)\n"
    "    TSocketManager< CZNCSock >::GetSockObj(CString const &,unsigned short)\n");
  return 0;
}


SWIGINTERN PyObject *ZNCSocketManager_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_TSocketManagerT_CZNCSock_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CZNCSock__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  CZNCSock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_CZNCSock",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CZNCSock" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (CZNCSock *)new CZNCSock(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CZNCSock, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CZNCSock__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNCSock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CZNCSock")) SWIG_fail;
  result = (CZNCSock *)new CZNCSock();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CZNCSock, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CZNCSock__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  unsigned short arg2 ;
  int arg3 ;
  int res1 = SWIG_OLDOBJ ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CZNCSock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_CZNCSock",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CZNCSock" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CZNCSock" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CZNCSock" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CZNCSock" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (CZNCSock *)new CZNCSock((CString const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CZNCSock, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CZNCSock__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  unsigned short arg2 ;
  int res1 = SWIG_OLDOBJ ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CZNCSock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_CZNCSock",&obj0,&obj1)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CZNCSock" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CZNCSock" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CZNCSock" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  result = (CZNCSock *)new CZNCSock((CString const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CZNCSock, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CZNCSock(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_CZNCSock__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_CZNCSock__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_CZNCSock__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_CZNCSock__SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_CZNCSock'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CZNCSock::CZNCSock(int)\n"
    "    CZNCSock::CZNCSock()\n"
    "    CZNCSock::CZNCSock(CString const &,unsigned short,int)\n"
    "    CZNCSock::CZNCSock(CString const &,unsigned short)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_CZNCSock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNCSock *arg1 = (CZNCSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CZNCSock",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNCSock, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CZNCSock" "', argument " "1"" of type '" "CZNCSock *""'"); 
  }
  arg1 = reinterpret_cast< CZNCSock * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNCSock_ConvertAddress(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNCSock *arg1 = (CZNCSock *) 0 ;
  sockaddr_storage *arg2 = (sockaddr_storage *) 0 ;
  socklen_t arg3 ;
  CString *arg4 = 0 ;
  unsigned short *arg5 = (unsigned short *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CZNCSock_ConvertAddress",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNCSock_ConvertAddress" "', argument " "1"" of type '" "CZNCSock *""'"); 
  }
  arg1 = reinterpret_cast< CZNCSock * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_sockaddr_storage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNCSock_ConvertAddress" "', argument " "2"" of type '" "sockaddr_storage const *""'"); 
  }
  arg2 = reinterpret_cast< sockaddr_storage * >(argp2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_socklen_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CZNCSock_ConvertAddress" "', argument " "3"" of type '" "socklen_t""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNCSock_ConvertAddress" "', argument " "3"" of type '" "socklen_t""'");
    } else {
      socklen_t * temp = reinterpret_cast< socklen_t * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj3, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg4 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 4 sIP");
    }
  }
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_unsigned_short, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CZNCSock_ConvertAddress" "', argument " "5"" of type '" "unsigned short *""'"); 
  }
  arg5 = reinterpret_cast< unsigned short * >(argp5);
  result = (int)(arg1)->ConvertAddress((sockaddr_storage const *)arg2,arg3,*arg4,arg5);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CZNCSock_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CZNCSock, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CSockManager(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockManager *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CSockManager")) SWIG_fail;
  result = (CSockManager *)new CSockManager();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSockManager, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CSockManager(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockManager *arg1 = (CSockManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CSockManager",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockManager, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CSockManager" "', argument " "1"" of type '" "CSockManager *""'"); 
  }
  arg1 = reinterpret_cast< CSockManager * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockManager_ListenHost__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockManager *arg1 = (CSockManager *) 0 ;
  unsigned short arg2 ;
  CString *arg3 = 0 ;
  CString *arg4 = 0 ;
  bool arg5 ;
  int arg6 ;
  CZNCSock *arg7 = (CZNCSock *) 0 ;
  unsigned int arg8 ;
  EAddrType arg9 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  bool val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  unsigned int val8 ;
  int ecode8 = 0 ;
  int val9 ;
  int ecode9 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOO:CSockManager_ListenHost",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenHost" "', argument " "1"" of type '" "CSockManager *""'"); 
  }
  arg1 = reinterpret_cast< CSockManager * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSockManager_ListenHost" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockManager_ListenHost" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenHost" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CSockManager_ListenHost" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenHost" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSockManager_ListenHost" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CSockManager_ListenHost" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CZNCSock, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CSockManager_ListenHost" "', argument " "7"" of type '" "CZNCSock *""'"); 
  }
  arg7 = reinterpret_cast< CZNCSock * >(argp7);
  ecode8 = SWIG_AsVal_unsigned_SS_int(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "CSockManager_ListenHost" "', argument " "8"" of type '" "unsigned int""'");
  } 
  arg8 = static_cast< unsigned int >(val8);
  ecode9 = SWIG_AsVal_int(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "CSockManager_ListenHost" "', argument " "9"" of type '" "EAddrType""'");
  } 
  arg9 = static_cast< EAddrType >(val9);
  result = (bool)(arg1)->ListenHost(arg2,(CString const &)*arg3,(CString const &)*arg4,arg5,arg6,arg7,arg8,arg9);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockManager_ListenHost__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockManager *arg1 = (CSockManager *) 0 ;
  unsigned short arg2 ;
  CString *arg3 = 0 ;
  CString *arg4 = 0 ;
  bool arg5 ;
  int arg6 ;
  CZNCSock *arg7 = (CZNCSock *) 0 ;
  unsigned int arg8 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  bool val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  unsigned int val8 ;
  int ecode8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:CSockManager_ListenHost",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenHost" "', argument " "1"" of type '" "CSockManager *""'"); 
  }
  arg1 = reinterpret_cast< CSockManager * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSockManager_ListenHost" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockManager_ListenHost" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenHost" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CSockManager_ListenHost" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenHost" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSockManager_ListenHost" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CSockManager_ListenHost" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CZNCSock, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CSockManager_ListenHost" "', argument " "7"" of type '" "CZNCSock *""'"); 
  }
  arg7 = reinterpret_cast< CZNCSock * >(argp7);
  ecode8 = SWIG_AsVal_unsigned_SS_int(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "CSockManager_ListenHost" "', argument " "8"" of type '" "unsigned int""'");
  } 
  arg8 = static_cast< unsigned int >(val8);
  result = (bool)(arg1)->ListenHost(arg2,(CString const &)*arg3,(CString const &)*arg4,arg5,arg6,arg7,arg8);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockManager_ListenHost__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockManager *arg1 = (CSockManager *) 0 ;
  unsigned short arg2 ;
  CString *arg3 = 0 ;
  CString *arg4 = 0 ;
  bool arg5 ;
  int arg6 ;
  CZNCSock *arg7 = (CZNCSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  bool val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:CSockManager_ListenHost",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenHost" "', argument " "1"" of type '" "CSockManager *""'"); 
  }
  arg1 = reinterpret_cast< CSockManager * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSockManager_ListenHost" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockManager_ListenHost" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenHost" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CSockManager_ListenHost" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenHost" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSockManager_ListenHost" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CSockManager_ListenHost" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CZNCSock, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CSockManager_ListenHost" "', argument " "7"" of type '" "CZNCSock *""'"); 
  }
  arg7 = reinterpret_cast< CZNCSock * >(argp7);
  result = (bool)(arg1)->ListenHost(arg2,(CString const &)*arg3,(CString const &)*arg4,arg5,arg6,arg7);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockManager_ListenHost__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockManager *arg1 = (CSockManager *) 0 ;
  unsigned short arg2 ;
  CString *arg3 = 0 ;
  CString *arg4 = 0 ;
  bool arg5 ;
  int arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  bool val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:CSockManager_ListenHost",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenHost" "', argument " "1"" of type '" "CSockManager *""'"); 
  }
  arg1 = reinterpret_cast< CSockManager * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSockManager_ListenHost" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockManager_ListenHost" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenHost" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CSockManager_ListenHost" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenHost" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSockManager_ListenHost" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CSockManager_ListenHost" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  result = (bool)(arg1)->ListenHost(arg2,(CString const &)*arg3,(CString const &)*arg4,arg5,arg6);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockManager_ListenHost__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockManager *arg1 = (CSockManager *) 0 ;
  unsigned short arg2 ;
  CString *arg3 = 0 ;
  CString *arg4 = 0 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CSockManager_ListenHost",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenHost" "', argument " "1"" of type '" "CSockManager *""'"); 
  }
  arg1 = reinterpret_cast< CSockManager * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSockManager_ListenHost" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockManager_ListenHost" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenHost" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CSockManager_ListenHost" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenHost" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSockManager_ListenHost" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  result = (bool)(arg1)->ListenHost(arg2,(CString const &)*arg3,(CString const &)*arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockManager_ListenHost__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockManager *arg1 = (CSockManager *) 0 ;
  unsigned short arg2 ;
  CString *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CSockManager_ListenHost",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenHost" "', argument " "1"" of type '" "CSockManager *""'"); 
  }
  arg1 = reinterpret_cast< CSockManager * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSockManager_ListenHost" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockManager_ListenHost" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenHost" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CSockManager_ListenHost" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenHost" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  result = (bool)(arg1)->ListenHost(arg2,(CString const &)*arg3,(CString const &)*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockManager_ListenHost(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[10];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 9) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSockManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (CString**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CSockManager_ListenHost__SWIG_5(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSockManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (CString**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_CSockManager_ListenHost__SWIG_4(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSockManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (CString**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_int(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_CSockManager_ListenHost__SWIG_3(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSockManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (CString**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_int(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_CZNCSock, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_CSockManager_ListenHost__SWIG_2(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSockManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (CString**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_int(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_CZNCSock, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  {
                    int res = SWIG_AsVal_unsigned_SS_int(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    return _wrap_CSockManager_ListenHost__SWIG_1(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSockManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (CString**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_int(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_CZNCSock, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  {
                    int res = SWIG_AsVal_unsigned_SS_int(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_int(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      return _wrap_CSockManager_ListenHost__SWIG_0(self, args);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CSockManager_ListenHost'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CSockManager::ListenHost(unsigned short,CString const &,CString const &,bool,int,CZNCSock *,unsigned int,EAddrType)\n"
    "    CSockManager::ListenHost(unsigned short,CString const &,CString const &,bool,int,CZNCSock *,unsigned int)\n"
    "    CSockManager::ListenHost(unsigned short,CString const &,CString const &,bool,int,CZNCSock *)\n"
    "    CSockManager::ListenHost(unsigned short,CString const &,CString const &,bool,int)\n"
    "    CSockManager::ListenHost(unsigned short,CString const &,CString const &,bool)\n"
    "    CSockManager::ListenHost(unsigned short,CString const &,CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CSockManager_ListenAll__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockManager *arg1 = (CSockManager *) 0 ;
  unsigned short arg2 ;
  CString *arg3 = 0 ;
  bool arg4 ;
  int arg5 ;
  CZNCSock *arg6 = (CZNCSock *) 0 ;
  unsigned int arg7 ;
  EAddrType arg8 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  bool val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  unsigned int val7 ;
  int ecode7 = 0 ;
  int val8 ;
  int ecode8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:CSockManager_ListenAll",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenAll" "', argument " "1"" of type '" "CSockManager *""'"); 
  }
  arg1 = reinterpret_cast< CSockManager * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSockManager_ListenAll" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockManager_ListenAll" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenAll" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSockManager_ListenAll" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSockManager_ListenAll" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CZNCSock, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CSockManager_ListenAll" "', argument " "6"" of type '" "CZNCSock *""'"); 
  }
  arg6 = reinterpret_cast< CZNCSock * >(argp6);
  ecode7 = SWIG_AsVal_unsigned_SS_int(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "CSockManager_ListenAll" "', argument " "7"" of type '" "unsigned int""'");
  } 
  arg7 = static_cast< unsigned int >(val7);
  ecode8 = SWIG_AsVal_int(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "CSockManager_ListenAll" "', argument " "8"" of type '" "EAddrType""'");
  } 
  arg8 = static_cast< EAddrType >(val8);
  result = (bool)(arg1)->ListenAll(arg2,(CString const &)*arg3,arg4,arg5,arg6,arg7,arg8);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockManager_ListenAll__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockManager *arg1 = (CSockManager *) 0 ;
  unsigned short arg2 ;
  CString *arg3 = 0 ;
  bool arg4 ;
  int arg5 ;
  CZNCSock *arg6 = (CZNCSock *) 0 ;
  unsigned int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  bool val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  unsigned int val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:CSockManager_ListenAll",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenAll" "', argument " "1"" of type '" "CSockManager *""'"); 
  }
  arg1 = reinterpret_cast< CSockManager * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSockManager_ListenAll" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockManager_ListenAll" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenAll" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSockManager_ListenAll" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSockManager_ListenAll" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CZNCSock, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CSockManager_ListenAll" "', argument " "6"" of type '" "CZNCSock *""'"); 
  }
  arg6 = reinterpret_cast< CZNCSock * >(argp6);
  ecode7 = SWIG_AsVal_unsigned_SS_int(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "CSockManager_ListenAll" "', argument " "7"" of type '" "unsigned int""'");
  } 
  arg7 = static_cast< unsigned int >(val7);
  result = (bool)(arg1)->ListenAll(arg2,(CString const &)*arg3,arg4,arg5,arg6,arg7);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockManager_ListenAll__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockManager *arg1 = (CSockManager *) 0 ;
  unsigned short arg2 ;
  CString *arg3 = 0 ;
  bool arg4 ;
  int arg5 ;
  CZNCSock *arg6 = (CZNCSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  bool val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:CSockManager_ListenAll",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenAll" "', argument " "1"" of type '" "CSockManager *""'"); 
  }
  arg1 = reinterpret_cast< CSockManager * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSockManager_ListenAll" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockManager_ListenAll" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenAll" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSockManager_ListenAll" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSockManager_ListenAll" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CZNCSock, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CSockManager_ListenAll" "', argument " "6"" of type '" "CZNCSock *""'"); 
  }
  arg6 = reinterpret_cast< CZNCSock * >(argp6);
  result = (bool)(arg1)->ListenAll(arg2,(CString const &)*arg3,arg4,arg5,arg6);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockManager_ListenAll__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockManager *arg1 = (CSockManager *) 0 ;
  unsigned short arg2 ;
  CString *arg3 = 0 ;
  bool arg4 ;
  int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  bool val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CSockManager_ListenAll",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenAll" "', argument " "1"" of type '" "CSockManager *""'"); 
  }
  arg1 = reinterpret_cast< CSockManager * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSockManager_ListenAll" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockManager_ListenAll" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenAll" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSockManager_ListenAll" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSockManager_ListenAll" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  result = (bool)(arg1)->ListenAll(arg2,(CString const &)*arg3,arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockManager_ListenAll__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockManager *arg1 = (CSockManager *) 0 ;
  unsigned short arg2 ;
  CString *arg3 = 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CSockManager_ListenAll",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenAll" "', argument " "1"" of type '" "CSockManager *""'"); 
  }
  arg1 = reinterpret_cast< CSockManager * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSockManager_ListenAll" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockManager_ListenAll" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenAll" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSockManager_ListenAll" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (bool)(arg1)->ListenAll(arg2,(CString const &)*arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockManager_ListenAll__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockManager *arg1 = (CSockManager *) 0 ;
  unsigned short arg2 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CSockManager_ListenAll",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenAll" "', argument " "1"" of type '" "CSockManager *""'"); 
  }
  arg1 = reinterpret_cast< CSockManager * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSockManager_ListenAll" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockManager_ListenAll" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenAll" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = (bool)(arg1)->ListenAll(arg2,(CString const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockManager_ListenAll(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[9];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 8) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSockManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CSockManager_ListenAll__SWIG_5(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSockManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_CSockManager_ListenAll__SWIG_4(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSockManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_CSockManager_ListenAll__SWIG_3(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSockManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CZNCSock, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_CSockManager_ListenAll__SWIG_2(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSockManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CZNCSock, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_unsigned_SS_int(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  return _wrap_CSockManager_ListenAll__SWIG_1(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSockManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CZNCSock, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_unsigned_SS_int(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_int(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    return _wrap_CSockManager_ListenAll__SWIG_0(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CSockManager_ListenAll'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CSockManager::ListenAll(unsigned short,CString const &,bool,int,CZNCSock *,unsigned int,EAddrType)\n"
    "    CSockManager::ListenAll(unsigned short,CString const &,bool,int,CZNCSock *,unsigned int)\n"
    "    CSockManager::ListenAll(unsigned short,CString const &,bool,int,CZNCSock *)\n"
    "    CSockManager::ListenAll(unsigned short,CString const &,bool,int)\n"
    "    CSockManager::ListenAll(unsigned short,CString const &,bool)\n"
    "    CSockManager::ListenAll(unsigned short,CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CSockManager_ListenRand__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockManager *arg1 = (CSockManager *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  bool arg4 ;
  int arg5 ;
  CZNCSock *arg6 = (CZNCSock *) 0 ;
  unsigned int arg7 ;
  EAddrType arg8 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  bool val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  unsigned int val7 ;
  int ecode7 = 0 ;
  int val8 ;
  int ecode8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  unsigned short result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:CSockManager_ListenRand",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenRand" "', argument " "1"" of type '" "CSockManager *""'"); 
  }
  arg1 = reinterpret_cast< CSockManager * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockManager_ListenRand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenRand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockManager_ListenRand" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenRand" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSockManager_ListenRand" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSockManager_ListenRand" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CZNCSock, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CSockManager_ListenRand" "', argument " "6"" of type '" "CZNCSock *""'"); 
  }
  arg6 = reinterpret_cast< CZNCSock * >(argp6);
  ecode7 = SWIG_AsVal_unsigned_SS_int(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "CSockManager_ListenRand" "', argument " "7"" of type '" "unsigned int""'");
  } 
  arg7 = static_cast< unsigned int >(val7);
  ecode8 = SWIG_AsVal_int(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "CSockManager_ListenRand" "', argument " "8"" of type '" "EAddrType""'");
  } 
  arg8 = static_cast< EAddrType >(val8);
  result = (unsigned short)(arg1)->ListenRand((CString const &)*arg2,(CString const &)*arg3,arg4,arg5,arg6,arg7,arg8);
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockManager_ListenRand__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockManager *arg1 = (CSockManager *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  bool arg4 ;
  int arg5 ;
  CZNCSock *arg6 = (CZNCSock *) 0 ;
  unsigned int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  bool val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  unsigned int val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  unsigned short result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:CSockManager_ListenRand",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenRand" "', argument " "1"" of type '" "CSockManager *""'"); 
  }
  arg1 = reinterpret_cast< CSockManager * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockManager_ListenRand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenRand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockManager_ListenRand" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenRand" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSockManager_ListenRand" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSockManager_ListenRand" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CZNCSock, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CSockManager_ListenRand" "', argument " "6"" of type '" "CZNCSock *""'"); 
  }
  arg6 = reinterpret_cast< CZNCSock * >(argp6);
  ecode7 = SWIG_AsVal_unsigned_SS_int(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "CSockManager_ListenRand" "', argument " "7"" of type '" "unsigned int""'");
  } 
  arg7 = static_cast< unsigned int >(val7);
  result = (unsigned short)(arg1)->ListenRand((CString const &)*arg2,(CString const &)*arg3,arg4,arg5,arg6,arg7);
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockManager_ListenRand__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockManager *arg1 = (CSockManager *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  bool arg4 ;
  int arg5 ;
  CZNCSock *arg6 = (CZNCSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  bool val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  unsigned short result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:CSockManager_ListenRand",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenRand" "', argument " "1"" of type '" "CSockManager *""'"); 
  }
  arg1 = reinterpret_cast< CSockManager * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockManager_ListenRand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenRand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockManager_ListenRand" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenRand" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSockManager_ListenRand" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSockManager_ListenRand" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CZNCSock, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CSockManager_ListenRand" "', argument " "6"" of type '" "CZNCSock *""'"); 
  }
  arg6 = reinterpret_cast< CZNCSock * >(argp6);
  result = (unsigned short)(arg1)->ListenRand((CString const &)*arg2,(CString const &)*arg3,arg4,arg5,arg6);
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockManager_ListenRand__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockManager *arg1 = (CSockManager *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  bool arg4 ;
  int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  bool val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  unsigned short result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CSockManager_ListenRand",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenRand" "', argument " "1"" of type '" "CSockManager *""'"); 
  }
  arg1 = reinterpret_cast< CSockManager * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockManager_ListenRand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenRand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockManager_ListenRand" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenRand" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSockManager_ListenRand" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSockManager_ListenRand" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  result = (unsigned short)(arg1)->ListenRand((CString const &)*arg2,(CString const &)*arg3,arg4,arg5);
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockManager_ListenRand__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockManager *arg1 = (CSockManager *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  unsigned short result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CSockManager_ListenRand",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenRand" "', argument " "1"" of type '" "CSockManager *""'"); 
  }
  arg1 = reinterpret_cast< CSockManager * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockManager_ListenRand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenRand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockManager_ListenRand" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenRand" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSockManager_ListenRand" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (unsigned short)(arg1)->ListenRand((CString const &)*arg2,(CString const &)*arg3,arg4);
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockManager_ListenRand__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockManager *arg1 = (CSockManager *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  unsigned short result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CSockManager_ListenRand",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenRand" "', argument " "1"" of type '" "CSockManager *""'"); 
  }
  arg1 = reinterpret_cast< CSockManager * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockManager_ListenRand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenRand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockManager_ListenRand" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenRand" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = (unsigned short)(arg1)->ListenRand((CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockManager_ListenRand(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[9];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 8) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSockManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CSockManager_ListenRand__SWIG_5(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSockManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_CSockManager_ListenRand__SWIG_4(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSockManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_CSockManager_ListenRand__SWIG_3(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSockManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CZNCSock, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_CSockManager_ListenRand__SWIG_2(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSockManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CZNCSock, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_unsigned_SS_int(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  return _wrap_CSockManager_ListenRand__SWIG_1(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSockManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_CZNCSock, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_unsigned_SS_int(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_int(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    return _wrap_CSockManager_ListenRand__SWIG_0(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CSockManager_ListenRand'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CSockManager::ListenRand(CString const &,CString const &,bool,int,CZNCSock *,unsigned int,EAddrType)\n"
    "    CSockManager::ListenRand(CString const &,CString const &,bool,int,CZNCSock *,unsigned int)\n"
    "    CSockManager::ListenRand(CString const &,CString const &,bool,int,CZNCSock *)\n"
    "    CSockManager::ListenRand(CString const &,CString const &,bool,int)\n"
    "    CSockManager::ListenRand(CString const &,CString const &,bool)\n"
    "    CSockManager::ListenRand(CString const &,CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CSockManager_ListenAllRand__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockManager *arg1 = (CSockManager *) 0 ;
  CString *arg2 = 0 ;
  bool arg3 ;
  int arg4 ;
  CZNCSock *arg5 = (CZNCSock *) 0 ;
  unsigned int arg6 ;
  EAddrType arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  unsigned int val6 ;
  int ecode6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  unsigned short result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:CSockManager_ListenAllRand",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenAllRand" "', argument " "1"" of type '" "CSockManager *""'"); 
  }
  arg1 = reinterpret_cast< CSockManager * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockManager_ListenAllRand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenAllRand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSockManager_ListenAllRand" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSockManager_ListenAllRand" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CZNCSock, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CSockManager_ListenAllRand" "', argument " "5"" of type '" "CZNCSock *""'"); 
  }
  arg5 = reinterpret_cast< CZNCSock * >(argp5);
  ecode6 = SWIG_AsVal_unsigned_SS_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CSockManager_ListenAllRand" "', argument " "6"" of type '" "unsigned int""'");
  } 
  arg6 = static_cast< unsigned int >(val6);
  ecode7 = SWIG_AsVal_int(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "CSockManager_ListenAllRand" "', argument " "7"" of type '" "EAddrType""'");
  } 
  arg7 = static_cast< EAddrType >(val7);
  result = (unsigned short)(arg1)->ListenAllRand((CString const &)*arg2,arg3,arg4,arg5,arg6,arg7);
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockManager_ListenAllRand__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockManager *arg1 = (CSockManager *) 0 ;
  CString *arg2 = 0 ;
  bool arg3 ;
  int arg4 ;
  CZNCSock *arg5 = (CZNCSock *) 0 ;
  unsigned int arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  unsigned int val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  unsigned short result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:CSockManager_ListenAllRand",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenAllRand" "', argument " "1"" of type '" "CSockManager *""'"); 
  }
  arg1 = reinterpret_cast< CSockManager * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockManager_ListenAllRand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenAllRand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSockManager_ListenAllRand" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSockManager_ListenAllRand" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CZNCSock, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CSockManager_ListenAllRand" "', argument " "5"" of type '" "CZNCSock *""'"); 
  }
  arg5 = reinterpret_cast< CZNCSock * >(argp5);
  ecode6 = SWIG_AsVal_unsigned_SS_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CSockManager_ListenAllRand" "', argument " "6"" of type '" "unsigned int""'");
  } 
  arg6 = static_cast< unsigned int >(val6);
  result = (unsigned short)(arg1)->ListenAllRand((CString const &)*arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockManager_ListenAllRand__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockManager *arg1 = (CSockManager *) 0 ;
  CString *arg2 = 0 ;
  bool arg3 ;
  int arg4 ;
  CZNCSock *arg5 = (CZNCSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  unsigned short result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CSockManager_ListenAllRand",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenAllRand" "', argument " "1"" of type '" "CSockManager *""'"); 
  }
  arg1 = reinterpret_cast< CSockManager * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockManager_ListenAllRand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenAllRand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSockManager_ListenAllRand" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSockManager_ListenAllRand" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CZNCSock, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CSockManager_ListenAllRand" "', argument " "5"" of type '" "CZNCSock *""'"); 
  }
  arg5 = reinterpret_cast< CZNCSock * >(argp5);
  result = (unsigned short)(arg1)->ListenAllRand((CString const &)*arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockManager_ListenAllRand__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockManager *arg1 = (CSockManager *) 0 ;
  CString *arg2 = 0 ;
  bool arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  unsigned short result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CSockManager_ListenAllRand",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenAllRand" "', argument " "1"" of type '" "CSockManager *""'"); 
  }
  arg1 = reinterpret_cast< CSockManager * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockManager_ListenAllRand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenAllRand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSockManager_ListenAllRand" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSockManager_ListenAllRand" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = (unsigned short)(arg1)->ListenAllRand((CString const &)*arg2,arg3,arg4);
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockManager_ListenAllRand__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockManager *arg1 = (CSockManager *) 0 ;
  CString *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  unsigned short result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CSockManager_ListenAllRand",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenAllRand" "', argument " "1"" of type '" "CSockManager *""'"); 
  }
  arg1 = reinterpret_cast< CSockManager * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockManager_ListenAllRand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenAllRand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSockManager_ListenAllRand" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (unsigned short)(arg1)->ListenAllRand((CString const &)*arg2,arg3);
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockManager_ListenAllRand__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockManager *arg1 = (CSockManager *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  unsigned short result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSockManager_ListenAllRand",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenAllRand" "', argument " "1"" of type '" "CSockManager *""'"); 
  }
  arg1 = reinterpret_cast< CSockManager * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockManager_ListenAllRand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenAllRand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (unsigned short)(arg1)->ListenAllRand((CString const &)*arg2);
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockManager_ListenAllRand(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[8];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 7) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSockManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CSockManager_ListenAllRand__SWIG_5(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSockManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CSockManager_ListenAllRand__SWIG_4(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSockManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_CSockManager_ListenAllRand__SWIG_3(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSockManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CZNCSock, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_CSockManager_ListenAllRand__SWIG_2(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSockManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CZNCSock, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              {
                int res = SWIG_AsVal_unsigned_SS_int(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_CSockManager_ListenAllRand__SWIG_1(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSockManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CZNCSock, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              {
                int res = SWIG_AsVal_unsigned_SS_int(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_int(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  return _wrap_CSockManager_ListenAllRand__SWIG_0(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CSockManager_ListenAllRand'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CSockManager::ListenAllRand(CString const &,bool,int,CZNCSock *,unsigned int,EAddrType)\n"
    "    CSockManager::ListenAllRand(CString const &,bool,int,CZNCSock *,unsigned int)\n"
    "    CSockManager::ListenAllRand(CString const &,bool,int,CZNCSock *)\n"
    "    CSockManager::ListenAllRand(CString const &,bool,int)\n"
    "    CSockManager::ListenAllRand(CString const &,bool)\n"
    "    CSockManager::ListenAllRand(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CSockManager_Connect__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockManager *arg1 = (CSockManager *) 0 ;
  CString *arg2 = 0 ;
  unsigned short arg3 ;
  CString *arg4 = 0 ;
  int arg5 ;
  bool arg6 ;
  CString *arg7 = 0 ;
  CZNCSock *arg8 = (CZNCSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned short val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  int val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  int res7 = SWIG_OLDOBJ ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:CSockManager_Connect",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_Connect" "', argument " "1"" of type '" "CSockManager *""'"); 
  }
  arg1 = reinterpret_cast< CSockManager * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockManager_Connect" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_Connect" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_short(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSockManager_Connect" "', argument " "3"" of type '" "unsigned short""'");
  } 
  arg3 = static_cast< unsigned short >(val3);
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CSockManager_Connect" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_Connect" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSockManager_Connect" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CSockManager_Connect" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  {
    CString *ptr = (CString *)0;
    res7 = SWIG_AsPtr_std_string(obj6, &ptr);
    if (!SWIG_IsOK(res7)) {
      SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CSockManager_Connect" "', argument " "7"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_Connect" "', argument " "7"" of type '" "CString const &""'"); 
    }
    arg7 = ptr;
  }
  res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_CZNCSock, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "CSockManager_Connect" "', argument " "8"" of type '" "CZNCSock *""'"); 
  }
  arg8 = reinterpret_cast< CZNCSock * >(argp8);
  (arg1)->Connect((CString const &)*arg2,arg3,(CString const &)*arg4,arg5,arg6,(CString const &)*arg7,arg8);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  if (SWIG_IsNewObj(res7)) free((char*)arg7);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  if (SWIG_IsNewObj(res7)) free((char*)arg7);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockManager_Connect__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockManager *arg1 = (CSockManager *) 0 ;
  CString *arg2 = 0 ;
  unsigned short arg3 ;
  CString *arg4 = 0 ;
  int arg5 ;
  bool arg6 ;
  CString *arg7 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned short val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  int val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  int res7 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:CSockManager_Connect",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_Connect" "', argument " "1"" of type '" "CSockManager *""'"); 
  }
  arg1 = reinterpret_cast< CSockManager * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockManager_Connect" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_Connect" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_short(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSockManager_Connect" "', argument " "3"" of type '" "unsigned short""'");
  } 
  arg3 = static_cast< unsigned short >(val3);
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CSockManager_Connect" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_Connect" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSockManager_Connect" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CSockManager_Connect" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  {
    CString *ptr = (CString *)0;
    res7 = SWIG_AsPtr_std_string(obj6, &ptr);
    if (!SWIG_IsOK(res7)) {
      SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CSockManager_Connect" "', argument " "7"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_Connect" "', argument " "7"" of type '" "CString const &""'"); 
    }
    arg7 = ptr;
  }
  (arg1)->Connect((CString const &)*arg2,arg3,(CString const &)*arg4,arg5,arg6,(CString const &)*arg7);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  if (SWIG_IsNewObj(res7)) free((char*)arg7);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  if (SWIG_IsNewObj(res7)) free((char*)arg7);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockManager_Connect__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockManager *arg1 = (CSockManager *) 0 ;
  CString *arg2 = 0 ;
  unsigned short arg3 ;
  CString *arg4 = 0 ;
  int arg5 ;
  bool arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned short val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  int val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:CSockManager_Connect",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_Connect" "', argument " "1"" of type '" "CSockManager *""'"); 
  }
  arg1 = reinterpret_cast< CSockManager * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockManager_Connect" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_Connect" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_short(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSockManager_Connect" "', argument " "3"" of type '" "unsigned short""'");
  } 
  arg3 = static_cast< unsigned short >(val3);
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CSockManager_Connect" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_Connect" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSockManager_Connect" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CSockManager_Connect" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  (arg1)->Connect((CString const &)*arg2,arg3,(CString const &)*arg4,arg5,arg6);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockManager_Connect__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockManager *arg1 = (CSockManager *) 0 ;
  CString *arg2 = 0 ;
  unsigned short arg3 ;
  CString *arg4 = 0 ;
  int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned short val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CSockManager_Connect",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_Connect" "', argument " "1"" of type '" "CSockManager *""'"); 
  }
  arg1 = reinterpret_cast< CSockManager * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockManager_Connect" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_Connect" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_short(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSockManager_Connect" "', argument " "3"" of type '" "unsigned short""'");
  } 
  arg3 = static_cast< unsigned short >(val3);
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CSockManager_Connect" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_Connect" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSockManager_Connect" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  (arg1)->Connect((CString const &)*arg2,arg3,(CString const &)*arg4,arg5);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockManager_Connect__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockManager *arg1 = (CSockManager *) 0 ;
  CString *arg2 = 0 ;
  unsigned short arg3 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned short val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CSockManager_Connect",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_Connect" "', argument " "1"" of type '" "CSockManager *""'"); 
  }
  arg1 = reinterpret_cast< CSockManager * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockManager_Connect" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_Connect" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_short(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSockManager_Connect" "', argument " "3"" of type '" "unsigned short""'");
  } 
  arg3 = static_cast< unsigned short >(val3);
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CSockManager_Connect" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_Connect" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  (arg1)->Connect((CString const &)*arg2,arg3,(CString const &)*arg4);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSockManager_Connect(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[9];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 8) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSockManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_short(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (CString**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CSockManager_Connect__SWIG_4(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSockManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_short(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (CString**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_CSockManager_Connect__SWIG_3(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSockManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_short(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (CString**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_CSockManager_Connect__SWIG_2(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSockManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_short(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (CString**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                int res = SWIG_AsPtr_std_string(argv[6], (CString**)(0));
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_CSockManager_Connect__SWIG_1(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSockManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_short(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (CString**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                int res = SWIG_AsPtr_std_string(argv[6], (CString**)(0));
                _v = SWIG_CheckState(res);
                if (_v) {
                  void *vptr = 0;
                  int res = SWIG_ConvertPtr(argv[7], &vptr, SWIGTYPE_p_CZNCSock, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_CSockManager_Connect__SWIG_0(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CSockManager_Connect'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CSockManager::Connect(CString const &,unsigned short,CString const &,int,bool,CString const &,CZNCSock *)\n"
    "    CSockManager::Connect(CString const &,unsigned short,CString const &,int,bool,CString const &)\n"
    "    CSockManager::Connect(CString const &,unsigned short,CString const &,int,bool)\n"
    "    CSockManager::Connect(CString const &,unsigned short,CString const &,int)\n"
    "    CSockManager::Connect(CString const &,unsigned short,CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CSockManager_GetAnonConnectionCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSockManager *arg1 = (CSockManager *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSockManager_GetAnonConnectionCount",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_GetAnonConnectionCount" "', argument " "1"" of type '" "CSockManager const *""'"); 
  }
  arg1 = reinterpret_cast< CSockManager * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockManager_GetAnonConnectionCount" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_GetAnonConnectionCount" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (unsigned int)((CSockManager const *)arg1)->GetAnonConnectionCount((CString const &)*arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *CSockManager_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CSockManager, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CSocket__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CSocket *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_CSocket",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CSocket" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  result = (CSocket *)new CSocket(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSocket, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CSocket__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  unsigned short arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned short val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CSocket *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_CSocket",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CSocket" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CSocket" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CSocket" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_short(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CSocket" "', argument " "3"" of type '" "unsigned short""'");
  } 
  arg3 = static_cast< unsigned short >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_CSocket" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = (CSocket *)new CSocket(arg1,(CString const &)*arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSocket, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CSocket__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  unsigned short arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned short val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CSocket *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_CSocket",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CSocket" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CSocket" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CSocket" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_short(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CSocket" "', argument " "3"" of type '" "unsigned short""'");
  } 
  arg3 = static_cast< unsigned short >(val3);
  result = (CSocket *)new CSocket(arg1,(CString const &)*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSocket, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CSocket(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CModule, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_CSocket__SWIG_0(self, args);
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CModule, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_short(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_CSocket__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CModule, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_short(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_CSocket__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_CSocket'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CSocket::CSocket(CModule *)\n"
    "    CSocket::CSocket(CModule *,CString const &,unsigned short,int)\n"
    "    CSocket::CSocket(CModule *,CString const &,unsigned short)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_CSocket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocket *arg1 = (CSocket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CSocket",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocket, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CSocket" "', argument " "1"" of type '" "CSocket *""'"); 
  }
  arg1 = reinterpret_cast< CSocket * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocket_Connect__SWIG_0_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocket *arg1 = (CSocket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSocket_Connect",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocket_Connect" "', argument " "1"" of type '" "CSocket *""'"); 
  }
  arg1 = reinterpret_cast< CSocket * >(argp1);
  result = (bool)(arg1)->Connect();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocket_Listen__SWIG_0_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocket *arg1 = (CSocket *) 0 ;
  unsigned short arg2 ;
  int arg3 ;
  CString *arg4 = 0 ;
  unsigned int arg5 ;
  bool arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:CSocket_Listen",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocket_Listen" "', argument " "1"" of type '" "CSocket *""'"); 
  }
  arg1 = reinterpret_cast< CSocket * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSocket_Listen" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSocket_Listen" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CSocket_Listen" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocket_Listen" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  ecode5 = SWIG_AsVal_unsigned_SS_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSocket_Listen" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CSocket_Listen" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  result = (bool)(arg1)->Listen(arg2,arg3,(CString const &)*arg4,arg5,arg6);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocket_Listen__SWIG_0_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocket *arg1 = (CSocket *) 0 ;
  unsigned short arg2 ;
  int arg3 ;
  CString *arg4 = 0 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CSocket_Listen",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocket_Listen" "', argument " "1"" of type '" "CSocket *""'"); 
  }
  arg1 = reinterpret_cast< CSocket * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSocket_Listen" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSocket_Listen" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CSocket_Listen" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocket_Listen" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  ecode5 = SWIG_AsVal_unsigned_SS_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSocket_Listen" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  result = (bool)(arg1)->Listen(arg2,arg3,(CString const &)*arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocket_Listen__SWIG_0_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocket *arg1 = (CSocket *) 0 ;
  unsigned short arg2 ;
  int arg3 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CSocket_Listen",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocket_Listen" "', argument " "1"" of type '" "CSocket *""'"); 
  }
  arg1 = reinterpret_cast< CSocket * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSocket_Listen" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSocket_Listen" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CSocket_Listen" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocket_Listen" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  result = (bool)(arg1)->Listen(arg2,arg3,(CString const &)*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocket_Listen__SWIG_0_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocket *arg1 = (CSocket *) 0 ;
  unsigned short arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CSocket_Listen",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocket_Listen" "', argument " "1"" of type '" "CSocket *""'"); 
  }
  arg1 = reinterpret_cast< CSocket * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSocket_Listen" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSocket_Listen" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (bool)(arg1)->Listen(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocket_Listen__SWIG_0_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocket *arg1 = (CSocket *) 0 ;
  unsigned short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CSocket_Listen",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocket_Listen" "', argument " "1"" of type '" "CSocket *""'"); 
  }
  arg1 = reinterpret_cast< CSocket * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSocket_Listen" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  result = (bool)(arg1)->Listen(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocket_ReachedMaxBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocket *arg1 = (CSocket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSocket_ReachedMaxBuffer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocket_ReachedMaxBuffer" "', argument " "1"" of type '" "CSocket *""'"); 
  }
  arg1 = reinterpret_cast< CSocket * >(argp1);
  (arg1)->ReachedMaxBuffer();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocket_SockError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocket *arg1 = (CSocket *) 0 ;
  int arg2 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CSocket_SockError",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocket_SockError" "', argument " "1"" of type '" "CSocket *""'"); 
  }
  arg1 = reinterpret_cast< CSocket * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSocket_SockError" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSocket_SockError" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocket_SockError" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->SockError(arg2,(CString const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocket_ConnectionFrom(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocket *arg1 = (CSocket *) 0 ;
  CString *arg2 = 0 ;
  unsigned short arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned short val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CSocket_ConnectionFrom",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocket_ConnectionFrom" "', argument " "1"" of type '" "CSocket *""'"); 
  }
  arg1 = reinterpret_cast< CSocket * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocket_ConnectionFrom" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocket_ConnectionFrom" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_short(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSocket_ConnectionFrom" "', argument " "3"" of type '" "unsigned short""'");
  } 
  arg3 = static_cast< unsigned short >(val3);
  result = (bool)(arg1)->ConnectionFrom((CString const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocket_Connect__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocket *arg1 = (CSocket *) 0 ;
  CString *arg2 = 0 ;
  unsigned short arg3 ;
  bool arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned short val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CSocket_Connect",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocket_Connect" "', argument " "1"" of type '" "CSocket *""'"); 
  }
  arg1 = reinterpret_cast< CSocket * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocket_Connect" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocket_Connect" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_short(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSocket_Connect" "', argument " "3"" of type '" "unsigned short""'");
  } 
  arg3 = static_cast< unsigned short >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSocket_Connect" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSocket_Connect" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  result = (bool)(arg1)->Connect((CString const &)*arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocket_Connect__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocket *arg1 = (CSocket *) 0 ;
  CString *arg2 = 0 ;
  unsigned short arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned short val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CSocket_Connect",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocket_Connect" "', argument " "1"" of type '" "CSocket *""'"); 
  }
  arg1 = reinterpret_cast< CSocket * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocket_Connect" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocket_Connect" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_short(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSocket_Connect" "', argument " "3"" of type '" "unsigned short""'");
  } 
  arg3 = static_cast< unsigned short >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSocket_Connect" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (bool)(arg1)->Connect((CString const &)*arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocket_Connect__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocket *arg1 = (CSocket *) 0 ;
  CString *arg2 = 0 ;
  unsigned short arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned short val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CSocket_Connect",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocket_Connect" "', argument " "1"" of type '" "CSocket *""'"); 
  }
  arg1 = reinterpret_cast< CSocket * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocket_Connect" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocket_Connect" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_short(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSocket_Connect" "', argument " "3"" of type '" "unsigned short""'");
  } 
  arg3 = static_cast< unsigned short >(val3);
  result = (bool)(arg1)->Connect((CString const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocket_Connect(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSocket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CSocket_Connect__SWIG_0_0(self, args);
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSocket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_short(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CSocket_Connect__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSocket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_short(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_CSocket_Connect__SWIG_2(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSocket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_short(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_CSocket_Connect__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CSocket_Connect'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Connect()\n"
    "    CSocket::Connect(CString const &,unsigned short,bool,unsigned int)\n"
    "    CSocket::Connect(CString const &,unsigned short,bool)\n"
    "    CSocket::Connect(CString const &,unsigned short)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CSocket_Listen__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocket *arg1 = (CSocket *) 0 ;
  unsigned short arg2 ;
  bool arg3 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CSocket_Listen",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocket_Listen" "', argument " "1"" of type '" "CSocket *""'"); 
  }
  arg1 = reinterpret_cast< CSocket * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSocket_Listen" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSocket_Listen" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSocket_Listen" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (bool)(arg1)->Listen(arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocket_Listen__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocket *arg1 = (CSocket *) 0 ;
  unsigned short arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CSocket_Listen",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocket_Listen" "', argument " "1"" of type '" "CSocket *""'"); 
  }
  arg1 = reinterpret_cast< CSocket * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSocket_Listen" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSocket_Listen" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (bool)(arg1)->Listen(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CSocket_Listen(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 6) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSocket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CSocket_Listen__SWIG_0_4(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSocket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CSocket_Listen__SWIG_0_3(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSocket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CSocket_Listen__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSocket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (CString**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CSocket_Listen__SWIG_0_2(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSocket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_CSocket_Listen__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSocket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (CString**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_CSocket_Listen__SWIG_0_1(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CSocket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (CString**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_CSocket_Listen__SWIG_0_0(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CSocket_Listen'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Listen(unsigned short,int,CString const &,unsigned int,bool)\n"
    "    Listen(unsigned short,int,CString const &,unsigned int)\n"
    "    Listen(unsigned short,int,CString const &)\n"
    "    Listen(unsigned short,int)\n"
    "    Listen(unsigned short)\n"
    "    CSocket::Listen(unsigned short,bool,unsigned int)\n"
    "    CSocket::Listen(unsigned short,bool)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CSocket_GetModule(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSocket *arg1 = (CSocket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CModule *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CSocket_GetModule",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CSocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocket_GetModule" "', argument " "1"" of type '" "CSocket const *""'"); 
  }
  arg1 = reinterpret_cast< CSocket * >(argp1);
  result = (CModule *)((CSocket const *)arg1)->GetModule();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModule, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CSocket_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CSocket, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CFile__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CFile")) SWIG_fail;
  result = (CFile *)new CFile();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CFile, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CFile__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  CFile *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_CFile",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CFile" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CFile" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  result = (CFile *)new CFile((CString const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CFile, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CFile(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_CFile__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_CFile__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_CFile'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CFile::CFile()\n"
    "    CFile::CFile(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_CFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CFile",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CFile" "', argument " "1"" of type '" "CFile *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_SetFileName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CFile_SetFileName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_SetFileName" "', argument " "1"" of type '" "CFile *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_SetFileName" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_SetFileName" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetFileName((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_IsReg__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  bool arg2 ;
  int res1 = SWIG_OLDOBJ ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CFile_IsReg",&obj0,&obj1)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsReg" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_IsReg" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_IsReg" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (bool)CFile::IsReg((CString const &)*arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_IsReg__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_IsReg",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsReg" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_IsReg" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  result = (bool)CFile::IsReg((CString const &)*arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_IsDir__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  bool arg2 ;
  int res1 = SWIG_OLDOBJ ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CFile_IsDir",&obj0,&obj1)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsDir" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_IsDir" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_IsDir" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (bool)CFile::IsDir((CString const &)*arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_IsDir__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_IsDir",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsDir" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_IsDir" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  result = (bool)CFile::IsDir((CString const &)*arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_IsChr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  bool arg2 ;
  int res1 = SWIG_OLDOBJ ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CFile_IsChr",&obj0,&obj1)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsChr" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_IsChr" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_IsChr" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (bool)CFile::IsChr((CString const &)*arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_IsChr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_IsChr",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsChr" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_IsChr" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  result = (bool)CFile::IsChr((CString const &)*arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_IsBlk__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  bool arg2 ;
  int res1 = SWIG_OLDOBJ ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CFile_IsBlk",&obj0,&obj1)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsBlk" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_IsBlk" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_IsBlk" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (bool)CFile::IsBlk((CString const &)*arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_IsBlk__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_IsBlk",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsBlk" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_IsBlk" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  result = (bool)CFile::IsBlk((CString const &)*arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_IsFifo__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  bool arg2 ;
  int res1 = SWIG_OLDOBJ ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CFile_IsFifo",&obj0,&obj1)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsFifo" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_IsFifo" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_IsFifo" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (bool)CFile::IsFifo((CString const &)*arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_IsFifo__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_IsFifo",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsFifo" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_IsFifo" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  result = (bool)CFile::IsFifo((CString const &)*arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_IsLnk__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  bool arg2 ;
  int res1 = SWIG_OLDOBJ ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CFile_IsLnk",&obj0,&obj1)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsLnk" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_IsLnk" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_IsLnk" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (bool)CFile::IsLnk((CString const &)*arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_IsLnk__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_IsLnk",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsLnk" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_IsLnk" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  result = (bool)CFile::IsLnk((CString const &)*arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_IsSock__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  bool arg2 ;
  int res1 = SWIG_OLDOBJ ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CFile_IsSock",&obj0,&obj1)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsSock" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_IsSock" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_IsSock" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (bool)CFile::IsSock((CString const &)*arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_IsSock__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_IsSock",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsSock" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_IsSock" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  result = (bool)CFile::IsSock((CString const &)*arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_IsReg__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CFile_IsReg",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsReg" "', argument " "1"" of type '" "CFile const *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_IsReg" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (bool)((CFile const *)arg1)->IsReg(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_IsReg__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_IsReg",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsReg" "', argument " "1"" of type '" "CFile const *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  result = (bool)((CFile const *)arg1)->IsReg();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_IsReg(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CFile_IsReg__SWIG_3(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CFile_IsReg__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CFile_IsReg__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CFile_IsReg__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CFile_IsReg'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CFile::IsReg(CString const &,bool)\n"
    "    CFile::IsReg(CString const &)\n"
    "    CFile::IsReg(bool) const\n"
    "    CFile::IsReg() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CFile_IsDir__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CFile_IsDir",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsDir" "', argument " "1"" of type '" "CFile const *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_IsDir" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (bool)((CFile const *)arg1)->IsDir(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_IsDir__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_IsDir",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsDir" "', argument " "1"" of type '" "CFile const *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  result = (bool)((CFile const *)arg1)->IsDir();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_IsDir(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CFile_IsDir__SWIG_3(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CFile_IsDir__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CFile_IsDir__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CFile_IsDir__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CFile_IsDir'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CFile::IsDir(CString const &,bool)\n"
    "    CFile::IsDir(CString const &)\n"
    "    CFile::IsDir(bool) const\n"
    "    CFile::IsDir() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CFile_IsChr__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CFile_IsChr",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsChr" "', argument " "1"" of type '" "CFile const *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_IsChr" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (bool)((CFile const *)arg1)->IsChr(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_IsChr__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_IsChr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsChr" "', argument " "1"" of type '" "CFile const *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  result = (bool)((CFile const *)arg1)->IsChr();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_IsChr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CFile_IsChr__SWIG_3(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CFile_IsChr__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CFile_IsChr__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CFile_IsChr__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CFile_IsChr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CFile::IsChr(CString const &,bool)\n"
    "    CFile::IsChr(CString const &)\n"
    "    CFile::IsChr(bool) const\n"
    "    CFile::IsChr() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CFile_IsBlk__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CFile_IsBlk",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsBlk" "', argument " "1"" of type '" "CFile const *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_IsBlk" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (bool)((CFile const *)arg1)->IsBlk(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_IsBlk__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_IsBlk",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsBlk" "', argument " "1"" of type '" "CFile const *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  result = (bool)((CFile const *)arg1)->IsBlk();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_IsBlk(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CFile_IsBlk__SWIG_3(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CFile_IsBlk__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CFile_IsBlk__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CFile_IsBlk__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CFile_IsBlk'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CFile::IsBlk(CString const &,bool)\n"
    "    CFile::IsBlk(CString const &)\n"
    "    CFile::IsBlk(bool) const\n"
    "    CFile::IsBlk() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CFile_IsFifo__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CFile_IsFifo",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsFifo" "', argument " "1"" of type '" "CFile const *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_IsFifo" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (bool)((CFile const *)arg1)->IsFifo(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_IsFifo__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_IsFifo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsFifo" "', argument " "1"" of type '" "CFile const *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  result = (bool)((CFile const *)arg1)->IsFifo();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_IsFifo(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CFile_IsFifo__SWIG_3(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CFile_IsFifo__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CFile_IsFifo__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CFile_IsFifo__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CFile_IsFifo'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CFile::IsFifo(CString const &,bool)\n"
    "    CFile::IsFifo(CString const &)\n"
    "    CFile::IsFifo(bool) const\n"
    "    CFile::IsFifo() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CFile_IsLnk__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CFile_IsLnk",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsLnk" "', argument " "1"" of type '" "CFile const *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_IsLnk" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (bool)((CFile const *)arg1)->IsLnk(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_IsLnk__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_IsLnk",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsLnk" "', argument " "1"" of type '" "CFile const *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  result = (bool)((CFile const *)arg1)->IsLnk();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_IsLnk(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CFile_IsLnk__SWIG_3(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CFile_IsLnk__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CFile_IsLnk__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CFile_IsLnk__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CFile_IsLnk'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CFile::IsLnk(CString const &,bool)\n"
    "    CFile::IsLnk(CString const &)\n"
    "    CFile::IsLnk(bool) const\n"
    "    CFile::IsLnk() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CFile_IsSock__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CFile_IsSock",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsSock" "', argument " "1"" of type '" "CFile const *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_IsSock" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (bool)((CFile const *)arg1)->IsSock(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_IsSock__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_IsSock",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsSock" "', argument " "1"" of type '" "CFile const *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  result = (bool)((CFile const *)arg1)->IsSock();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_IsSock(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CFile_IsSock__SWIG_3(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CFile_IsSock__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CFile_IsSock__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CFile_IsSock__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CFile_IsSock'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CFile::IsSock(CString const &,bool)\n"
    "    CFile::IsSock(CString const &)\n"
    "    CFile::IsSock(bool) const\n"
    "    CFile::IsSock() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CFile_FType__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  CFile::EFileTypes arg2 ;
  bool arg3 ;
  int res1 = SWIG_OLDOBJ ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CFile_FType",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_FType" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_FType" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_FType" "', argument " "2"" of type '" "CFile::EFileTypes""'");
  } 
  arg2 = static_cast< CFile::EFileTypes >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CFile_FType" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (bool)CFile::FType((CString const &)*arg1,arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_FType__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  CFile::EFileTypes arg2 ;
  int res1 = SWIG_OLDOBJ ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CFile_FType",&obj0,&obj1)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_FType" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_FType" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_FType" "', argument " "2"" of type '" "CFile::EFileTypes""'");
  } 
  arg2 = static_cast< CFile::EFileTypes >(val2);
  result = (bool)CFile::FType((CString const &)*arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_FType(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CFile_FType__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CFile_FType__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CFile_FType'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CFile::FType(CString const &,CFile::EFileTypes,bool)\n"
    "    CFile::FType(CString const &,CFile::EFileTypes)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CFile_Exists__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_Exists",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Exists" "', argument " "1"" of type '" "CFile const *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  result = (bool)((CFile const *)arg1)->Exists();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_GetSize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  off_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_GetSize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_GetSize" "', argument " "1"" of type '" "CFile const *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  result = ((CFile const *)arg1)->GetSize();
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_GetATime__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  time_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_GetATime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_GetATime" "', argument " "1"" of type '" "CFile const *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  result = ((CFile const *)arg1)->GetATime();
  resultobj = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_GetMTime__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  time_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_GetMTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_GetMTime" "', argument " "1"" of type '" "CFile const *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  result = ((CFile const *)arg1)->GetMTime();
  resultobj = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_GetCTime__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  time_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_GetCTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_GetCTime" "', argument " "1"" of type '" "CFile const *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  result = ((CFile const *)arg1)->GetCTime();
  resultobj = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_GetUID__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  uid_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_GetUID",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_GetUID" "', argument " "1"" of type '" "CFile const *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  result = ((CFile const *)arg1)->GetUID();
  resultobj = SWIG_NewPointerObj((new uid_t(static_cast< const uid_t& >(result))), SWIGTYPE_p_uid_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_GetGID__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gid_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_GetGID",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_GetGID" "', argument " "1"" of type '" "CFile const *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  result = ((CFile const *)arg1)->GetGID();
  resultobj = SWIG_NewPointerObj((new gid_t(static_cast< const gid_t& >(result))), SWIGTYPE_p_gid_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_Exists__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_Exists",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Exists" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Exists" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  result = (bool)CFile::Exists((CString const &)*arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_Exists(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CFile_Exists__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CFile_Exists__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CFile_Exists'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CFile::Exists() const\n"
    "    CFile::Exists(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CFile_GetSize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  off_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_GetSize",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_GetSize" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_GetSize" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  result = CFile::GetSize((CString const &)*arg1);
  resultobj = SWIG_From_long(static_cast< long >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_GetSize(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CFile_GetSize__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CFile_GetSize__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CFile_GetSize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CFile::GetSize() const\n"
    "    CFile::GetSize(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CFile_GetATime__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  time_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_GetATime",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_GetATime" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_GetATime" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  result = CFile::GetATime((CString const &)*arg1);
  resultobj = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_GetATime(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CFile_GetATime__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CFile_GetATime__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CFile_GetATime'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CFile::GetATime() const\n"
    "    CFile::GetATime(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CFile_GetMTime__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  time_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_GetMTime",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_GetMTime" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_GetMTime" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  result = CFile::GetMTime((CString const &)*arg1);
  resultobj = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_GetMTime(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CFile_GetMTime__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CFile_GetMTime__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CFile_GetMTime'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CFile::GetMTime() const\n"
    "    CFile::GetMTime(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CFile_GetCTime__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  time_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_GetCTime",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_GetCTime" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_GetCTime" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  result = CFile::GetCTime((CString const &)*arg1);
  resultobj = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_GetCTime(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CFile_GetCTime__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CFile_GetCTime__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CFile_GetCTime'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CFile::GetCTime() const\n"
    "    CFile::GetCTime(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CFile_GetUID__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  uid_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_GetUID",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_GetUID" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_GetUID" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  result = CFile::GetUID((CString const &)*arg1);
  resultobj = SWIG_NewPointerObj((new uid_t(static_cast< const uid_t& >(result))), SWIGTYPE_p_uid_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_GetUID(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CFile_GetUID__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CFile_GetUID__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CFile_GetUID'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CFile::GetUID() const\n"
    "    CFile::GetUID(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CFile_GetGID__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  gid_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_GetGID",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_GetGID" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_GetGID" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  result = CFile::GetGID((CString const &)*arg1);
  resultobj = SWIG_NewPointerObj((new gid_t(static_cast< const gid_t& >(result))), SWIGTYPE_p_gid_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_GetGID(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CFile_GetGID__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CFile_GetGID__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CFile_GetGID'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CFile::GetGID() const\n"
    "    CFile::GetGID(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CFile_GetInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  stat *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CFile_GetInfo",&obj0,&obj1)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_GetInfo" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_GetInfo" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_stat,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_GetInfo" "', argument " "2"" of type '" "stat &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_GetInfo" "', argument " "2"" of type '" "stat &""'"); 
  }
  arg2 = reinterpret_cast< stat * >(argp2);
  result = (int)CFile::GetInfo((CString const &)*arg1,*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_Delete__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_Delete",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Delete" "', argument " "1"" of type '" "CFile *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  result = (bool)(arg1)->Delete();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_Move__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  CString *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CFile_Move",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Move" "', argument " "1"" of type '" "CFile *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_Move" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Move" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CFile_Move" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (bool)(arg1)->Move((CString const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_Move__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CFile_Move",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Move" "', argument " "1"" of type '" "CFile *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_Move" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Move" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->Move((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_Copy__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  CString *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CFile_Copy",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Copy" "', argument " "1"" of type '" "CFile *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_Copy" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Copy" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CFile_Copy" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (bool)(arg1)->Copy((CString const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_Copy__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CFile_Copy",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Copy" "', argument " "1"" of type '" "CFile *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_Copy" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Copy" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->Copy((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_Delete__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_Delete",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Delete" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Delete" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  result = (bool)CFile::Delete((CString const &)*arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_Delete(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CFile_Delete__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CFile_Delete__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CFile_Delete'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CFile::Delete()\n"
    "    CFile::Delete(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CFile_Move__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  CString *arg2 = 0 ;
  bool arg3 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CFile_Move",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Move" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Move" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_Move" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Move" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CFile_Move" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (bool)CFile::Move((CString const &)*arg1,(CString const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_Move__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  CString *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CFile_Move",&obj0,&obj1)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Move" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Move" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_Move" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Move" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)CFile::Move((CString const &)*arg1,(CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_Move(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CFile_Move__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CFile_Move__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CFile_Move__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CFile_Move__SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CFile_Move'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CFile::Move(CString const &,bool)\n"
    "    CFile::Move(CString const &)\n"
    "    CFile::Move(CString const &,CString const &,bool)\n"
    "    CFile::Move(CString const &,CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CFile_Copy__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  CString *arg2 = 0 ;
  bool arg3 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CFile_Copy",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Copy" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Copy" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_Copy" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Copy" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CFile_Copy" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (bool)CFile::Copy((CString const &)*arg1,(CString const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_Copy__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  CString *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CFile_Copy",&obj0,&obj1)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Copy" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Copy" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_Copy" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Copy" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)CFile::Copy((CString const &)*arg1,(CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_Copy(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CFile_Copy__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CFile_Copy__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CFile_Copy__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CFile_Copy__SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CFile_Copy'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CFile::Copy(CString const &,bool)\n"
    "    CFile::Copy(CString const &)\n"
    "    CFile::Copy(CString const &,CString const &,bool)\n"
    "    CFile::Copy(CString const &,CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CFile_Chmod__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  mode_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CFile_Chmod",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Chmod" "', argument " "1"" of type '" "CFile *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mode_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_Chmod" "', argument " "2"" of type '" "mode_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Chmod" "', argument " "2"" of type '" "mode_t""'");
    } else {
      mode_t * temp = reinterpret_cast< mode_t * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (bool)(arg1)->Chmod(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_Chmod__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  mode_t arg2 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CFile_Chmod",&obj0,&obj1)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Chmod" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Chmod" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mode_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_Chmod" "', argument " "2"" of type '" "mode_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Chmod" "', argument " "2"" of type '" "mode_t""'");
    } else {
      mode_t * temp = reinterpret_cast< mode_t * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (bool)CFile::Chmod((CString const &)*arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_Chmod(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mode_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CFile_Chmod__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mode_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CFile_Chmod__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CFile_Chmod'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CFile::Chmod(mode_t)\n"
    "    CFile::Chmod(CString const &,mode_t)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CFile_Seek(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  off_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CFile_Seek",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Seek" "', argument " "1"" of type '" "CFile *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  ecode2 = SWIG_AsVal_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_Seek" "', argument " "2"" of type '" "off_t""'");
  } 
  arg2 = static_cast< off_t >(val2);
  result = (bool)(arg1)->Seek(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_Truncate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_Truncate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Truncate" "', argument " "1"" of type '" "CFile *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  result = (bool)(arg1)->Truncate();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_Sync(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_Sync",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Sync" "', argument " "1"" of type '" "CFile *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  result = (bool)(arg1)->Sync();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_Open__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  CString *arg2 = 0 ;
  int arg3 ;
  mode_t arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CFile_Open",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Open" "', argument " "1"" of type '" "CFile *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_Open" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Open" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CFile_Open" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mode_t,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CFile_Open" "', argument " "4"" of type '" "mode_t""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Open" "', argument " "4"" of type '" "mode_t""'");
    } else {
      mode_t * temp = reinterpret_cast< mode_t * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  result = (bool)(arg1)->Open((CString const &)*arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_Open__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  CString *arg2 = 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CFile_Open",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Open" "', argument " "1"" of type '" "CFile *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_Open" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Open" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CFile_Open" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (bool)(arg1)->Open((CString const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_Open__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CFile_Open",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Open" "', argument " "1"" of type '" "CFile *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_Open" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Open" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->Open((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_Open__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  int arg2 ;
  mode_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CFile_Open",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Open" "', argument " "1"" of type '" "CFile *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_Open" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mode_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CFile_Open" "', argument " "3"" of type '" "mode_t""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Open" "', argument " "3"" of type '" "mode_t""'");
    } else {
      mode_t * temp = reinterpret_cast< mode_t * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = (bool)(arg1)->Open(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_Open__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CFile_Open",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Open" "', argument " "1"" of type '" "CFile *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_Open" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (bool)(arg1)->Open(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_Open__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_Open",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Open" "', argument " "1"" of type '" "CFile *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  result = (bool)(arg1)->Open();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_Open(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CFile_Open__SWIG_5(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CFile_Open__SWIG_4(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CFile_Open__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mode_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CFile_Open__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CFile_Open__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_mode_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CFile_Open__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CFile_Open'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CFile::Open(CString const &,int,mode_t)\n"
    "    CFile::Open(CString const &,int)\n"
    "    CFile::Open(CString const &)\n"
    "    CFile::Open(int,mode_t)\n"
    "    CFile::Open(int)\n"
    "    CFile::Open()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CFile_Read(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CFile_Read",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Read" "', argument " "1"" of type '" "CFile *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_Read" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CFile_Read" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (int)(arg1)->Read(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_ReadLine__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CFile_ReadLine",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_ReadLine" "', argument " "1"" of type '" "CFile *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sData");
    }
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CFile_ReadLine" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_ReadLine" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = (bool)(arg1)->ReadLine(*arg2,(CString const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_ReadLine__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CFile_ReadLine",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_ReadLine" "', argument " "1"" of type '" "CFile *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sData");
    }
  }
  result = (bool)(arg1)->ReadLine(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_ReadLine(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CString, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CFile_ReadLine__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CString, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CFile_ReadLine__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CFile_ReadLine'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CFile::ReadLine(CString &,CString const &)\n"
    "    CFile::ReadLine(CString &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CFile_ReadFile__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  CString *arg2 = 0 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CFile_ReadFile",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_ReadFile" "', argument " "1"" of type '" "CFile *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sData");
    }
  }
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CFile_ReadFile" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  result = (bool)(arg1)->ReadFile(*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_ReadFile__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CFile_ReadFile",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_ReadFile" "', argument " "1"" of type '" "CFile *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sData");
    }
  }
  result = (bool)(arg1)->ReadFile(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_ReadFile(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CString, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CFile_ReadFile__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CString, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CFile_ReadFile__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CFile_ReadFile'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CFile::ReadFile(CString &,size_t)\n"
    "    CFile::ReadFile(CString &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CFile_Write__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  char *arg2 = (char *) 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CFile_Write",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Write" "', argument " "1"" of type '" "CFile *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_Write" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CFile_Write" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (int)(arg1)->Write((char const *)arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_Write__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CFile_Write",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Write" "', argument " "1"" of type '" "CFile *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_Write" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Write" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (int)(arg1)->Write((CString const &)*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_Write(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CFile_Write__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CFile_Write__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CFile_Write'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CFile::Write(char const *,unsigned int)\n"
    "    CFile::Write(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CFile_Close(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_Close",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Close" "', argument " "1"" of type '" "CFile *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  (arg1)->Close();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_ClearBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_ClearBuffer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_ClearBuffer" "', argument " "1"" of type '" "CFile *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  (arg1)->ClearBuffer();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_TryExLock__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  CString *arg2 = 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CFile_TryExLock",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_TryExLock" "', argument " "1"" of type '" "CFile *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_TryExLock" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_TryExLock" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CFile_TryExLock" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (bool)(arg1)->TryExLock((CString const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_TryExLock__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CFile_TryExLock",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_TryExLock" "', argument " "1"" of type '" "CFile *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_TryExLock" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_TryExLock" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->TryExLock((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_TryExLock__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_TryExLock",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_TryExLock" "', argument " "1"" of type '" "CFile *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  result = (bool)(arg1)->TryExLock();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_TryExLock(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CFile_TryExLock__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CFile_TryExLock__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CFile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CFile_TryExLock__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CFile_TryExLock'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CFile::TryExLock(CString const &,int)\n"
    "    CFile::TryExLock(CString const &)\n"
    "    CFile::TryExLock()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CFile_ExLock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_ExLock",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_ExLock" "', argument " "1"" of type '" "CFile *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  result = (bool)(arg1)->ExLock();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_UnLock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_UnLock",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_UnLock" "', argument " "1"" of type '" "CFile *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  result = (bool)(arg1)->UnLock();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_IsOpen(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_IsOpen",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsOpen" "', argument " "1"" of type '" "CFile const *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  result = (bool)((CFile const *)arg1)->IsOpen();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_GetLongName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_GetLongName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_GetLongName" "', argument " "1"" of type '" "CFile const *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  result = ((CFile const *)arg1)->GetLongName();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_GetShortName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_GetShortName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_GetShortName" "', argument " "1"" of type '" "CFile const *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  result = ((CFile const *)arg1)->GetShortName();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_GetDir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_GetDir",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_GetDir" "', argument " "1"" of type '" "CFile const *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  result = ((CFile const *)arg1)->GetDir();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_HadError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_HadError",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_HadError" "', argument " "1"" of type '" "CFile const *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  result = (bool)((CFile const *)arg1)->HadError();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_ResetError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFile *arg1 = (CFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_ResetError",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_ResetError" "', argument " "1"" of type '" "CFile *""'"); 
  }
  arg1 = reinterpret_cast< CFile * >(argp1);
  (arg1)->ResetError();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_InitHomePath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CFile_InitHomePath",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_InitHomePath" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_InitHomePath" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  CFile::InitHomePath((CString const &)*arg1);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFile_GetHomePath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":CFile_GetHomePath")) SWIG_fail;
  result = (CString *) &CFile::GetHomePath();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CFile_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CFile, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CDir__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  CDir *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_CDir",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CDir" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CDir" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  result = (CDir *)new CDir((CString const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CDir, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CDir__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CDir *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CDir")) SWIG_fail;
  result = (CDir *)new CDir();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CDir, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CDir(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_CDir__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_CDir__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_CDir'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CDir::CDir(CString const &)\n"
    "    CDir::CDir()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_CDir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CDir *arg1 = (CDir *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CDir",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CDir, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CDir" "', argument " "1"" of type '" "CDir *""'"); 
  }
  arg1 = reinterpret_cast< CDir * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CDir_CleanUp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CDir *arg1 = (CDir *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CDir_CleanUp",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CDir, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDir_CleanUp" "', argument " "1"" of type '" "CDir *""'"); 
  }
  arg1 = reinterpret_cast< CDir * >(argp1);
  (arg1)->CleanUp();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CDir_Fill(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CDir *arg1 = (CDir *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CDir_Fill",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CDir, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDir_Fill" "', argument " "1"" of type '" "CDir *""'"); 
  }
  arg1 = reinterpret_cast< CDir * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDir_Fill" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_Fill" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (int)(arg1)->Fill((CString const &)*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CDir_FillByWildcard(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CDir *arg1 = (CDir *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CDir_FillByWildcard",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CDir, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDir_FillByWildcard" "', argument " "1"" of type '" "CDir *""'"); 
  }
  arg1 = reinterpret_cast< CDir * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDir_FillByWildcard" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_FillByWildcard" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CDir_FillByWildcard" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_FillByWildcard" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = (int)(arg1)->FillByWildcard((CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CDir_Chmod__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mode_t arg1 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CDir_Chmod",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mode_t,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDir_Chmod" "', argument " "1"" of type '" "mode_t""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_Chmod" "', argument " "1"" of type '" "mode_t""'");
    } else {
      mode_t * temp = reinterpret_cast< mode_t * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDir_Chmod" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_Chmod" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CDir_Chmod" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_Chmod" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = (unsigned int)CDir::Chmod(arg1,(CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CDir_Chmod__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mode_t arg1 ;
  CString *arg2 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CDir_Chmod",&obj0,&obj1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mode_t,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDir_Chmod" "', argument " "1"" of type '" "mode_t""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_Chmod" "', argument " "1"" of type '" "mode_t""'");
    } else {
      mode_t * temp = reinterpret_cast< mode_t * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDir_Chmod" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_Chmod" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (unsigned int)CDir::Chmod(arg1,(CString const &)*arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CDir_Chmod__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CDir *arg1 = (CDir *) 0 ;
  mode_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CDir_Chmod",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CDir, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDir_Chmod" "', argument " "1"" of type '" "CDir *""'"); 
  }
  arg1 = reinterpret_cast< CDir * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mode_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDir_Chmod" "', argument " "2"" of type '" "mode_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_Chmod" "', argument " "2"" of type '" "mode_t""'");
    } else {
      mode_t * temp = reinterpret_cast< mode_t * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (unsigned int)(arg1)->Chmod(arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CDir_Chmod(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_mode_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CDir_Chmod__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CDir, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mode_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CDir_Chmod__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_mode_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CDir_Chmod__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CDir_Chmod'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CDir::Chmod(mode_t,CString const &,CString const &)\n"
    "    CDir::Chmod(mode_t,CString const &)\n"
    "    CDir::Chmod(mode_t)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CDir_Delete__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  CString *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CDir_Delete",&obj0,&obj1)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDir_Delete" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_Delete" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDir_Delete" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_Delete" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (unsigned int)CDir::Delete((CString const &)*arg1,(CString const &)*arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CDir_Delete__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CDir_Delete",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDir_Delete" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_Delete" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  result = (unsigned int)CDir::Delete((CString const &)*arg1);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CDir_Delete__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CDir *arg1 = (CDir *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CDir_Delete",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CDir, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDir_Delete" "', argument " "1"" of type '" "CDir *""'"); 
  }
  arg1 = reinterpret_cast< CDir * >(argp1);
  result = (unsigned int)(arg1)->Delete();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CDir_Delete(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CDir, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CDir_Delete__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CDir_Delete__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CDir_Delete__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CDir_Delete'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CDir::Delete(CString const &,CString const &)\n"
    "    CDir::Delete(CString const &)\n"
    "    CDir::Delete()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CDir_GetSortAttr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CDir *arg1 = (CDir *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CFile::EFileAttr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CDir_GetSortAttr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CDir, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDir_GetSortAttr" "', argument " "1"" of type '" "CDir *""'"); 
  }
  arg1 = reinterpret_cast< CDir * >(argp1);
  result = (CFile::EFileAttr)(arg1)->GetSortAttr();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CDir_IsDescending(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CDir *arg1 = (CDir *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CDir_IsDescending",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CDir, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDir_IsDescending" "', argument " "1"" of type '" "CDir *""'"); 
  }
  arg1 = reinterpret_cast< CDir * >(argp1);
  result = (bool)(arg1)->IsDescending();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CDir_CheckPathPrefix__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CDir_CheckPathPrefix",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDir_CheckPathPrefix" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_CheckPathPrefix" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDir_CheckPathPrefix" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_CheckPathPrefix" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CDir_CheckPathPrefix" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_CheckPathPrefix" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = CDir::CheckPathPrefix((CString const &)*arg1,(CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_From_std_string((CString)(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CDir_CheckPathPrefix__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  CString *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CDir_CheckPathPrefix",&obj0,&obj1)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDir_CheckPathPrefix" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_CheckPathPrefix" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDir_CheckPathPrefix" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_CheckPathPrefix" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = CDir::CheckPathPrefix((CString const &)*arg1,(CString const &)*arg2);
  resultobj = SWIG_From_std_string((CString)(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CDir_CheckPathPrefix(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CDir_CheckPathPrefix__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CDir_CheckPathPrefix__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CDir_CheckPathPrefix'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CDir::CheckPathPrefix(CString const &,CString const &,CString const &)\n"
    "    CDir::CheckPathPrefix(CString const &,CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CDir_ChangeDir__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CDir_ChangeDir",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDir_ChangeDir" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_ChangeDir" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDir_ChangeDir" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_ChangeDir" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CDir_ChangeDir" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_ChangeDir" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = CDir::ChangeDir((CString const &)*arg1,(CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_From_std_string((CString)(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CDir_ChangeDir__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  CString *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CDir_ChangeDir",&obj0,&obj1)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDir_ChangeDir" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_ChangeDir" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDir_ChangeDir" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_ChangeDir" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = CDir::ChangeDir((CString const &)*arg1,(CString const &)*arg2);
  resultobj = SWIG_From_std_string((CString)(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CDir_ChangeDir(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CDir_ChangeDir__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CDir_ChangeDir__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CDir_ChangeDir'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CDir::ChangeDir(CString const &,CString const &,CString const &)\n"
    "    CDir::ChangeDir(CString const &,CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CDir_MakeDir__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  mode_t arg2 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CDir_MakeDir",&obj0,&obj1)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDir_MakeDir" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_MakeDir" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mode_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDir_MakeDir" "', argument " "2"" of type '" "mode_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_MakeDir" "', argument " "2"" of type '" "mode_t""'");
    } else {
      mode_t * temp = reinterpret_cast< mode_t * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (bool)CDir::MakeDir((CString const &)*arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CDir_MakeDir__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CDir_MakeDir",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDir_MakeDir" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_MakeDir" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  result = (bool)CDir::MakeDir((CString const &)*arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CDir_MakeDir(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CDir_MakeDir__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mode_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CDir_MakeDir__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CDir_MakeDir'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CDir::MakeDir(CString const &,mode_t)\n"
    "    CDir::MakeDir(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CDir_GetCWD(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)":CDir_GetCWD")) SWIG_fail;
  result = CDir::GetCWD();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CDir_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CDir, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CTimer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  CString *arg4 = 0 ;
  CString *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  CTimer *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_CTimer",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CTimer" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CTimer" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CTimer" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CTimer" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CTimer" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res5 = SWIG_AsPtr_std_string(obj4, &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_CTimer" "', argument " "5"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CTimer" "', argument " "5"" of type '" "CString const &""'"); 
    }
    arg5 = ptr;
  }
  result = (CTimer *)new CTimer(arg1,arg2,arg3,(CString const &)*arg4,(CString const &)*arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CTimer, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  if (SWIG_IsNewObj(res5)) free((char*)arg5);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  if (SWIG_IsNewObj(res5)) free((char*)arg5);
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CTimer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTimer *arg1 = (CTimer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CTimer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTimer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CTimer" "', argument " "1"" of type '" "CTimer *""'"); 
  }
  arg1 = reinterpret_cast< CTimer * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTimer_SetModule(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTimer *arg1 = (CTimer *) 0 ;
  CModule *arg2 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CTimer_SetModule",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTimer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTimer_SetModule" "', argument " "1"" of type '" "CTimer *""'"); 
  }
  arg1 = reinterpret_cast< CTimer * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTimer_SetModule" "', argument " "2"" of type '" "CModule *""'"); 
  }
  arg2 = reinterpret_cast< CModule * >(argp2);
  (arg1)->SetModule(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTimer_SetDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTimer *arg1 = (CTimer *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CTimer_SetDescription",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTimer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTimer_SetDescription" "', argument " "1"" of type '" "CTimer *""'"); 
  }
  arg1 = reinterpret_cast< CTimer * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTimer_SetDescription" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTimer_SetDescription" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetDescription((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTimer_GetModule(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTimer *arg1 = (CTimer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CModule *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CTimer_GetModule",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTimer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTimer_GetModule" "', argument " "1"" of type '" "CTimer const *""'"); 
  }
  arg1 = reinterpret_cast< CTimer * >(argp1);
  result = (CModule *)((CTimer const *)arg1)->GetModule();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModule, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTimer_GetDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTimer *arg1 = (CTimer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CTimer_GetDescription",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTimer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTimer_GetDescription" "', argument " "1"" of type '" "CTimer const *""'"); 
  }
  arg1 = reinterpret_cast< CTimer * >(argp1);
  result = (CString *) &((CTimer const *)arg1)->GetDescription();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CTimer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CTimer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CFPTimer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  CString *arg4 = 0 ;
  CString *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  CFPTimer *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_CFPTimer",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CFPTimer" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CFPTimer" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CFPTimer" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CFPTimer" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CFPTimer" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res5 = SWIG_AsPtr_std_string(obj4, &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_CFPTimer" "', argument " "5"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CFPTimer" "', argument " "5"" of type '" "CString const &""'"); 
    }
    arg5 = ptr;
  }
  result = (CFPTimer *)new CFPTimer(arg1,arg2,arg3,(CString const &)*arg4,(CString const &)*arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CFPTimer, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  if (SWIG_IsNewObj(res5)) free((char*)arg5);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  if (SWIG_IsNewObj(res5)) free((char*)arg5);
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CFPTimer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFPTimer *arg1 = (CFPTimer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CFPTimer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFPTimer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CFPTimer" "', argument " "1"" of type '" "CFPTimer *""'"); 
  }
  arg1 = reinterpret_cast< CFPTimer * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CFPTimer_SetFPCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CFPTimer *arg1 = (CFPTimer *) 0 ;
  FPTimer_t arg2 = (FPTimer_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CFPTimer_SetFPCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CFPTimer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFPTimer_SetFPCallback" "', argument " "1"" of type '" "CFPTimer *""'"); 
  }
  arg1 = reinterpret_cast< CFPTimer * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_CModule_p_CFPTimer__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "CFPTimer_SetFPCallback" "', argument " "2"" of type '" "FPTimer_t""'"); 
    }
  }
  (arg1)->SetFPCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CFPTimer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CFPTimer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CModInfo__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModInfo *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CModInfo")) SWIG_fail;
  result = (CModInfo *)new CModInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CModInfo__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  CString *arg2 = 0 ;
  CModInfo::EModuleType arg3 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModInfo *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_CModInfo",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CModInfo" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CModInfo" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CModInfo" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CModInfo" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CModInfo" "', argument " "3"" of type '" "CModInfo::EModuleType""'");
  } 
  arg3 = static_cast< CModInfo::EModuleType >(val3);
  result = (CModInfo *)new CModInfo((CString const &)*arg1,(CString const &)*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModInfo, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CModInfo(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_CModInfo__SWIG_0(self, args);
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_CModInfo__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_CModInfo'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CModInfo::CModInfo()\n"
    "    CModInfo::CModInfo(CString const &,CString const &,CModInfo::EModuleType)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_CModInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModInfo *arg1 = (CModInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CModInfo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CModInfo" "', argument " "1"" of type '" "CModInfo *""'"); 
  }
  arg1 = reinterpret_cast< CModInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModInfo___lt__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModInfo *arg1 = (CModInfo *) 0 ;
  CModInfo *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModInfo___lt__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo___lt__" "', argument " "1"" of type '" "CModInfo const *""'"); 
  }
  arg1 = reinterpret_cast< CModInfo * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CModInfo,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModInfo___lt__" "', argument " "2"" of type '" "CModInfo const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModInfo___lt__" "', argument " "2"" of type '" "CModInfo const &""'"); 
  }
  arg2 = reinterpret_cast< CModInfo * >(argp2);
  result = (bool)((CModInfo const *)arg1)->operator <((CModInfo const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModInfo_SupportsType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModInfo *arg1 = (CModInfo *) 0 ;
  CModInfo::EModuleType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModInfo_SupportsType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_SupportsType" "', argument " "1"" of type '" "CModInfo *""'"); 
  }
  arg1 = reinterpret_cast< CModInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CModInfo_SupportsType" "', argument " "2"" of type '" "CModInfo::EModuleType""'");
  } 
  arg2 = static_cast< CModInfo::EModuleType >(val2);
  result = (bool)(arg1)->SupportsType(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModInfo_AddType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModInfo *arg1 = (CModInfo *) 0 ;
  CModInfo::EModuleType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModInfo_AddType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_AddType" "', argument " "1"" of type '" "CModInfo *""'"); 
  }
  arg1 = reinterpret_cast< CModInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CModInfo_AddType" "', argument " "2"" of type '" "CModInfo::EModuleType""'");
  } 
  arg2 = static_cast< CModInfo::EModuleType >(val2);
  (arg1)->AddType(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModInfo_ModuleTypeToString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModInfo::EModuleType arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModInfo_ModuleTypeToString",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CModInfo_ModuleTypeToString" "', argument " "1"" of type '" "CModInfo::EModuleType""'");
  } 
  arg1 = static_cast< CModInfo::EModuleType >(val1);
  result = CModInfo::ModuleTypeToString(arg1);
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModInfo_GetName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModInfo *arg1 = (CModInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModInfo_GetName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_GetName" "', argument " "1"" of type '" "CModInfo const *""'"); 
  }
  arg1 = reinterpret_cast< CModInfo * >(argp1);
  result = (CString *) &((CModInfo const *)arg1)->GetName();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModInfo_GetPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModInfo *arg1 = (CModInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModInfo_GetPath",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_GetPath" "', argument " "1"" of type '" "CModInfo const *""'"); 
  }
  arg1 = reinterpret_cast< CModInfo * >(argp1);
  result = (CString *) &((CModInfo const *)arg1)->GetPath();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModInfo_GetDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModInfo *arg1 = (CModInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModInfo_GetDescription",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_GetDescription" "', argument " "1"" of type '" "CModInfo const *""'"); 
  }
  arg1 = reinterpret_cast< CModInfo * >(argp1);
  result = (CString *) &((CModInfo const *)arg1)->GetDescription();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModInfo_GetWikiPage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModInfo *arg1 = (CModInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModInfo_GetWikiPage",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_GetWikiPage" "', argument " "1"" of type '" "CModInfo const *""'"); 
  }
  arg1 = reinterpret_cast< CModInfo * >(argp1);
  result = (CString *) &((CModInfo const *)arg1)->GetWikiPage();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModInfo_GetArgsHelpText(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModInfo *arg1 = (CModInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModInfo_GetArgsHelpText",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_GetArgsHelpText" "', argument " "1"" of type '" "CModInfo const *""'"); 
  }
  arg1 = reinterpret_cast< CModInfo * >(argp1);
  result = (CString *) &((CModInfo const *)arg1)->GetArgsHelpText();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModInfo_GetHasArgs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModInfo *arg1 = (CModInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModInfo_GetHasArgs",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_GetHasArgs" "', argument " "1"" of type '" "CModInfo const *""'"); 
  }
  arg1 = reinterpret_cast< CModInfo * >(argp1);
  result = (bool)((CModInfo const *)arg1)->GetHasArgs();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModInfo_GetLoader(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModInfo *arg1 = (CModInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CModInfo::ModLoader result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModInfo_GetLoader",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_GetLoader" "', argument " "1"" of type '" "CModInfo const *""'"); 
  }
  arg1 = reinterpret_cast< CModInfo * >(argp1);
  result = (CModInfo::ModLoader)((CModInfo const *)arg1)->GetLoader();
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CModule);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModInfo_GetDefaultType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModInfo *arg1 = (CModInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CModInfo::EModuleType result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModInfo_GetDefaultType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_GetDefaultType" "', argument " "1"" of type '" "CModInfo const *""'"); 
  }
  arg1 = reinterpret_cast< CModInfo * >(argp1);
  result = (CModInfo::EModuleType)((CModInfo const *)arg1)->GetDefaultType();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModInfo_SetName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModInfo *arg1 = (CModInfo *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModInfo_SetName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_SetName" "', argument " "1"" of type '" "CModInfo *""'"); 
  }
  arg1 = reinterpret_cast< CModInfo * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModInfo_SetName" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModInfo_SetName" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetName((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModInfo_SetPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModInfo *arg1 = (CModInfo *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModInfo_SetPath",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_SetPath" "', argument " "1"" of type '" "CModInfo *""'"); 
  }
  arg1 = reinterpret_cast< CModInfo * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModInfo_SetPath" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModInfo_SetPath" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetPath((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModInfo_SetDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModInfo *arg1 = (CModInfo *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModInfo_SetDescription",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_SetDescription" "', argument " "1"" of type '" "CModInfo *""'"); 
  }
  arg1 = reinterpret_cast< CModInfo * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModInfo_SetDescription" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModInfo_SetDescription" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetDescription((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModInfo_SetWikiPage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModInfo *arg1 = (CModInfo *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModInfo_SetWikiPage",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_SetWikiPage" "', argument " "1"" of type '" "CModInfo *""'"); 
  }
  arg1 = reinterpret_cast< CModInfo * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModInfo_SetWikiPage" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModInfo_SetWikiPage" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetWikiPage((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModInfo_SetArgsHelpText(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModInfo *arg1 = (CModInfo *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModInfo_SetArgsHelpText",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_SetArgsHelpText" "', argument " "1"" of type '" "CModInfo *""'"); 
  }
  arg1 = reinterpret_cast< CModInfo * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModInfo_SetArgsHelpText" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModInfo_SetArgsHelpText" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetArgsHelpText((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModInfo_SetHasArgs__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModInfo *arg1 = (CModInfo *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModInfo_SetHasArgs",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_SetHasArgs" "', argument " "1"" of type '" "CModInfo *""'"); 
  }
  arg1 = reinterpret_cast< CModInfo * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CModInfo_SetHasArgs" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetHasArgs(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModInfo_SetHasArgs__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModInfo *arg1 = (CModInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModInfo_SetHasArgs",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_SetHasArgs" "', argument " "1"" of type '" "CModInfo *""'"); 
  }
  arg1 = reinterpret_cast< CModInfo * >(argp1);
  (arg1)->SetHasArgs();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModInfo_SetHasArgs(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CModInfo, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CModInfo_SetHasArgs__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CModInfo, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CModInfo_SetHasArgs__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CModInfo_SetHasArgs'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CModInfo::SetHasArgs(bool)\n"
    "    CModInfo::SetHasArgs()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CModInfo_SetLoader(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModInfo *arg1 = (CModInfo *) 0 ;
  CModInfo::ModLoader arg2 = (CModInfo::ModLoader) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModInfo_SetLoader",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_SetLoader" "', argument " "1"" of type '" "CModInfo *""'"); 
  }
  arg1 = reinterpret_cast< CModInfo * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CModule);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "CModInfo_SetLoader" "', argument " "2"" of type '" "CModInfo::ModLoader""'"); 
    }
  }
  (arg1)->SetLoader(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModInfo_SetDefaultType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModInfo *arg1 = (CModInfo *) 0 ;
  CModInfo::EModuleType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModInfo_SetDefaultType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_SetDefaultType" "', argument " "1"" of type '" "CModInfo *""'"); 
  }
  arg1 = reinterpret_cast< CModInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CModInfo_SetDefaultType" "', argument " "2"" of type '" "CModInfo::EModuleType""'");
  } 
  arg2 = static_cast< CModInfo::EModuleType >(val2);
  (arg1)->SetDefaultType(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CModInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CModInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CModCommand__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModCommand *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CModCommand")) SWIG_fail;
  result = (CModCommand *)new CModCommand();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModCommand, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CModCommand__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  CModCommand::ModCmdFunc arg2 ;
  CString *arg3 = 0 ;
  CString *arg4 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CModCommand *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_CModCommand",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CModCommand" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CModCommand" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  {
    int res = SWIG_ConvertMember(obj1, SWIG_as_voidptr(&arg2), sizeof(CModCommand::ModCmdFunc),SWIGTYPE_m_CModule__f_r_q_const__CString__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "new_CModCommand" "', argument " "2"" of type '" "CModCommand::ModCmdFunc""'"); 
    }
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CModCommand" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CModCommand" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CModCommand" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CModCommand" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  result = (CModCommand *)new CModCommand((CString const &)*arg1,arg2,(CString const &)*arg3,(CString const &)*arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModCommand, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CModCommand__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModCommand *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CModCommand *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_CModCommand",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_CModCommand,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CModCommand" "', argument " "1"" of type '" "CModCommand const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CModCommand" "', argument " "1"" of type '" "CModCommand const &""'"); 
  }
  arg1 = reinterpret_cast< CModCommand * >(argp1);
  result = (CModCommand *)new CModCommand((CModCommand const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModCommand, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CModCommand(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_CModCommand__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_CModCommand, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_CModCommand__SWIG_2(self, args);
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_m_CModule__f_r_q_const__CString__void, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (CString**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_new_CModCommand__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_CModCommand'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CModCommand::CModCommand()\n"
    "    CModCommand::CModCommand(CString const &,CModCommand::ModCmdFunc,CString const &,CString const &)\n"
    "    CModCommand::CModCommand(CModCommand const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CModCommand_InitHelp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTable *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModCommand_InitHelp",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_CTable,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModCommand_InitHelp" "', argument " "1"" of type '" "CTable &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModCommand_InitHelp" "', argument " "1"" of type '" "CTable &""'"); 
  }
  arg1 = reinterpret_cast< CTable * >(argp1);
  CModCommand::InitHelp(*arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModCommand_AddHelp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModCommand *arg1 = (CModCommand *) 0 ;
  CTable *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModCommand_AddHelp",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModCommand, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModCommand_AddHelp" "', argument " "1"" of type '" "CModCommand const *""'"); 
  }
  arg1 = reinterpret_cast< CModCommand * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CTable,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModCommand_AddHelp" "', argument " "2"" of type '" "CTable &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModCommand_AddHelp" "', argument " "2"" of type '" "CTable &""'"); 
  }
  arg2 = reinterpret_cast< CTable * >(argp2);
  ((CModCommand const *)arg1)->AddHelp(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModCommand_GetCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModCommand *arg1 = (CModCommand *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModCommand_GetCommand",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModCommand, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModCommand_GetCommand" "', argument " "1"" of type '" "CModCommand const *""'"); 
  }
  arg1 = reinterpret_cast< CModCommand * >(argp1);
  result = (CString *) &((CModCommand const *)arg1)->GetCommand();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModCommand_GetFunction(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModCommand *arg1 = (CModCommand *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CModCommand::ModCmdFunc result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModCommand_GetFunction",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModCommand, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModCommand_GetFunction" "', argument " "1"" of type '" "CModCommand const *""'"); 
  }
  arg1 = reinterpret_cast< CModCommand * >(argp1);
  result = (CModCommand::ModCmdFunc)((CModCommand const *)arg1)->GetFunction();
  resultobj = SWIG_NewMemberObj(SWIG_as_voidptr(&result), sizeof(CModCommand::ModCmdFunc), SWIGTYPE_m_CModule__f_r_q_const__CString__void);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModCommand_GetArgs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModCommand *arg1 = (CModCommand *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModCommand_GetArgs",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModCommand, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModCommand_GetArgs" "', argument " "1"" of type '" "CModCommand const *""'"); 
  }
  arg1 = reinterpret_cast< CModCommand * >(argp1);
  result = (CString *) &((CModCommand const *)arg1)->GetArgs();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModCommand_GetDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModCommand *arg1 = (CModCommand *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModCommand_GetDescription",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModCommand, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModCommand_GetDescription" "', argument " "1"" of type '" "CModCommand const *""'"); 
  }
  arg1 = reinterpret_cast< CModCommand * >(argp1);
  result = (CString *) &((CModCommand const *)arg1)->GetDescription();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModCommand_Call(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModCommand *arg1 = (CModCommand *) 0 ;
  CModule *arg2 = (CModule *) 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModCommand_Call",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModCommand, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModCommand_Call" "', argument " "1"" of type '" "CModCommand const *""'"); 
  }
  arg1 = reinterpret_cast< CModCommand * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModCommand_Call" "', argument " "2"" of type '" "CModule *""'"); 
  }
  arg2 = reinterpret_cast< CModule * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModCommand_Call" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModCommand_Call" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  ((CModCommand const *)arg1)->Call(arg2,(CString const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CModCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModCommand *arg1 = (CModCommand *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CModCommand",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModCommand, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CModCommand" "', argument " "1"" of type '" "CModCommand *""'"); 
  }
  arg1 = reinterpret_cast< CModCommand * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CModCommand_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CModCommand, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CModule(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ModHandle arg1 = (ModHandle) 0 ;
  CUser *arg2 = (CUser *) 0 ;
  CIRCNetwork *arg3 = (CIRCNetwork *) 0 ;
  CString *arg4 = 0 ;
  CString *arg5 = 0 ;
  int res1 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  CModule *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_CModule",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0,SWIG_as_voidptrptr(&arg1), 0, 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CModule" "', argument " "1"" of type '" "ModHandle""'"); 
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CModule" "', argument " "2"" of type '" "CUser *""'"); 
  }
  arg2 = reinterpret_cast< CUser * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CModule" "', argument " "3"" of type '" "CIRCNetwork *""'"); 
  }
  arg3 = reinterpret_cast< CIRCNetwork * >(argp3);
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CModule" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CModule" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res5 = SWIG_AsPtr_std_string(obj4, &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_CModule" "', argument " "5"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CModule" "', argument " "5"" of type '" "CString const &""'"); 
    }
    arg5 = ptr;
  }
  result = (CModule *)new CModule(arg1,arg2,arg3,(CString const &)*arg4,(CString const &)*arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModule, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  if (SWIG_IsNewObj(res5)) free((char*)arg5);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  if (SWIG_IsNewObj(res5)) free((char*)arg5);
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CModule(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CModule",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CModule" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_SetUser(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CUser *arg2 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_SetUser",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_SetUser" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_SetUser" "', argument " "2"" of type '" "CUser *""'"); 
  }
  arg2 = reinterpret_cast< CUser * >(argp2);
  (arg1)->SetUser(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_SetNetwork(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CIRCNetwork *arg2 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_SetNetwork",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_SetNetwork" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_SetNetwork" "', argument " "2"" of type '" "CIRCNetwork *""'"); 
  }
  arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
  (arg1)->SetNetwork(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_SetClient(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CClient *arg2 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_SetClient",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_SetClient" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_SetClient" "', argument " "2"" of type '" "CClient *""'"); 
  }
  arg2 = reinterpret_cast< CClient * >(argp2);
  (arg1)->SetClient(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_Unload(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_Unload",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_Unload" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  (arg1)->Unload();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnLoad(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModule_OnLoad",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnLoad" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnLoad" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnLoad" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (bool)(arg1)->OnLoad((CString const &)*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnBoot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_OnBoot",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnBoot" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  result = (bool)(arg1)->OnBoot();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_WebRequiresLogin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_WebRequiresLogin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_WebRequiresLogin" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  result = (bool)(arg1)->WebRequiresLogin();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_WebRequiresAdmin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_WebRequiresAdmin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_WebRequiresAdmin" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  result = (bool)(arg1)->WebRequiresAdmin();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_GetWebMenuTitle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_GetWebMenuTitle",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_GetWebMenuTitle" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  result = (arg1)->GetWebMenuTitle();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_GetWebPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_GetWebPath",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_GetWebPath" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  result = (arg1)->GetWebPath();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_GetWebFilesPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_GetWebFilesPath",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_GetWebFilesPath" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  result = (arg1)->GetWebFilesPath();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnWebPreRequest(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CWebSock *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModule_OnWebPreRequest",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnWebPreRequest" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CWebSock,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnWebPreRequest" "', argument " "2"" of type '" "CWebSock &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnWebPreRequest" "', argument " "2"" of type '" "CWebSock &""'"); 
  }
  arg2 = reinterpret_cast< CWebSock * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnWebPreRequest" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnWebPreRequest" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = (bool)(arg1)->OnWebPreRequest(*arg2,(CString const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnWebRequest(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CWebSock *arg2 = 0 ;
  CString *arg3 = 0 ;
  CTemplate *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CModule_OnWebRequest",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnWebRequest" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CWebSock,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnWebRequest" "', argument " "2"" of type '" "CWebSock &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnWebRequest" "', argument " "2"" of type '" "CWebSock &""'"); 
  }
  arg2 = reinterpret_cast< CWebSock * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnWebRequest" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnWebRequest" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_CTemplate,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModule_OnWebRequest" "', argument " "4"" of type '" "CTemplate &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnWebRequest" "', argument " "4"" of type '" "CTemplate &""'"); 
  }
  arg4 = reinterpret_cast< CTemplate * >(argp4);
  result = (bool)(arg1)->OnWebRequest(*arg2,(CString const &)*arg3,*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_AddSubPage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  SwigValueWrapper< CSmartPtr< CWebSubPage > > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_AddSubPage",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_AddSubPage" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CSmartPtrT_CWebSubPage_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_AddSubPage" "', argument " "2"" of type '" "TWebSubPage""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_AddSubPage" "', argument " "2"" of type '" "TWebSubPage""'");
    } else {
      TWebSubPage * temp = reinterpret_cast< TWebSubPage * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->AddSubPage(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_ClearSubPages(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_ClearSubPages",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_ClearSubPages" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  (arg1)->ClearSubPages();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_GetSubPages(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  VWebSubPages *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_GetSubPages",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_GetSubPages" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  result = (VWebSubPages *) &(arg1)->GetSubPages();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnEmbeddedWebRequest(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CWebSock *arg2 = 0 ;
  CString *arg3 = 0 ;
  CTemplate *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CModule_OnEmbeddedWebRequest",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnEmbeddedWebRequest" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CWebSock,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnEmbeddedWebRequest" "', argument " "2"" of type '" "CWebSock &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnEmbeddedWebRequest" "', argument " "2"" of type '" "CWebSock &""'"); 
  }
  arg2 = reinterpret_cast< CWebSock * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnEmbeddedWebRequest" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnEmbeddedWebRequest" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_CTemplate,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModule_OnEmbeddedWebRequest" "', argument " "4"" of type '" "CTemplate &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnEmbeddedWebRequest" "', argument " "4"" of type '" "CTemplate &""'"); 
  }
  arg4 = reinterpret_cast< CTemplate * >(argp4);
  result = (bool)(arg1)->OnEmbeddedWebRequest(*arg2,(CString const &)*arg3,*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnPreRehash(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_OnPreRehash",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnPreRehash" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  (arg1)->OnPreRehash();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnPostRehash(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_OnPostRehash",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnPostRehash" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  (arg1)->OnPostRehash();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnIRCDisconnected(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_OnIRCDisconnected",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnIRCDisconnected" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  (arg1)->OnIRCDisconnected();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnIRCConnected(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_OnIRCConnected",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnIRCConnected" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  (arg1)->OnIRCConnected();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnIRCConnecting(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CIRCSock *arg2 = (CIRCSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_OnIRCConnecting",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnIRCConnecting" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnIRCConnecting" "', argument " "2"" of type '" "CIRCSock *""'"); 
  }
  arg2 = reinterpret_cast< CIRCSock * >(argp2);
  result = (CModule::EModRet)(arg1)->OnIRCConnecting(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnIRCConnectionError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CIRCSock *arg2 = (CIRCSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_OnIRCConnectionError",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnIRCConnectionError" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnIRCConnectionError" "', argument " "2"" of type '" "CIRCSock *""'"); 
  }
  arg2 = reinterpret_cast< CIRCSock * >(argp2);
  (arg1)->OnIRCConnectionError(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnIRCRegistration(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  CString *arg4 = 0 ;
  CString *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CModule_OnIRCRegistration",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnIRCRegistration" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sPass");
    }
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sNick");
    }
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj3, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg4 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 4 sIdent");
    }
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj4, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg5 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 5 sRealName");
    }
  }
  result = (CModule::EModRet)(arg1)->OnIRCRegistration(*arg2,*arg3,*arg4,*arg5);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnBroadcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_OnBroadcast",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnBroadcast" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sMessage");
    }
  }
  result = (CModule::EModRet)(arg1)->OnBroadcast(*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnChanPermission(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CNick *arg2 = 0 ;
  CNick *arg3 = 0 ;
  CChan *arg4 = 0 ;
  unsigned char arg5 ;
  bool arg6 ;
  bool arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  unsigned char val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:CModule_OnChanPermission",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnChanPermission" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnChanPermission" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanPermission" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnChanPermission" "', argument " "3"" of type '" "CNick const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanPermission" "', argument " "3"" of type '" "CNick const &""'"); 
  }
  arg3 = reinterpret_cast< CNick * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModule_OnChanPermission" "', argument " "4"" of type '" "CChan &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanPermission" "', argument " "4"" of type '" "CChan &""'"); 
  }
  arg4 = reinterpret_cast< CChan * >(argp4);
  ecode5 = SWIG_AsVal_unsigned_SS_char(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CModule_OnChanPermission" "', argument " "5"" of type '" "unsigned char""'");
  } 
  arg5 = static_cast< unsigned char >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CModule_OnChanPermission" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  ecode7 = SWIG_AsVal_bool(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "CModule_OnChanPermission" "', argument " "7"" of type '" "bool""'");
  } 
  arg7 = static_cast< bool >(val7);
  (arg1)->OnChanPermission((CNick const &)*arg2,(CNick const &)*arg3,*arg4,arg5,arg6,arg7);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnOp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CNick *arg2 = 0 ;
  CNick *arg3 = 0 ;
  CChan *arg4 = 0 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CModule_OnOp",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnOp" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnOp" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnOp" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnOp" "', argument " "3"" of type '" "CNick const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnOp" "', argument " "3"" of type '" "CNick const &""'"); 
  }
  arg3 = reinterpret_cast< CNick * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModule_OnOp" "', argument " "4"" of type '" "CChan &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnOp" "', argument " "4"" of type '" "CChan &""'"); 
  }
  arg4 = reinterpret_cast< CChan * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CModule_OnOp" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  (arg1)->OnOp((CNick const &)*arg2,(CNick const &)*arg3,*arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnDeop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CNick *arg2 = 0 ;
  CNick *arg3 = 0 ;
  CChan *arg4 = 0 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CModule_OnDeop",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnDeop" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnDeop" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnDeop" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnDeop" "', argument " "3"" of type '" "CNick const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnDeop" "', argument " "3"" of type '" "CNick const &""'"); 
  }
  arg3 = reinterpret_cast< CNick * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModule_OnDeop" "', argument " "4"" of type '" "CChan &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnDeop" "', argument " "4"" of type '" "CChan &""'"); 
  }
  arg4 = reinterpret_cast< CChan * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CModule_OnDeop" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  (arg1)->OnDeop((CNick const &)*arg2,(CNick const &)*arg3,*arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnVoice(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CNick *arg2 = 0 ;
  CNick *arg3 = 0 ;
  CChan *arg4 = 0 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CModule_OnVoice",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnVoice" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnVoice" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnVoice" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnVoice" "', argument " "3"" of type '" "CNick const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnVoice" "', argument " "3"" of type '" "CNick const &""'"); 
  }
  arg3 = reinterpret_cast< CNick * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModule_OnVoice" "', argument " "4"" of type '" "CChan &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnVoice" "', argument " "4"" of type '" "CChan &""'"); 
  }
  arg4 = reinterpret_cast< CChan * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CModule_OnVoice" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  (arg1)->OnVoice((CNick const &)*arg2,(CNick const &)*arg3,*arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnDevoice(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CNick *arg2 = 0 ;
  CNick *arg3 = 0 ;
  CChan *arg4 = 0 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CModule_OnDevoice",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnDevoice" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnDevoice" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnDevoice" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnDevoice" "', argument " "3"" of type '" "CNick const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnDevoice" "', argument " "3"" of type '" "CNick const &""'"); 
  }
  arg3 = reinterpret_cast< CNick * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModule_OnDevoice" "', argument " "4"" of type '" "CChan &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnDevoice" "', argument " "4"" of type '" "CChan &""'"); 
  }
  arg4 = reinterpret_cast< CChan * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CModule_OnDevoice" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  (arg1)->OnDevoice((CNick const &)*arg2,(CNick const &)*arg3,*arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnMode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CNick *arg2 = 0 ;
  CChan *arg3 = 0 ;
  char arg4 ;
  CString *arg5 = 0 ;
  bool arg6 ;
  bool arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  char val4 ;
  int ecode4 = 0 ;
  int res5 = SWIG_OLDOBJ ;
  bool val6 ;
  int ecode6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:CModule_OnMode",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnMode" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnMode" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnMode" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnMode" "', argument " "3"" of type '" "CChan &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnMode" "', argument " "3"" of type '" "CChan &""'"); 
  }
  arg3 = reinterpret_cast< CChan * >(argp3);
  ecode4 = SWIG_AsVal_char(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CModule_OnMode" "', argument " "4"" of type '" "char""'");
  } 
  arg4 = static_cast< char >(val4);
  {
    CString *ptr = (CString *)0;
    res5 = SWIG_AsPtr_std_string(obj4, &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CModule_OnMode" "', argument " "5"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnMode" "', argument " "5"" of type '" "CString const &""'"); 
    }
    arg5 = ptr;
  }
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CModule_OnMode" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  ecode7 = SWIG_AsVal_bool(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "CModule_OnMode" "', argument " "7"" of type '" "bool""'");
  } 
  arg7 = static_cast< bool >(val7);
  (arg1)->OnMode((CNick const &)*arg2,*arg3,arg4,(CString const &)*arg5,arg6,arg7);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res5)) free((char*)arg5);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res5)) free((char*)arg5);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnRawMode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CNick *arg2 = 0 ;
  CChan *arg3 = 0 ;
  CString *arg4 = 0 ;
  CString *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CModule_OnRawMode",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnRawMode" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnRawMode" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnRawMode" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnRawMode" "', argument " "3"" of type '" "CChan &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnRawMode" "', argument " "3"" of type '" "CChan &""'"); 
  }
  arg3 = reinterpret_cast< CChan * >(argp3);
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModule_OnRawMode" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnRawMode" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res5 = SWIG_AsPtr_std_string(obj4, &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CModule_OnRawMode" "', argument " "5"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnRawMode" "', argument " "5"" of type '" "CString const &""'"); 
    }
    arg5 = ptr;
  }
  (arg1)->OnRawMode((CNick const &)*arg2,*arg3,(CString const &)*arg4,(CString const &)*arg5);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  if (SWIG_IsNewObj(res5)) free((char*)arg5);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  if (SWIG_IsNewObj(res5)) free((char*)arg5);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnRaw(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_OnRaw",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnRaw" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sLine");
    }
  }
  result = (CModule::EModRet)(arg1)->OnRaw(*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnStatusCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_OnStatusCommand",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnStatusCommand" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sCommand");
    }
  }
  result = (CModule::EModRet)(arg1)->OnStatusCommand(*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnModCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_OnModCommand",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnModCommand" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnModCommand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnModCommand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->OnModCommand((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnUnknownModCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_OnUnknownModCommand",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnUnknownModCommand" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnUnknownModCommand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnUnknownModCommand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->OnUnknownModCommand((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnModNotice(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_OnModNotice",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnModNotice" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnModNotice" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnModNotice" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->OnModNotice((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnModCTCP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_OnModCTCP",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnModCTCP" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnModCTCP" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnModCTCP" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->OnModCTCP((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnQuit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CNick *arg2 = 0 ;
  CString *arg3 = 0 ;
  vector< CChan * > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CModule_OnQuit",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnQuit" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnQuit" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnQuit" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnQuit" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnQuit" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_vectorT_CChan_p_std__allocatorT_CChan_p_t_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModule_OnQuit" "', argument " "4"" of type '" "vector< CChan * > const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnQuit" "', argument " "4"" of type '" "vector< CChan * > const &""'"); 
  }
  arg4 = reinterpret_cast< vector< CChan * > * >(argp4);
  (arg1)->OnQuit((CNick const &)*arg2,(CString const &)*arg3,(vector< CChan * > const &)*arg4);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnNick(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CNick *arg2 = 0 ;
  CString *arg3 = 0 ;
  vector< CChan * > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CModule_OnNick",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnNick" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnNick" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnNick" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnNick" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnNick" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_vectorT_CChan_p_std__allocatorT_CChan_p_t_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModule_OnNick" "', argument " "4"" of type '" "vector< CChan * > const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnNick" "', argument " "4"" of type '" "vector< CChan * > const &""'"); 
  }
  arg4 = reinterpret_cast< vector< CChan * > * >(argp4);
  (arg1)->OnNick((CNick const &)*arg2,(CString const &)*arg3,(vector< CChan * > const &)*arg4);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnKick(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CNick *arg2 = 0 ;
  CString *arg3 = 0 ;
  CChan *arg4 = 0 ;
  CString *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int res5 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CModule_OnKick",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnKick" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnKick" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnKick" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnKick" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnKick" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModule_OnKick" "', argument " "4"" of type '" "CChan &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnKick" "', argument " "4"" of type '" "CChan &""'"); 
  }
  arg4 = reinterpret_cast< CChan * >(argp4);
  {
    CString *ptr = (CString *)0;
    res5 = SWIG_AsPtr_std_string(obj4, &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CModule_OnKick" "', argument " "5"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnKick" "', argument " "5"" of type '" "CString const &""'"); 
    }
    arg5 = ptr;
  }
  (arg1)->OnKick((CNick const &)*arg2,(CString const &)*arg3,*arg4,(CString const &)*arg5);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res5)) free((char*)arg5);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res5)) free((char*)arg5);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnJoin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CNick *arg2 = 0 ;
  CChan *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModule_OnJoin",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnJoin" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnJoin" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnJoin" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnJoin" "', argument " "3"" of type '" "CChan &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnJoin" "', argument " "3"" of type '" "CChan &""'"); 
  }
  arg3 = reinterpret_cast< CChan * >(argp3);
  (arg1)->OnJoin((CNick const &)*arg2,*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnPart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CNick *arg2 = 0 ;
  CChan *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CModule_OnPart",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnPart" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnPart" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnPart" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnPart" "', argument " "3"" of type '" "CChan &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnPart" "', argument " "3"" of type '" "CChan &""'"); 
  }
  arg3 = reinterpret_cast< CChan * >(argp3);
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModule_OnPart" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnPart" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  (arg1)->OnPart((CNick const &)*arg2,*arg3,(CString const &)*arg4);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnInvite(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CNick *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModule_OnInvite",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnInvite" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnInvite" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnInvite" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnInvite" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnInvite" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = (CModule::EModRet)(arg1)->OnInvite((CNick const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnChanBufferStarting(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CChan *arg2 = 0 ;
  CClient *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModule_OnChanBufferStarting",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnChanBufferStarting" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnChanBufferStarting" "', argument " "2"" of type '" "CChan &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanBufferStarting" "', argument " "2"" of type '" "CChan &""'"); 
  }
  arg2 = reinterpret_cast< CChan * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CClient,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnChanBufferStarting" "', argument " "3"" of type '" "CClient &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanBufferStarting" "', argument " "3"" of type '" "CClient &""'"); 
  }
  arg3 = reinterpret_cast< CClient * >(argp3);
  result = (CModule::EModRet)(arg1)->OnChanBufferStarting(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnChanBufferEnding(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CChan *arg2 = 0 ;
  CClient *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModule_OnChanBufferEnding",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnChanBufferEnding" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnChanBufferEnding" "', argument " "2"" of type '" "CChan &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanBufferEnding" "', argument " "2"" of type '" "CChan &""'"); 
  }
  arg2 = reinterpret_cast< CChan * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CClient,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnChanBufferEnding" "', argument " "3"" of type '" "CClient &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanBufferEnding" "', argument " "3"" of type '" "CClient &""'"); 
  }
  arg3 = reinterpret_cast< CClient * >(argp3);
  result = (CModule::EModRet)(arg1)->OnChanBufferEnding(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnChanBufferPlayLine(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CChan *arg2 = 0 ;
  CClient *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CModule_OnChanBufferPlayLine",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnChanBufferPlayLine" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnChanBufferPlayLine" "', argument " "2"" of type '" "CChan &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanBufferPlayLine" "', argument " "2"" of type '" "CChan &""'"); 
  }
  arg2 = reinterpret_cast< CChan * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CClient,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnChanBufferPlayLine" "', argument " "3"" of type '" "CClient &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanBufferPlayLine" "', argument " "3"" of type '" "CClient &""'"); 
  }
  arg3 = reinterpret_cast< CClient * >(argp3);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj3, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg4 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 4 sLine");
    }
  }
  result = (CModule::EModRet)(arg1)->OnChanBufferPlayLine(*arg2,*arg3,*arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnPrivBufferPlayLine(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CClient *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModule_OnPrivBufferPlayLine",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnPrivBufferPlayLine" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CClient,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnPrivBufferPlayLine" "', argument " "2"" of type '" "CClient &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnPrivBufferPlayLine" "', argument " "2"" of type '" "CClient &""'"); 
  }
  arg2 = reinterpret_cast< CClient * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sLine");
    }
  }
  result = (CModule::EModRet)(arg1)->OnPrivBufferPlayLine(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnClientLogin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_OnClientLogin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnClientLogin" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  (arg1)->OnClientLogin();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnClientDisconnect(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_OnClientDisconnect",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnClientDisconnect" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  (arg1)->OnClientDisconnect();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnUserRaw(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_OnUserRaw",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnUserRaw" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sLine");
    }
  }
  result = (CModule::EModRet)(arg1)->OnUserRaw(*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnUserCTCPReply(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModule_OnUserCTCPReply",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnUserCTCPReply" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sTarget");
    }
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (CModule::EModRet)(arg1)->OnUserCTCPReply(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnUserCTCP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModule_OnUserCTCP",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnUserCTCP" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sTarget");
    }
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (CModule::EModRet)(arg1)->OnUserCTCP(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnUserAction(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModule_OnUserAction",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnUserAction" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sTarget");
    }
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (CModule::EModRet)(arg1)->OnUserAction(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnUserMsg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModule_OnUserMsg",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnUserMsg" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sTarget");
    }
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (CModule::EModRet)(arg1)->OnUserMsg(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnUserNotice(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModule_OnUserNotice",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnUserNotice" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sTarget");
    }
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (CModule::EModRet)(arg1)->OnUserNotice(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnUserJoin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModule_OnUserJoin",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnUserJoin" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sChannel");
    }
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sKey");
    }
  }
  result = (CModule::EModRet)(arg1)->OnUserJoin(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnUserPart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModule_OnUserPart",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnUserPart" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sChannel");
    }
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (CModule::EModRet)(arg1)->OnUserPart(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnUserTopic(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModule_OnUserTopic",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnUserTopic" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sChannel");
    }
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sTopic");
    }
  }
  result = (CModule::EModRet)(arg1)->OnUserTopic(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnUserTopicRequest(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_OnUserTopicRequest",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnUserTopicRequest" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sChannel");
    }
  }
  result = (CModule::EModRet)(arg1)->OnUserTopicRequest(*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnCTCPReply(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CNick *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModule_OnCTCPReply",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnCTCPReply" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnCTCPReply" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnCTCPReply" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (CModule::EModRet)(arg1)->OnCTCPReply(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnPrivCTCP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CNick *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModule_OnPrivCTCP",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnPrivCTCP" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnPrivCTCP" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnPrivCTCP" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (CModule::EModRet)(arg1)->OnPrivCTCP(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnChanCTCP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CNick *arg2 = 0 ;
  CChan *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CModule_OnChanCTCP",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnChanCTCP" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnChanCTCP" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanCTCP" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnChanCTCP" "', argument " "3"" of type '" "CChan &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanCTCP" "', argument " "3"" of type '" "CChan &""'"); 
  }
  arg3 = reinterpret_cast< CChan * >(argp3);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj3, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg4 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 4 sMessage");
    }
  }
  result = (CModule::EModRet)(arg1)->OnChanCTCP(*arg2,*arg3,*arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnPrivAction(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CNick *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModule_OnPrivAction",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnPrivAction" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnPrivAction" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnPrivAction" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (CModule::EModRet)(arg1)->OnPrivAction(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnChanAction(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CNick *arg2 = 0 ;
  CChan *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CModule_OnChanAction",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnChanAction" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnChanAction" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanAction" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnChanAction" "', argument " "3"" of type '" "CChan &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanAction" "', argument " "3"" of type '" "CChan &""'"); 
  }
  arg3 = reinterpret_cast< CChan * >(argp3);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj3, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg4 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 4 sMessage");
    }
  }
  result = (CModule::EModRet)(arg1)->OnChanAction(*arg2,*arg3,*arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnPrivMsg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CNick *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModule_OnPrivMsg",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnPrivMsg" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnPrivMsg" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnPrivMsg" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (CModule::EModRet)(arg1)->OnPrivMsg(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnChanMsg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CNick *arg2 = 0 ;
  CChan *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CModule_OnChanMsg",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnChanMsg" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnChanMsg" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanMsg" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnChanMsg" "', argument " "3"" of type '" "CChan &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanMsg" "', argument " "3"" of type '" "CChan &""'"); 
  }
  arg3 = reinterpret_cast< CChan * >(argp3);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj3, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg4 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 4 sMessage");
    }
  }
  result = (CModule::EModRet)(arg1)->OnChanMsg(*arg2,*arg3,*arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnPrivNotice(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CNick *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModule_OnPrivNotice",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnPrivNotice" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnPrivNotice" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnPrivNotice" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (CModule::EModRet)(arg1)->OnPrivNotice(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnChanNotice(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CNick *arg2 = 0 ;
  CChan *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CModule_OnChanNotice",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnChanNotice" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnChanNotice" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanNotice" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnChanNotice" "', argument " "3"" of type '" "CChan &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanNotice" "', argument " "3"" of type '" "CChan &""'"); 
  }
  arg3 = reinterpret_cast< CChan * >(argp3);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj3, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg4 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 4 sMessage");
    }
  }
  result = (CModule::EModRet)(arg1)->OnChanNotice(*arg2,*arg3,*arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnTopic(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CNick *arg2 = 0 ;
  CChan *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CModule_OnTopic",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnTopic" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnTopic" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnTopic" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnTopic" "', argument " "3"" of type '" "CChan &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnTopic" "', argument " "3"" of type '" "CChan &""'"); 
  }
  arg3 = reinterpret_cast< CChan * >(argp3);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj3, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg4 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 4 sTopic");
    }
  }
  result = (CModule::EModRet)(arg1)->OnTopic(*arg2,*arg3,*arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnServerCapAvailable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_OnServerCapAvailable",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnServerCapAvailable" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnServerCapAvailable" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnServerCapAvailable" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->OnServerCapAvailable((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnServerCapResult(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModule_OnServerCapResult",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnServerCapResult" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnServerCapResult" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnServerCapResult" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CModule_OnServerCapResult" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  (arg1)->OnServerCapResult((CString const &)*arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnTimerAutoJoin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CChan *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_OnTimerAutoJoin",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnTimerAutoJoin" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnTimerAutoJoin" "', argument " "2"" of type '" "CChan &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnTimerAutoJoin" "', argument " "2"" of type '" "CChan &""'"); 
  }
  arg2 = reinterpret_cast< CChan * >(argp2);
  result = (CModule::EModRet)(arg1)->OnTimerAutoJoin(*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_GetDLL(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ModHandle result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_GetDLL",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_GetDLL" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  result = (ModHandle)(arg1)->GetDLL();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_GetCoreVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)":CModule_GetCoreVersion")) SWIG_fail;
  result = (double)CModule::GetCoreVersion();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_PutIRC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_PutIRC",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_PutIRC" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_PutIRC" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_PutIRC" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->PutIRC((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_PutUser(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_PutUser",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_PutUser" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_PutUser" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_PutUser" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->PutUser((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_PutStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_PutStatus",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_PutStatus" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_PutStatus" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_PutStatus" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->PutStatus((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_PutModule__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_PutModule",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_PutModule" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_PutModule" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_PutModule" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->PutModule((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_PutModule__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CTable *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_PutModule",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_PutModule" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CTable,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_PutModule" "', argument " "2"" of type '" "CTable const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_PutModule" "', argument " "2"" of type '" "CTable const &""'"); 
  }
  arg2 = reinterpret_cast< CTable * >(argp2);
  result = (unsigned int)(arg1)->PutModule((CTable const &)*arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_PutModule(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CModule, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_CTable, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CModule_PutModule__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CModule, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CModule_PutModule__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CModule_PutModule'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CModule::PutModule(CString const &)\n"
    "    CModule::PutModule(CTable const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CModule_PutModNotice(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_PutModNotice",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_PutModNotice" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_PutModNotice" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_PutModNotice" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->PutModNotice((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_GetModName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_GetModName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_GetModName" "', argument " "1"" of type '" "CModule const *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  result = (CString *) &((CModule const *)arg1)->GetModName();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_GetModNick(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_GetModNick",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_GetModNick" "', argument " "1"" of type '" "CModule const *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  result = ((CModule const *)arg1)->GetModNick();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_GetModDataDir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_GetModDataDir",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_GetModDataDir" "', argument " "1"" of type '" "CModule const *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  result = (CString *) &((CModule const *)arg1)->GetModDataDir();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_AddTimer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CTimer *arg2 = (CTimer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_AddTimer",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_AddTimer" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CTimer, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_AddTimer" "', argument " "2"" of type '" "CTimer *""'"); 
  }
  arg2 = reinterpret_cast< CTimer * >(argp2);
  result = (bool)(arg1)->AddTimer(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_AddTimer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  FPTimer_t arg2 = (FPTimer_t) 0 ;
  CString *arg3 = 0 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  CString *arg6 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  int res6 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:CModule_AddTimer",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_AddTimer" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_CModule_p_CFPTimer__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "CModule_AddTimer" "', argument " "2"" of type '" "FPTimer_t""'"); 
    }
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_AddTimer" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_AddTimer" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CModule_AddTimer" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CModule_AddTimer" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  {
    CString *ptr = (CString *)0;
    res6 = SWIG_AsPtr_std_string(obj5, &ptr);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CModule_AddTimer" "', argument " "6"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_AddTimer" "', argument " "6"" of type '" "CString const &""'"); 
    }
    arg6 = ptr;
  }
  result = (bool)(arg1)->AddTimer(arg2,(CString const &)*arg3,arg4,arg5,(CString const &)*arg6);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res6)) free((char*)arg6);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res6)) free((char*)arg6);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_AddTimer__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  FPTimer_t arg2 = (FPTimer_t) 0 ;
  CString *arg3 = 0 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CModule_AddTimer",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_AddTimer" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_CModule_p_CFPTimer__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "CModule_AddTimer" "', argument " "2"" of type '" "FPTimer_t""'"); 
    }
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_AddTimer" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_AddTimer" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CModule_AddTimer" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CModule_AddTimer" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  result = (bool)(arg1)->AddTimer(arg2,(CString const &)*arg3,arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_AddTimer__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  FPTimer_t arg2 = (FPTimer_t) 0 ;
  CString *arg3 = 0 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CModule_AddTimer",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_AddTimer" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_CModule_p_CFPTimer__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "CModule_AddTimer" "', argument " "2"" of type '" "FPTimer_t""'"); 
    }
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_AddTimer" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_AddTimer" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CModule_AddTimer" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (bool)(arg1)->AddTimer(arg2,(CString const &)*arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_AddTimer(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 6) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CModule, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CTimer, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CModule_AddTimer__SWIG_0(self, args);
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CModule, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *ptr = 0;
      int res = SWIG_ConvertFunctionPtr(argv[1], &ptr, SWIGTYPE_p_f_p_CModule_p_CFPTimer__void);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_CModule_AddTimer__SWIG_3(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CModule, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *ptr = 0;
      int res = SWIG_ConvertFunctionPtr(argv[1], &ptr, SWIGTYPE_p_f_p_CModule_p_CFPTimer__void);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_CModule_AddTimer__SWIG_2(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CModule, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *ptr = 0;
      int res = SWIG_ConvertFunctionPtr(argv[1], &ptr, SWIGTYPE_p_f_p_CModule_p_CFPTimer__void);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              int res = SWIG_AsPtr_std_string(argv[5], (CString**)(0));
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_CModule_AddTimer__SWIG_1(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CModule_AddTimer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CModule::AddTimer(CTimer *)\n"
    "    CModule::AddTimer(FPTimer_t,CString const &,unsigned int,unsigned int,CString const &)\n"
    "    CModule::AddTimer(FPTimer_t,CString const &,unsigned int,unsigned int)\n"
    "    CModule::AddTimer(FPTimer_t,CString const &,unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CModule_RemTimer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CTimer *arg2 = (CTimer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_RemTimer",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_RemTimer" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CTimer, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_RemTimer" "', argument " "2"" of type '" "CTimer *""'"); 
  }
  arg2 = reinterpret_cast< CTimer * >(argp2);
  result = (bool)(arg1)->RemTimer(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_RemTimer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_RemTimer",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_RemTimer" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_RemTimer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_RemTimer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->RemTimer((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_RemTimer(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CModule, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CTimer, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CModule_RemTimer__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CModule, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CModule_RemTimer__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CModule_RemTimer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CModule::RemTimer(CTimer *)\n"
    "    CModule::RemTimer(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CModule_UnlinkTimer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CTimer *arg2 = (CTimer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_UnlinkTimer",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_UnlinkTimer" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CTimer, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_UnlinkTimer" "', argument " "2"" of type '" "CTimer *""'"); 
  }
  arg2 = reinterpret_cast< CTimer * >(argp2);
  result = (bool)(arg1)->UnlinkTimer(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_FindTimer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CTimer *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_FindTimer",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_FindTimer" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_FindTimer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_FindTimer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (CTimer *)(arg1)->FindTimer((CString const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CTimer, 0 |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_BeginTimers(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< set< CTimer * >::const_iterator > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_BeginTimers",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_BeginTimers" "', argument " "1"" of type '" "CModule const *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  result = ((CModule const *)arg1)->BeginTimers();
  resultobj = SWIG_NewPointerObj((new set< CTimer * >::const_iterator(static_cast< const set< CTimer * >::const_iterator& >(result))), SWIGTYPE_p_setT_CTimer_p_t__const_iterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_EndTimers(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< set< CTimer * >::const_iterator > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_EndTimers",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_EndTimers" "', argument " "1"" of type '" "CModule const *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  result = ((CModule const *)arg1)->EndTimers();
  resultobj = SWIG_NewPointerObj((new set< CTimer * >::const_iterator(static_cast< const set< CTimer * >::const_iterator& >(result))), SWIGTYPE_p_setT_CTimer_p_t__const_iterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_ListTimers(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_ListTimers",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_ListTimers" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  (arg1)->ListTimers();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_AddSocket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CSocket *arg2 = (CSocket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_AddSocket",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_AddSocket" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CSocket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_AddSocket" "', argument " "2"" of type '" "CSocket *""'"); 
  }
  arg2 = reinterpret_cast< CSocket * >(argp2);
  result = (bool)(arg1)->AddSocket(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_RemSocket__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CSocket *arg2 = (CSocket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_RemSocket",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_RemSocket" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CSocket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_RemSocket" "', argument " "2"" of type '" "CSocket *""'"); 
  }
  arg2 = reinterpret_cast< CSocket * >(argp2);
  result = (bool)(arg1)->RemSocket(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_RemSocket__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_RemSocket",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_RemSocket" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_RemSocket" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_RemSocket" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->RemSocket((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_RemSocket(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CModule, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CSocket, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CModule_RemSocket__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CModule, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CModule_RemSocket__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CModule_RemSocket'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CModule::RemSocket(CSocket *)\n"
    "    CModule::RemSocket(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CModule_UnlinkSocket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CSocket *arg2 = (CSocket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_UnlinkSocket",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_UnlinkSocket" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CSocket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_UnlinkSocket" "', argument " "2"" of type '" "CSocket *""'"); 
  }
  arg2 = reinterpret_cast< CSocket * >(argp2);
  result = (bool)(arg1)->UnlinkSocket(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_FindSocket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CSocket *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_FindSocket",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_FindSocket" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_FindSocket" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_FindSocket" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (CSocket *)(arg1)->FindSocket((CString const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSocket, 0 |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_BeginSockets(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< set< CSocket * >::const_iterator > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_BeginSockets",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_BeginSockets" "', argument " "1"" of type '" "CModule const *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  result = ((CModule const *)arg1)->BeginSockets();
  resultobj = SWIG_NewPointerObj((new set< CSocket * >::const_iterator(static_cast< const set< CSocket * >::const_iterator& >(result))), SWIGTYPE_p_setT_CSocket_p_t__const_iterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_EndSockets(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< set< CSocket * >::const_iterator > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_EndSockets",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_EndSockets" "', argument " "1"" of type '" "CModule const *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  result = ((CModule const *)arg1)->EndSockets();
  resultobj = SWIG_NewPointerObj((new set< CSocket * >::const_iterator(static_cast< const set< CSocket * >::const_iterator& >(result))), SWIGTYPE_p_setT_CSocket_p_t__const_iterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_ListSockets(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_ListSockets",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_ListSockets" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  (arg1)->ListSockets();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_AddHelpCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_AddHelpCommand",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_AddHelpCommand" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  (arg1)->AddHelpCommand();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_AddCommand__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CModCommand *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_AddCommand",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_AddCommand" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CModCommand,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_AddCommand" "', argument " "2"" of type '" "CModCommand const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_AddCommand" "', argument " "2"" of type '" "CModCommand const &""'"); 
  }
  arg2 = reinterpret_cast< CModCommand * >(argp2);
  result = (bool)(arg1)->AddCommand((CModCommand const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_AddCommand__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  CModCommand::ModCmdFunc arg3 ;
  CString *arg4 = 0 ;
  CString *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CModule_AddCommand",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_AddCommand" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_AddCommand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_AddCommand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    int res = SWIG_ConvertMember(obj2, SWIG_as_voidptr(&arg3), sizeof(CModCommand::ModCmdFunc),SWIGTYPE_m_CModule__f_r_q_const__CString__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "CModule_AddCommand" "', argument " "3"" of type '" "CModCommand::ModCmdFunc""'"); 
    }
  }
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModule_AddCommand" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_AddCommand" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res5 = SWIG_AsPtr_std_string(obj4, &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CModule_AddCommand" "', argument " "5"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_AddCommand" "', argument " "5"" of type '" "CString const &""'"); 
    }
    arg5 = ptr;
  }
  result = (bool)(arg1)->AddCommand((CString const &)*arg2,arg3,(CString const &)*arg4,(CString const &)*arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  if (SWIG_IsNewObj(res5)) free((char*)arg5);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  if (SWIG_IsNewObj(res5)) free((char*)arg5);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_AddCommand__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  CModCommand::ModCmdFunc arg3 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CModule_AddCommand",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_AddCommand" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_AddCommand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_AddCommand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    int res = SWIG_ConvertMember(obj2, SWIG_as_voidptr(&arg3), sizeof(CModCommand::ModCmdFunc),SWIGTYPE_m_CModule__f_r_q_const__CString__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "CModule_AddCommand" "', argument " "3"" of type '" "CModCommand::ModCmdFunc""'"); 
    }
  }
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModule_AddCommand" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_AddCommand" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  result = (bool)(arg1)->AddCommand((CString const &)*arg2,arg3,(CString const &)*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_AddCommand__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  CModCommand::ModCmdFunc arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModule_AddCommand",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_AddCommand" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_AddCommand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_AddCommand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    int res = SWIG_ConvertMember(obj2, SWIG_as_voidptr(&arg3), sizeof(CModCommand::ModCmdFunc),SWIGTYPE_m_CModule__f_r_q_const__CString__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "CModule_AddCommand" "', argument " "3"" of type '" "CModCommand::ModCmdFunc""'"); 
    }
  }
  result = (bool)(arg1)->AddCommand((CString const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_AddCommand(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CModule, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_CModCommand, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CModule_AddCommand__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CModule, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_m_CModule__f_r_q_const__CString__void, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CModule_AddCommand__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CModule, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_m_CModule__f_r_q_const__CString__void, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (CString**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CModule_AddCommand__SWIG_2(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CModule, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_m_CModule__f_r_q_const__CString__void, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (CString**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string(argv[4], (CString**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_CModule_AddCommand__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CModule_AddCommand'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CModule::AddCommand(CModCommand const &)\n"
    "    CModule::AddCommand(CString const &,CModCommand::ModCmdFunc,CString const &,CString const &)\n"
    "    CModule::AddCommand(CString const &,CModCommand::ModCmdFunc,CString const &)\n"
    "    CModule::AddCommand(CString const &,CModCommand::ModCmdFunc)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CModule_RemCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_RemCommand",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_RemCommand" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_RemCommand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_RemCommand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->RemCommand((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_FindCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CModCommand *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_FindCommand",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_FindCommand" "', argument " "1"" of type '" "CModule const *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_FindCommand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_FindCommand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (CModCommand *)((CModule const *)arg1)->FindCommand((CString const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModCommand, 0 |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_HandleCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_HandleCommand",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_HandleCommand" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_HandleCommand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_HandleCommand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->HandleCommand((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_HandleHelpCommand__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_HandleHelpCommand",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_HandleHelpCommand" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_HandleHelpCommand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_HandleHelpCommand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->HandleHelpCommand((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_HandleHelpCommand__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_HandleHelpCommand",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_HandleHelpCommand" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  (arg1)->HandleHelpCommand();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_HandleHelpCommand(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CModule, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CModule_HandleHelpCommand__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CModule, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CModule_HandleHelpCommand__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CModule_HandleHelpCommand'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CModule::HandleHelpCommand(CString const &)\n"
    "    CModule::HandleHelpCommand()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CModule_LoadRegistry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_LoadRegistry",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_LoadRegistry" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  result = (bool)(arg1)->LoadRegistry();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_SaveRegistry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_SaveRegistry",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_SaveRegistry" "', argument " "1"" of type '" "CModule const *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  result = (bool)((CModule const *)arg1)->SaveRegistry();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_SetNV__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CModule_SetNV",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_SetNV" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_SetNV" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_SetNV" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_SetNV" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_SetNV" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CModule_SetNV" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (bool)(arg1)->SetNV((CString const &)*arg2,(CString const &)*arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_SetNV__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModule_SetNV",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_SetNV" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_SetNV" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_SetNV" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_SetNV" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_SetNV" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = (bool)(arg1)->SetNV((CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_SetNV(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CModule, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CModule_SetNV__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CModule, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_CModule_SetNV__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CModule_SetNV'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CModule::SetNV(CString const &,CString const &,bool)\n"
    "    CModule::SetNV(CString const &,CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CModule_GetNV(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_GetNV",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_GetNV" "', argument " "1"" of type '" "CModule const *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_GetNV" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_GetNV" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = ((CModule const *)arg1)->GetNV((CString const &)*arg2);
  resultobj = SWIG_From_std_string((CString)(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_DelNV__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModule_DelNV",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_DelNV" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_DelNV" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_DelNV" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CModule_DelNV" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (bool)(arg1)->DelNV((CString const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_DelNV__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_DelNV",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_DelNV" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_DelNV" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_DelNV" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->DelNV((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_FindNV(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  MCString::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_FindNV",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_FindNV" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_FindNV" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_FindNV" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (arg1)->FindNV((CString const &)*arg2);
  resultobj = SWIG_NewPointerObj((new MCString::iterator(static_cast< const MCString::iterator& >(result))), SWIGTYPE_p_MCString__iterator, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_EndNV(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  MCString::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_EndNV",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_EndNV" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  result = (arg1)->EndNV();
  resultobj = SWIG_NewPointerObj((new MCString::iterator(static_cast< const MCString::iterator& >(result))), SWIGTYPE_p_MCString__iterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_BeginNV(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  MCString::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_BeginNV",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_BeginNV" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  result = (arg1)->BeginNV();
  resultobj = SWIG_NewPointerObj((new MCString::iterator(static_cast< const MCString::iterator& >(result))), SWIGTYPE_p_MCString__iterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_DelNV__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  MCString::iterator arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_DelNV",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_DelNV" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_MCString__iterator,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_DelNV" "', argument " "2"" of type '" "MCString::iterator""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_DelNV" "', argument " "2"" of type '" "MCString::iterator""'");
    } else {
      MCString::iterator * temp = reinterpret_cast< MCString::iterator * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->DelNV(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_DelNV(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CModule, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_MCString__iterator, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CModule_DelNV__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CModule, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CModule_DelNV__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CModule, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CModule_DelNV__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CModule_DelNV'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CModule::DelNV(CString const &,bool)\n"
    "    CModule::DelNV(CString const &)\n"
    "    CModule::DelNV(MCString::iterator)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CModule_ClearNV__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_ClearNV",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_ClearNV" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CModule_ClearNV" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (bool)(arg1)->ClearNV(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_ClearNV__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_ClearNV",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_ClearNV" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  result = (bool)(arg1)->ClearNV();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_ClearNV(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CModule, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CModule_ClearNV__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CModule, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CModule_ClearNV__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CModule_ClearNV'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CModule::ClearNV(bool)\n"
    "    CModule::ClearNV()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CModule_GetSavePath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_GetSavePath",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_GetSavePath" "', argument " "1"" of type '" "CModule const *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  result = (CString *) &((CModule const *)arg1)->GetSavePath();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_SetType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CModInfo::EModuleType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_SetType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_SetType" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CModule_SetType" "', argument " "2"" of type '" "CModInfo::EModuleType""'");
  } 
  arg2 = static_cast< CModInfo::EModuleType >(val2);
  (arg1)->SetType(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_SetDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_SetDescription",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_SetDescription" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_SetDescription" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_SetDescription" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetDescription((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_SetModPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_SetModPath",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_SetModPath" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_SetModPath" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_SetModPath" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetModPath((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_SetArgs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_SetArgs",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_SetArgs" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_SetArgs" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_SetArgs" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetArgs((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_GetType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CModInfo::EModuleType result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_GetType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_GetType" "', argument " "1"" of type '" "CModule const *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  result = (CModInfo::EModuleType)((CModule const *)arg1)->GetType();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_GetDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_GetDescription",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_GetDescription" "', argument " "1"" of type '" "CModule const *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  result = (CString *) &((CModule const *)arg1)->GetDescription();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_GetArgs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_GetArgs",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_GetArgs" "', argument " "1"" of type '" "CModule const *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  result = (CString *) &((CModule const *)arg1)->GetArgs();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_GetModPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_GetModPath",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_GetModPath" "', argument " "1"" of type '" "CModule const *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  result = (CString *) &((CModule const *)arg1)->GetModPath();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_GetUser(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CUser *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_GetUser",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_GetUser" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  result = (CUser *)(arg1)->GetUser();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CUser, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_GetNetwork(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CIRCNetwork *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_GetNetwork",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_GetNetwork" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  result = (CIRCNetwork *)(arg1)->GetNetwork();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_GetClient(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CClient *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_GetClient",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_GetClient" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  result = (CClient *)(arg1)->GetClient();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CClient, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_GetManager(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CSockManager *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_GetManager",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_GetManager" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  result = (CSockManager *)(arg1)->GetManager();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSockManager, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnAddUser(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CUser *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModule_OnAddUser",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnAddUser" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CUser,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnAddUser" "', argument " "2"" of type '" "CUser &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnAddUser" "', argument " "2"" of type '" "CUser &""'"); 
  }
  arg2 = reinterpret_cast< CUser * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sErrorRet");
    }
  }
  result = (CModule::EModRet)(arg1)->OnAddUser(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnDeleteUser(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CUser *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_OnDeleteUser",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnDeleteUser" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CUser,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnDeleteUser" "', argument " "2"" of type '" "CUser &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnDeleteUser" "', argument " "2"" of type '" "CUser &""'"); 
  }
  arg2 = reinterpret_cast< CUser * >(argp2);
  result = (CModule::EModRet)(arg1)->OnDeleteUser(*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnClientConnect(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CZNCSock *arg2 = (CZNCSock *) 0 ;
  CString *arg3 = 0 ;
  unsigned short arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  unsigned short val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CModule_OnClientConnect",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnClientConnect" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CZNCSock, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnClientConnect" "', argument " "2"" of type '" "CZNCSock *""'"); 
  }
  arg2 = reinterpret_cast< CZNCSock * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnClientConnect" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnClientConnect" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_unsigned_SS_short(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CModule_OnClientConnect" "', argument " "4"" of type '" "unsigned short""'");
  } 
  arg4 = static_cast< unsigned short >(val4);
  (arg1)->OnClientConnect(arg2,(CString const &)*arg3,arg4);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnLoginAttempt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  SwigValueWrapper< CSmartPtr< CAuthBase > > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_OnLoginAttempt",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnLoginAttempt" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CSmartPtrT_CAuthBase_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnLoginAttempt" "', argument " "2"" of type '" "CSmartPtr< CAuthBase >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnLoginAttempt" "', argument " "2"" of type '" "CSmartPtr< CAuthBase >""'");
    } else {
      CSmartPtr< CAuthBase > * temp = reinterpret_cast< CSmartPtr< CAuthBase > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (CModule::EModRet)(arg1)->OnLoginAttempt(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnFailedLogin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModule_OnFailedLogin",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnFailedLogin" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnFailedLogin" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnFailedLogin" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnFailedLogin" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnFailedLogin" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->OnFailedLogin((CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnUnknownUserRaw(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CClient *arg2 = (CClient *) 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModule_OnUnknownUserRaw",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnUnknownUserRaw" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnUnknownUserRaw" "', argument " "2"" of type '" "CClient *""'"); 
  }
  arg2 = reinterpret_cast< CClient * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sLine");
    }
  }
  result = (CModule::EModRet)(arg1)->OnUnknownUserRaw(arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnClientCapLs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CClient *arg2 = (CClient *) 0 ;
  SCString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModule_OnClientCapLs",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnClientCapLs" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnClientCapLs" "', argument " "2"" of type '" "CClient *""'"); 
  }
  arg2 = reinterpret_cast< CClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_SCString,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnClientCapLs" "', argument " "3"" of type '" "SCString &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnClientCapLs" "', argument " "3"" of type '" "SCString &""'"); 
  }
  arg3 = reinterpret_cast< SCString * >(argp3);
  (arg1)->OnClientCapLs(arg2,*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_IsClientCapSupported(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CClient *arg2 = (CClient *) 0 ;
  CString *arg3 = 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CModule_IsClientCapSupported",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_IsClientCapSupported" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_IsClientCapSupported" "', argument " "2"" of type '" "CClient *""'"); 
  }
  arg2 = reinterpret_cast< CClient * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_IsClientCapSupported" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_IsClientCapSupported" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CModule_IsClientCapSupported" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (bool)(arg1)->IsClientCapSupported(arg2,(CString const &)*arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnClientCapRequest(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CClient *arg2 = (CClient *) 0 ;
  CString *arg3 = 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CModule_OnClientCapRequest",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnClientCapRequest" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnClientCapRequest" "', argument " "2"" of type '" "CClient *""'"); 
  }
  arg2 = reinterpret_cast< CClient * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnClientCapRequest" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnClientCapRequest" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CModule_OnClientCapRequest" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  (arg1)->OnClientCapRequest(arg2,(CString const &)*arg3,arg4);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnModuleLoading(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  CModInfo::EModuleType arg4 ;
  bool *arg5 = 0 ;
  CString *arg6 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:CModule_OnModuleLoading",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnModuleLoading" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnModuleLoading" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnModuleLoading" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnModuleLoading" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnModuleLoading" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CModule_OnModuleLoading" "', argument " "4"" of type '" "CModInfo::EModuleType""'");
  } 
  arg4 = static_cast< CModInfo::EModuleType >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_bool,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CModule_OnModuleLoading" "', argument " "5"" of type '" "bool &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnModuleLoading" "', argument " "5"" of type '" "bool &""'"); 
  }
  arg5 = reinterpret_cast< bool * >(argp5);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj5, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg6 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 6 sRetMsg");
    }
  }
  result = (CModule::EModRet)(arg1)->OnModuleLoading((CString const &)*arg2,(CString const &)*arg3,arg4,*arg5,*arg6);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnModuleUnloading(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CModule *arg2 = (CModule *) 0 ;
  bool *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CModule_OnModuleUnloading",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnModuleUnloading" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnModuleUnloading" "', argument " "2"" of type '" "CModule *""'"); 
  }
  arg2 = reinterpret_cast< CModule * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_bool,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnModuleUnloading" "', argument " "3"" of type '" "bool &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnModuleUnloading" "', argument " "3"" of type '" "bool &""'"); 
  }
  arg3 = reinterpret_cast< bool * >(argp3);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj3, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg4 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 4 sRetMsg");
    }
  }
  result = (CModule::EModRet)(arg1)->OnModuleUnloading(arg2,*arg3,*arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnGetModInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CModInfo *arg2 = 0 ;
  CString *arg3 = 0 ;
  bool *arg4 = 0 ;
  CString *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CModule_OnGetModInfo",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnGetModInfo" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CModInfo,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnGetModInfo" "', argument " "2"" of type '" "CModInfo &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnGetModInfo" "', argument " "2"" of type '" "CModInfo &""'"); 
  }
  arg2 = reinterpret_cast< CModInfo * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnGetModInfo" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnGetModInfo" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_bool,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModule_OnGetModInfo" "', argument " "4"" of type '" "bool &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnGetModInfo" "', argument " "4"" of type '" "bool &""'"); 
  }
  arg4 = reinterpret_cast< bool * >(argp4);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj4, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg5 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 5 sRetMsg");
    }
  }
  result = (CModule::EModRet)(arg1)->OnGetModInfo(*arg2,(CString const &)*arg3,*arg4,*arg5);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_OnGetAvailableMods(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  set< CModInfo > *arg2 = 0 ;
  CModInfo::EModuleType arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModule_OnGetAvailableMods",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnGetAvailableMods" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_setT_CModInfo_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnGetAvailableMods" "', argument " "2"" of type '" "set< CModInfo > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnGetAvailableMods" "', argument " "2"" of type '" "set< CModInfo > &""'"); 
  }
  arg2 = reinterpret_cast< set< CModInfo > * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CModule_OnGetAvailableMods" "', argument " "3"" of type '" "CModInfo::EModuleType""'");
  } 
  arg3 = static_cast< CModInfo::EModuleType >(val3);
  (arg1)->OnGetAvailableMods(*arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule___str__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule___str__" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  result = CModule___str__(arg1);
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_BeginNV_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  MCString_iter result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModule_BeginNV_",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_BeginNV_" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  result = CModule_BeginNV_(arg1);
  resultobj = SWIG_NewPointerObj((new MCString_iter(static_cast< const MCString_iter& >(result))), SWIGTYPE_p_MCString_iter, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModule_ExistsNV(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModule_ExistsNV",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_ExistsNV" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_ExistsNV" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_ExistsNV" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)CModule_ExistsNV(arg1,(CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *CModule_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CModule, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CModules(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CModules")) SWIG_fail;
  result = (CModules *)new CModules();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModules, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CModules(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CModules",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CModules" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_SetUser(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CUser *arg2 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModules_SetUser",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_SetUser" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_SetUser" "', argument " "2"" of type '" "CUser *""'"); 
  }
  arg2 = reinterpret_cast< CUser * >(argp2);
  (arg1)->SetUser(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_SetNetwork(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CIRCNetwork *arg2 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModules_SetNetwork",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_SetNetwork" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_SetNetwork" "', argument " "2"" of type '" "CIRCNetwork *""'"); 
  }
  arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
  (arg1)->SetNetwork(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_SetClient(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CClient *arg2 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModules_SetClient",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_SetClient" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_SetClient" "', argument " "2"" of type '" "CClient *""'"); 
  }
  arg2 = reinterpret_cast< CClient * >(argp2);
  (arg1)->SetClient(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_GetUser(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CUser *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModules_GetUser",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_GetUser" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  result = (CUser *)(arg1)->GetUser();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CUser, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_GetNetwork(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CIRCNetwork *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModules_GetNetwork",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_GetNetwork" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  result = (CIRCNetwork *)(arg1)->GetNetwork();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_GetClient(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CClient *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModules_GetClient",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_GetClient" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  result = (CClient *)(arg1)->GetClient();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CClient, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_UnloadAll(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModules_UnloadAll",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_UnloadAll" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  (arg1)->UnloadAll();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnBoot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModules_OnBoot",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnBoot" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  result = (bool)(arg1)->OnBoot();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnPreRehash(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModules_OnPreRehash",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnPreRehash" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  result = (bool)(arg1)->OnPreRehash();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnPostRehash(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModules_OnPostRehash",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnPostRehash" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  result = (bool)(arg1)->OnPostRehash();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnIRCDisconnected(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModules_OnIRCDisconnected",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnIRCDisconnected" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  result = (bool)(arg1)->OnIRCDisconnected();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnIRCConnected(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModules_OnIRCConnected",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnIRCConnected" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  result = (bool)(arg1)->OnIRCConnected();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnIRCConnecting(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CIRCSock *arg2 = (CIRCSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModules_OnIRCConnecting",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnIRCConnecting" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnIRCConnecting" "', argument " "2"" of type '" "CIRCSock *""'"); 
  }
  arg2 = reinterpret_cast< CIRCSock * >(argp2);
  result = (bool)(arg1)->OnIRCConnecting(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnIRCConnectionError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CIRCSock *arg2 = (CIRCSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModules_OnIRCConnectionError",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnIRCConnectionError" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnIRCConnectionError" "', argument " "2"" of type '" "CIRCSock *""'"); 
  }
  arg2 = reinterpret_cast< CIRCSock * >(argp2);
  result = (bool)(arg1)->OnIRCConnectionError(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnIRCRegistration(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  CString *arg4 = 0 ;
  CString *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CModules_OnIRCRegistration",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnIRCRegistration" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sPass");
    }
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sNick");
    }
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj3, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg4 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 4 sIdent");
    }
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj4, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg5 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 5 sRealName");
    }
  }
  result = (bool)(arg1)->OnIRCRegistration(*arg2,*arg3,*arg4,*arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnBroadcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModules_OnBroadcast",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnBroadcast" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sMessage");
    }
  }
  result = (bool)(arg1)->OnBroadcast(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnChanPermission(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CNick *arg2 = 0 ;
  CNick *arg3 = 0 ;
  CChan *arg4 = 0 ;
  unsigned char arg5 ;
  bool arg6 ;
  bool arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  unsigned char val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:CModules_OnChanPermission",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnChanPermission" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnChanPermission" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanPermission" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnChanPermission" "', argument " "3"" of type '" "CNick const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanPermission" "', argument " "3"" of type '" "CNick const &""'"); 
  }
  arg3 = reinterpret_cast< CNick * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModules_OnChanPermission" "', argument " "4"" of type '" "CChan &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanPermission" "', argument " "4"" of type '" "CChan &""'"); 
  }
  arg4 = reinterpret_cast< CChan * >(argp4);
  ecode5 = SWIG_AsVal_unsigned_SS_char(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CModules_OnChanPermission" "', argument " "5"" of type '" "unsigned char""'");
  } 
  arg5 = static_cast< unsigned char >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CModules_OnChanPermission" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  ecode7 = SWIG_AsVal_bool(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "CModules_OnChanPermission" "', argument " "7"" of type '" "bool""'");
  } 
  arg7 = static_cast< bool >(val7);
  result = (bool)(arg1)->OnChanPermission((CNick const &)*arg2,(CNick const &)*arg3,*arg4,arg5,arg6,arg7);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnOp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CNick *arg2 = 0 ;
  CNick *arg3 = 0 ;
  CChan *arg4 = 0 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CModules_OnOp",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnOp" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnOp" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnOp" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnOp" "', argument " "3"" of type '" "CNick const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnOp" "', argument " "3"" of type '" "CNick const &""'"); 
  }
  arg3 = reinterpret_cast< CNick * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModules_OnOp" "', argument " "4"" of type '" "CChan &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnOp" "', argument " "4"" of type '" "CChan &""'"); 
  }
  arg4 = reinterpret_cast< CChan * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CModules_OnOp" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  result = (bool)(arg1)->OnOp((CNick const &)*arg2,(CNick const &)*arg3,*arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnDeop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CNick *arg2 = 0 ;
  CNick *arg3 = 0 ;
  CChan *arg4 = 0 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CModules_OnDeop",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnDeop" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnDeop" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnDeop" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnDeop" "', argument " "3"" of type '" "CNick const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnDeop" "', argument " "3"" of type '" "CNick const &""'"); 
  }
  arg3 = reinterpret_cast< CNick * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModules_OnDeop" "', argument " "4"" of type '" "CChan &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnDeop" "', argument " "4"" of type '" "CChan &""'"); 
  }
  arg4 = reinterpret_cast< CChan * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CModules_OnDeop" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  result = (bool)(arg1)->OnDeop((CNick const &)*arg2,(CNick const &)*arg3,*arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnVoice(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CNick *arg2 = 0 ;
  CNick *arg3 = 0 ;
  CChan *arg4 = 0 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CModules_OnVoice",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnVoice" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnVoice" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnVoice" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnVoice" "', argument " "3"" of type '" "CNick const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnVoice" "', argument " "3"" of type '" "CNick const &""'"); 
  }
  arg3 = reinterpret_cast< CNick * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModules_OnVoice" "', argument " "4"" of type '" "CChan &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnVoice" "', argument " "4"" of type '" "CChan &""'"); 
  }
  arg4 = reinterpret_cast< CChan * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CModules_OnVoice" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  result = (bool)(arg1)->OnVoice((CNick const &)*arg2,(CNick const &)*arg3,*arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnDevoice(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CNick *arg2 = 0 ;
  CNick *arg3 = 0 ;
  CChan *arg4 = 0 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CModules_OnDevoice",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnDevoice" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnDevoice" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnDevoice" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnDevoice" "', argument " "3"" of type '" "CNick const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnDevoice" "', argument " "3"" of type '" "CNick const &""'"); 
  }
  arg3 = reinterpret_cast< CNick * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModules_OnDevoice" "', argument " "4"" of type '" "CChan &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnDevoice" "', argument " "4"" of type '" "CChan &""'"); 
  }
  arg4 = reinterpret_cast< CChan * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CModules_OnDevoice" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  result = (bool)(arg1)->OnDevoice((CNick const &)*arg2,(CNick const &)*arg3,*arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnRawMode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CNick *arg2 = 0 ;
  CChan *arg3 = 0 ;
  CString *arg4 = 0 ;
  CString *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CModules_OnRawMode",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnRawMode" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnRawMode" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnRawMode" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnRawMode" "', argument " "3"" of type '" "CChan &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnRawMode" "', argument " "3"" of type '" "CChan &""'"); 
  }
  arg3 = reinterpret_cast< CChan * >(argp3);
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModules_OnRawMode" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnRawMode" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res5 = SWIG_AsPtr_std_string(obj4, &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CModules_OnRawMode" "', argument " "5"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnRawMode" "', argument " "5"" of type '" "CString const &""'"); 
    }
    arg5 = ptr;
  }
  result = (bool)(arg1)->OnRawMode((CNick const &)*arg2,*arg3,(CString const &)*arg4,(CString const &)*arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  if (SWIG_IsNewObj(res5)) free((char*)arg5);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  if (SWIG_IsNewObj(res5)) free((char*)arg5);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnMode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CNick *arg2 = 0 ;
  CChan *arg3 = 0 ;
  char arg4 ;
  CString *arg5 = 0 ;
  bool arg6 ;
  bool arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  char val4 ;
  int ecode4 = 0 ;
  int res5 = SWIG_OLDOBJ ;
  bool val6 ;
  int ecode6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:CModules_OnMode",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnMode" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnMode" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnMode" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnMode" "', argument " "3"" of type '" "CChan &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnMode" "', argument " "3"" of type '" "CChan &""'"); 
  }
  arg3 = reinterpret_cast< CChan * >(argp3);
  ecode4 = SWIG_AsVal_char(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CModules_OnMode" "', argument " "4"" of type '" "char""'");
  } 
  arg4 = static_cast< char >(val4);
  {
    CString *ptr = (CString *)0;
    res5 = SWIG_AsPtr_std_string(obj4, &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CModules_OnMode" "', argument " "5"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnMode" "', argument " "5"" of type '" "CString const &""'"); 
    }
    arg5 = ptr;
  }
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CModules_OnMode" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  ecode7 = SWIG_AsVal_bool(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "CModules_OnMode" "', argument " "7"" of type '" "bool""'");
  } 
  arg7 = static_cast< bool >(val7);
  result = (bool)(arg1)->OnMode((CNick const &)*arg2,*arg3,arg4,(CString const &)*arg5,arg6,arg7);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res5)) free((char*)arg5);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res5)) free((char*)arg5);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnRaw(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModules_OnRaw",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnRaw" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sLine");
    }
  }
  result = (bool)(arg1)->OnRaw(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnStatusCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModules_OnStatusCommand",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnStatusCommand" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sCommand");
    }
  }
  result = (bool)(arg1)->OnStatusCommand(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnModCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModules_OnModCommand",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnModCommand" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnModCommand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnModCommand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->OnModCommand((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnModNotice(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModules_OnModNotice",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnModNotice" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnModNotice" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnModNotice" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->OnModNotice((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnModCTCP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModules_OnModCTCP",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnModCTCP" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnModCTCP" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnModCTCP" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->OnModCTCP((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnQuit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CNick *arg2 = 0 ;
  CString *arg3 = 0 ;
  vector< CChan * > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CModules_OnQuit",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnQuit" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnQuit" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnQuit" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnQuit" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnQuit" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_vectorT_CChan_p_std__allocatorT_CChan_p_t_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModules_OnQuit" "', argument " "4"" of type '" "vector< CChan * > const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnQuit" "', argument " "4"" of type '" "vector< CChan * > const &""'"); 
  }
  arg4 = reinterpret_cast< vector< CChan * > * >(argp4);
  result = (bool)(arg1)->OnQuit((CNick const &)*arg2,(CString const &)*arg3,(vector< CChan * > const &)*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnNick(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CNick *arg2 = 0 ;
  CString *arg3 = 0 ;
  vector< CChan * > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CModules_OnNick",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnNick" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnNick" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnNick" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnNick" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnNick" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_vectorT_CChan_p_std__allocatorT_CChan_p_t_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModules_OnNick" "', argument " "4"" of type '" "vector< CChan * > const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnNick" "', argument " "4"" of type '" "vector< CChan * > const &""'"); 
  }
  arg4 = reinterpret_cast< vector< CChan * > * >(argp4);
  result = (bool)(arg1)->OnNick((CNick const &)*arg2,(CString const &)*arg3,(vector< CChan * > const &)*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnKick(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CNick *arg2 = 0 ;
  CString *arg3 = 0 ;
  CChan *arg4 = 0 ;
  CString *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int res5 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CModules_OnKick",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnKick" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnKick" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnKick" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnKick" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnKick" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModules_OnKick" "', argument " "4"" of type '" "CChan &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnKick" "', argument " "4"" of type '" "CChan &""'"); 
  }
  arg4 = reinterpret_cast< CChan * >(argp4);
  {
    CString *ptr = (CString *)0;
    res5 = SWIG_AsPtr_std_string(obj4, &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CModules_OnKick" "', argument " "5"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnKick" "', argument " "5"" of type '" "CString const &""'"); 
    }
    arg5 = ptr;
  }
  result = (bool)(arg1)->OnKick((CNick const &)*arg2,(CString const &)*arg3,*arg4,(CString const &)*arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res5)) free((char*)arg5);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res5)) free((char*)arg5);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnJoin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CNick *arg2 = 0 ;
  CChan *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModules_OnJoin",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnJoin" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnJoin" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnJoin" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnJoin" "', argument " "3"" of type '" "CChan &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnJoin" "', argument " "3"" of type '" "CChan &""'"); 
  }
  arg3 = reinterpret_cast< CChan * >(argp3);
  result = (bool)(arg1)->OnJoin((CNick const &)*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnPart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CNick *arg2 = 0 ;
  CChan *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CModules_OnPart",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnPart" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnPart" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnPart" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnPart" "', argument " "3"" of type '" "CChan &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnPart" "', argument " "3"" of type '" "CChan &""'"); 
  }
  arg3 = reinterpret_cast< CChan * >(argp3);
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModules_OnPart" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnPart" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  result = (bool)(arg1)->OnPart((CNick const &)*arg2,*arg3,(CString const &)*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnInvite(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CNick *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModules_OnInvite",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnInvite" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnInvite" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnInvite" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnInvite" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnInvite" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = (bool)(arg1)->OnInvite((CNick const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnChanBufferStarting(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CChan *arg2 = 0 ;
  CClient *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModules_OnChanBufferStarting",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnChanBufferStarting" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnChanBufferStarting" "', argument " "2"" of type '" "CChan &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanBufferStarting" "', argument " "2"" of type '" "CChan &""'"); 
  }
  arg2 = reinterpret_cast< CChan * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CClient,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnChanBufferStarting" "', argument " "3"" of type '" "CClient &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanBufferStarting" "', argument " "3"" of type '" "CClient &""'"); 
  }
  arg3 = reinterpret_cast< CClient * >(argp3);
  result = (bool)(arg1)->OnChanBufferStarting(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnChanBufferEnding(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CChan *arg2 = 0 ;
  CClient *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModules_OnChanBufferEnding",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnChanBufferEnding" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnChanBufferEnding" "', argument " "2"" of type '" "CChan &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanBufferEnding" "', argument " "2"" of type '" "CChan &""'"); 
  }
  arg2 = reinterpret_cast< CChan * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CClient,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnChanBufferEnding" "', argument " "3"" of type '" "CClient &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanBufferEnding" "', argument " "3"" of type '" "CClient &""'"); 
  }
  arg3 = reinterpret_cast< CClient * >(argp3);
  result = (bool)(arg1)->OnChanBufferEnding(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnChanBufferPlayLine(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CChan *arg2 = 0 ;
  CClient *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CModules_OnChanBufferPlayLine",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnChanBufferPlayLine" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnChanBufferPlayLine" "', argument " "2"" of type '" "CChan &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanBufferPlayLine" "', argument " "2"" of type '" "CChan &""'"); 
  }
  arg2 = reinterpret_cast< CChan * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CClient,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnChanBufferPlayLine" "', argument " "3"" of type '" "CClient &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanBufferPlayLine" "', argument " "3"" of type '" "CClient &""'"); 
  }
  arg3 = reinterpret_cast< CClient * >(argp3);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj3, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg4 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 4 sLine");
    }
  }
  result = (bool)(arg1)->OnChanBufferPlayLine(*arg2,*arg3,*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnPrivBufferPlayLine(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CClient *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModules_OnPrivBufferPlayLine",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnPrivBufferPlayLine" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CClient,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnPrivBufferPlayLine" "', argument " "2"" of type '" "CClient &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnPrivBufferPlayLine" "', argument " "2"" of type '" "CClient &""'"); 
  }
  arg2 = reinterpret_cast< CClient * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sLine");
    }
  }
  result = (bool)(arg1)->OnPrivBufferPlayLine(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnClientLogin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModules_OnClientLogin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnClientLogin" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  result = (bool)(arg1)->OnClientLogin();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnClientDisconnect(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModules_OnClientDisconnect",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnClientDisconnect" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  result = (bool)(arg1)->OnClientDisconnect();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnUserRaw(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModules_OnUserRaw",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnUserRaw" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sLine");
    }
  }
  result = (bool)(arg1)->OnUserRaw(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnUserCTCPReply(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModules_OnUserCTCPReply",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnUserCTCPReply" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sTarget");
    }
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (bool)(arg1)->OnUserCTCPReply(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnUserCTCP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModules_OnUserCTCP",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnUserCTCP" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sTarget");
    }
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (bool)(arg1)->OnUserCTCP(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnUserAction(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModules_OnUserAction",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnUserAction" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sTarget");
    }
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (bool)(arg1)->OnUserAction(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnUserMsg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModules_OnUserMsg",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnUserMsg" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sTarget");
    }
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (bool)(arg1)->OnUserMsg(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnUserNotice(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModules_OnUserNotice",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnUserNotice" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sTarget");
    }
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (bool)(arg1)->OnUserNotice(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnUserJoin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModules_OnUserJoin",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnUserJoin" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sChannel");
    }
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sKey");
    }
  }
  result = (bool)(arg1)->OnUserJoin(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnUserPart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModules_OnUserPart",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnUserPart" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sChannel");
    }
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (bool)(arg1)->OnUserPart(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnUserTopic(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModules_OnUserTopic",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnUserTopic" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sChannel");
    }
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sTopic");
    }
  }
  result = (bool)(arg1)->OnUserTopic(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnUserTopicRequest(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModules_OnUserTopicRequest",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnUserTopicRequest" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sChannel");
    }
  }
  result = (bool)(arg1)->OnUserTopicRequest(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnCTCPReply(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CNick *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModules_OnCTCPReply",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnCTCPReply" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnCTCPReply" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnCTCPReply" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (bool)(arg1)->OnCTCPReply(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnPrivCTCP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CNick *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModules_OnPrivCTCP",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnPrivCTCP" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnPrivCTCP" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnPrivCTCP" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (bool)(arg1)->OnPrivCTCP(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnChanCTCP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CNick *arg2 = 0 ;
  CChan *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CModules_OnChanCTCP",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnChanCTCP" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnChanCTCP" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanCTCP" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnChanCTCP" "', argument " "3"" of type '" "CChan &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanCTCP" "', argument " "3"" of type '" "CChan &""'"); 
  }
  arg3 = reinterpret_cast< CChan * >(argp3);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj3, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg4 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 4 sMessage");
    }
  }
  result = (bool)(arg1)->OnChanCTCP(*arg2,*arg3,*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnPrivAction(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CNick *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModules_OnPrivAction",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnPrivAction" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnPrivAction" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnPrivAction" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (bool)(arg1)->OnPrivAction(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnChanAction(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CNick *arg2 = 0 ;
  CChan *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CModules_OnChanAction",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnChanAction" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnChanAction" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanAction" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnChanAction" "', argument " "3"" of type '" "CChan &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanAction" "', argument " "3"" of type '" "CChan &""'"); 
  }
  arg3 = reinterpret_cast< CChan * >(argp3);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj3, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg4 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 4 sMessage");
    }
  }
  result = (bool)(arg1)->OnChanAction(*arg2,*arg3,*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnPrivMsg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CNick *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModules_OnPrivMsg",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnPrivMsg" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnPrivMsg" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnPrivMsg" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (bool)(arg1)->OnPrivMsg(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnChanMsg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CNick *arg2 = 0 ;
  CChan *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CModules_OnChanMsg",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnChanMsg" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnChanMsg" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanMsg" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnChanMsg" "', argument " "3"" of type '" "CChan &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanMsg" "', argument " "3"" of type '" "CChan &""'"); 
  }
  arg3 = reinterpret_cast< CChan * >(argp3);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj3, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg4 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 4 sMessage");
    }
  }
  result = (bool)(arg1)->OnChanMsg(*arg2,*arg3,*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnPrivNotice(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CNick *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModules_OnPrivNotice",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnPrivNotice" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnPrivNotice" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnPrivNotice" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (bool)(arg1)->OnPrivNotice(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnChanNotice(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CNick *arg2 = 0 ;
  CChan *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CModules_OnChanNotice",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnChanNotice" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnChanNotice" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanNotice" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnChanNotice" "', argument " "3"" of type '" "CChan &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanNotice" "', argument " "3"" of type '" "CChan &""'"); 
  }
  arg3 = reinterpret_cast< CChan * >(argp3);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj3, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg4 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 4 sMessage");
    }
  }
  result = (bool)(arg1)->OnChanNotice(*arg2,*arg3,*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnTopic(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CNick *arg2 = 0 ;
  CChan *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CModules_OnTopic",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnTopic" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnTopic" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnTopic" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnTopic" "', argument " "3"" of type '" "CChan &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnTopic" "', argument " "3"" of type '" "CChan &""'"); 
  }
  arg3 = reinterpret_cast< CChan * >(argp3);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj3, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg4 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 4 sTopic");
    }
  }
  result = (bool)(arg1)->OnTopic(*arg2,*arg3,*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnTimerAutoJoin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CChan *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModules_OnTimerAutoJoin",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnTimerAutoJoin" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnTimerAutoJoin" "', argument " "2"" of type '" "CChan &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnTimerAutoJoin" "', argument " "2"" of type '" "CChan &""'"); 
  }
  arg2 = reinterpret_cast< CChan * >(argp2);
  result = (bool)(arg1)->OnTimerAutoJoin(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnServerCapAvailable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModules_OnServerCapAvailable",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnServerCapAvailable" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnServerCapAvailable" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnServerCapAvailable" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->OnServerCapAvailable((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnServerCapResult(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CString *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModules_OnServerCapResult",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnServerCapResult" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnServerCapResult" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnServerCapResult" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CModules_OnServerCapResult" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (bool)(arg1)->OnServerCapResult((CString const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_FindModule(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CModule *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModules_FindModule",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_FindModule" "', argument " "1"" of type '" "CModules const *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_FindModule" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_FindModule" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (CModule *)((CModules const *)arg1)->FindModule((CString const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModule, 0 |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_LoadModule(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  CModInfo::EModuleType arg4 ;
  CUser *arg5 = (CUser *) 0 ;
  CIRCNetwork *arg6 = (CIRCNetwork *) 0 ;
  CString *arg7 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:CModules_LoadModule",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_LoadModule" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_LoadModule" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_LoadModule" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_LoadModule" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_LoadModule" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CModules_LoadModule" "', argument " "4"" of type '" "CModInfo::EModuleType""'");
  } 
  arg4 = static_cast< CModInfo::EModuleType >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CModules_LoadModule" "', argument " "5"" of type '" "CUser *""'"); 
  }
  arg5 = reinterpret_cast< CUser * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CModules_LoadModule" "', argument " "6"" of type '" "CIRCNetwork *""'"); 
  }
  arg6 = reinterpret_cast< CIRCNetwork * >(argp6);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj6, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg7 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 7 sRetMsg");
    }
  }
  result = (bool)(arg1)->LoadModule((CString const &)*arg2,(CString const &)*arg3,arg4,arg5,arg6,*arg7);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_UnloadModule__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModules_UnloadModule",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_UnloadModule" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_UnloadModule" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_UnloadModule" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->UnloadModule((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_UnloadModule__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModules_UnloadModule",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_UnloadModule" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_UnloadModule" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_UnloadModule" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sRetMsg");
    }
  }
  result = (bool)(arg1)->UnloadModule((CString const &)*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_UnloadModule(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CModules, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CModules_UnloadModule__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CModules, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CModules_UnloadModule__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CModules_UnloadModule'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CModules::UnloadModule(CString const &)\n"
    "    CModules::UnloadModule(CString const &,CString &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CModules_ReloadModule(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  CUser *arg4 = (CUser *) 0 ;
  CIRCNetwork *arg5 = (CIRCNetwork *) 0 ;
  CString *arg6 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:CModules_ReloadModule",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_ReloadModule" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_ReloadModule" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_ReloadModule" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_ReloadModule" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_ReloadModule" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModules_ReloadModule" "', argument " "4"" of type '" "CUser *""'"); 
  }
  arg4 = reinterpret_cast< CUser * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CModules_ReloadModule" "', argument " "5"" of type '" "CIRCNetwork *""'"); 
  }
  arg5 = reinterpret_cast< CIRCNetwork * >(argp5);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj5, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg6 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 6 sRetMsg");
    }
  }
  result = (bool)(arg1)->ReloadModule((CString const &)*arg2,(CString const &)*arg3,arg4,arg5,*arg6);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_GetModInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModInfo *arg1 = 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModules_GetModInfo",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_CModInfo,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_GetModInfo" "', argument " "1"" of type '" "CModInfo &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_GetModInfo" "', argument " "1"" of type '" "CModInfo &""'"); 
  }
  arg1 = reinterpret_cast< CModInfo * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_GetModInfo" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_GetModInfo" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sRetMsg");
    }
  }
  result = (bool)CModules::GetModInfo(*arg1,(CString const &)*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_GetModPathInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModInfo *arg1 = 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CModules_GetModPathInfo",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_CModInfo,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_GetModPathInfo" "', argument " "1"" of type '" "CModInfo &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_GetModPathInfo" "', argument " "1"" of type '" "CModInfo &""'"); 
  }
  arg1 = reinterpret_cast< CModInfo * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_GetModPathInfo" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_GetModPathInfo" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_GetModPathInfo" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_GetModPathInfo" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj3, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg4 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 4 sRetMsg");
    }
  }
  result = (bool)CModules::GetModPathInfo(*arg1,(CString const &)*arg2,(CString const &)*arg3,*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_GetAvailableMods__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  set< CModInfo > *arg1 = 0 ;
  CModInfo::EModuleType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModules_GetAvailableMods",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_setT_CModInfo_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_GetAvailableMods" "', argument " "1"" of type '" "set< CModInfo > &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_GetAvailableMods" "', argument " "1"" of type '" "set< CModInfo > &""'"); 
  }
  arg1 = reinterpret_cast< set< CModInfo > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CModules_GetAvailableMods" "', argument " "2"" of type '" "CModInfo::EModuleType""'");
  } 
  arg2 = static_cast< CModInfo::EModuleType >(val2);
  CModules::GetAvailableMods(*arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_GetAvailableMods__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  set< CModInfo > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModules_GetAvailableMods",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_setT_CModInfo_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_GetAvailableMods" "', argument " "1"" of type '" "set< CModInfo > &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_GetAvailableMods" "', argument " "1"" of type '" "set< CModInfo > &""'"); 
  }
  arg1 = reinterpret_cast< set< CModInfo > * >(argp1);
  CModules::GetAvailableMods(*arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_GetAvailableMods(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_setT_CModInfo_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CModules_GetAvailableMods__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_setT_CModInfo_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CModules_GetAvailableMods__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CModules_GetAvailableMods'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CModules::GetAvailableMods(set< CModInfo > &,CModInfo::EModuleType)\n"
    "    CModules::GetAvailableMods(set< CModInfo > &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CModules_FindModPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModules_FindModPath",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_FindModPath" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_FindModPath" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sModPath");
    }
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sDataPath");
    }
  }
  result = (bool)CModules::FindModPath((CString const &)*arg1,*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_GetModDirs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper< std::queue< std::pair< CString,CString > > > result;
  
  if (!PyArg_ParseTuple(args,(char *)":CModules_GetModDirs")) SWIG_fail;
  result = CModules::GetModDirs();
  
  resultobj = PyList_New((&result)->size());
  if (resultobj) {
    for (size_t i = 0; !(&result)->empty(); (&result)->pop(), ++i) {
      PyList_SetItem(resultobj, i, Py_BuildValue("ss", (&result)->front().first.c_str(), (&result)->front().second.c_str()));
    }
  }
  
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnAddUser(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CUser *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModules_OnAddUser",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnAddUser" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CUser,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnAddUser" "', argument " "2"" of type '" "CUser &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnAddUser" "', argument " "2"" of type '" "CUser &""'"); 
  }
  arg2 = reinterpret_cast< CUser * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sErrorRet");
    }
  }
  result = (bool)(arg1)->OnAddUser(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnDeleteUser(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CUser *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModules_OnDeleteUser",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnDeleteUser" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CUser,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnDeleteUser" "', argument " "2"" of type '" "CUser &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnDeleteUser" "', argument " "2"" of type '" "CUser &""'"); 
  }
  arg2 = reinterpret_cast< CUser * >(argp2);
  result = (bool)(arg1)->OnDeleteUser(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnClientConnect(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CZNCSock *arg2 = (CZNCSock *) 0 ;
  CString *arg3 = 0 ;
  unsigned short arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  unsigned short val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CModules_OnClientConnect",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnClientConnect" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CZNCSock, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnClientConnect" "', argument " "2"" of type '" "CZNCSock *""'"); 
  }
  arg2 = reinterpret_cast< CZNCSock * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnClientConnect" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnClientConnect" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_unsigned_SS_short(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CModules_OnClientConnect" "', argument " "4"" of type '" "unsigned short""'");
  } 
  arg4 = static_cast< unsigned short >(val4);
  result = (bool)(arg1)->OnClientConnect(arg2,(CString const &)*arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnLoginAttempt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  SwigValueWrapper< CSmartPtr< CAuthBase > > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModules_OnLoginAttempt",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnLoginAttempt" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CSmartPtrT_CAuthBase_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnLoginAttempt" "', argument " "2"" of type '" "CSmartPtr< CAuthBase >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnLoginAttempt" "', argument " "2"" of type '" "CSmartPtr< CAuthBase >""'");
    } else {
      CSmartPtr< CAuthBase > * temp = reinterpret_cast< CSmartPtr< CAuthBase > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (bool)(arg1)->OnLoginAttempt(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnFailedLogin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModules_OnFailedLogin",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnFailedLogin" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnFailedLogin" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnFailedLogin" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnFailedLogin" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnFailedLogin" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = (bool)(arg1)->OnFailedLogin((CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnUnknownUserRaw(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CClient *arg2 = (CClient *) 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModules_OnUnknownUserRaw",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnUnknownUserRaw" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnUnknownUserRaw" "', argument " "2"" of type '" "CClient *""'"); 
  }
  arg2 = reinterpret_cast< CClient * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sLine");
    }
  }
  result = (bool)(arg1)->OnUnknownUserRaw(arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnClientCapLs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CClient *arg2 = (CClient *) 0 ;
  SCString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModules_OnClientCapLs",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnClientCapLs" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnClientCapLs" "', argument " "2"" of type '" "CClient *""'"); 
  }
  arg2 = reinterpret_cast< CClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_SCString,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnClientCapLs" "', argument " "3"" of type '" "SCString &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnClientCapLs" "', argument " "3"" of type '" "SCString &""'"); 
  }
  arg3 = reinterpret_cast< SCString * >(argp3);
  result = (bool)(arg1)->OnClientCapLs(arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_IsClientCapSupported(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CClient *arg2 = (CClient *) 0 ;
  CString *arg3 = 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CModules_IsClientCapSupported",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_IsClientCapSupported" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_IsClientCapSupported" "', argument " "2"" of type '" "CClient *""'"); 
  }
  arg2 = reinterpret_cast< CClient * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_IsClientCapSupported" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_IsClientCapSupported" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CModules_IsClientCapSupported" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (bool)(arg1)->IsClientCapSupported(arg2,(CString const &)*arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnClientCapRequest(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CClient *arg2 = (CClient *) 0 ;
  CString *arg3 = 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CModules_OnClientCapRequest",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnClientCapRequest" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnClientCapRequest" "', argument " "2"" of type '" "CClient *""'"); 
  }
  arg2 = reinterpret_cast< CClient * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnClientCapRequest" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnClientCapRequest" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CModules_OnClientCapRequest" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (bool)(arg1)->OnClientCapRequest(arg2,(CString const &)*arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnModuleLoading(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  CModInfo::EModuleType arg4 ;
  bool *arg5 = 0 ;
  CString *arg6 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:CModules_OnModuleLoading",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnModuleLoading" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnModuleLoading" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnModuleLoading" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnModuleLoading" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnModuleLoading" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CModules_OnModuleLoading" "', argument " "4"" of type '" "CModInfo::EModuleType""'");
  } 
  arg4 = static_cast< CModInfo::EModuleType >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_bool,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CModules_OnModuleLoading" "', argument " "5"" of type '" "bool &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnModuleLoading" "', argument " "5"" of type '" "bool &""'"); 
  }
  arg5 = reinterpret_cast< bool * >(argp5);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj5, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg6 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 6 sRetMsg");
    }
  }
  result = (bool)(arg1)->OnModuleLoading((CString const &)*arg2,(CString const &)*arg3,arg4,*arg5,*arg6);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnModuleUnloading(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CModule *arg2 = (CModule *) 0 ;
  bool *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CModules_OnModuleUnloading",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnModuleUnloading" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnModuleUnloading" "', argument " "2"" of type '" "CModule *""'"); 
  }
  arg2 = reinterpret_cast< CModule * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_bool,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnModuleUnloading" "', argument " "3"" of type '" "bool &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnModuleUnloading" "', argument " "3"" of type '" "bool &""'"); 
  }
  arg3 = reinterpret_cast< bool * >(argp3);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj3, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg4 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 4 sRetMsg");
    }
  }
  result = (bool)(arg1)->OnModuleUnloading(arg2,*arg3,*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnGetModInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CModInfo *arg2 = 0 ;
  CString *arg3 = 0 ;
  bool *arg4 = 0 ;
  CString *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CModules_OnGetModInfo",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnGetModInfo" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CModInfo,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnGetModInfo" "', argument " "2"" of type '" "CModInfo &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnGetModInfo" "', argument " "2"" of type '" "CModInfo &""'"); 
  }
  arg2 = reinterpret_cast< CModInfo * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnGetModInfo" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnGetModInfo" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_bool,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModules_OnGetModInfo" "', argument " "4"" of type '" "bool &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnGetModInfo" "', argument " "4"" of type '" "bool &""'"); 
  }
  arg4 = reinterpret_cast< bool * >(argp4);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj4, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg5 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 5 sRetMsg");
    }
  }
  result = (bool)(arg1)->OnGetModInfo(*arg2,(CString const &)*arg3,*arg4,*arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_OnGetAvailableMods(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  set< CModInfo > *arg2 = 0 ;
  CModInfo::EModuleType arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CModules_OnGetAvailableMods",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnGetAvailableMods" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_setT_CModInfo_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnGetAvailableMods" "', argument " "2"" of type '" "set< CModInfo > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnGetAvailableMods" "', argument " "2"" of type '" "set< CModInfo > &""'"); 
  }
  arg2 = reinterpret_cast< set< CModInfo > * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CModules_OnGetAvailableMods" "', argument " "3"" of type '" "CModInfo::EModuleType""'");
  } 
  arg3 = static_cast< CModInfo::EModuleType >(val3);
  result = (bool)(arg1)->OnGetAvailableMods(*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_push_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CModule *arg2 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModules_push_back",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_push_back" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_push_back" "', argument " "2"" of type '" "CModule *""'"); 
  }
  arg2 = reinterpret_cast< CModule * >(argp2);
  CModules_push_back(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModules_removeModule(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  CModule *arg2 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModules_removeModule",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_removeModule" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_removeModule" "', argument " "2"" of type '" "CModule *""'"); 
  }
  arg2 = reinterpret_cast< CModule * >(argp2);
  result = (bool)CModules_removeModule(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CModules_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CModules, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CNick__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CNick *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CNick")) SWIG_fail;
  result = (CNick *)new CNick();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CNick, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CNick__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  CNick *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_CNick",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CNick" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CNick" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  result = (CNick *)new CNick((CString const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CNick, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CNick(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_CNick__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_CNick__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_CNick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CNick::CNick()\n"
    "    CNick::CNick(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_CNick(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CNick *arg1 = (CNick *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CNick",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CNick, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CNick" "', argument " "1"" of type '" "CNick *""'"); 
  }
  arg1 = reinterpret_cast< CNick * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CNick_Reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CNick *arg1 = (CNick *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CNick_Reset",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CNick, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_Reset" "', argument " "1"" of type '" "CNick *""'"); 
  }
  arg1 = reinterpret_cast< CNick * >(argp1);
  (arg1)->Reset();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CNick_Parse(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CNick *arg1 = (CNick *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CNick_Parse",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CNick, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_Parse" "', argument " "1"" of type '" "CNick *""'"); 
  }
  arg1 = reinterpret_cast< CNick * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CNick_Parse" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CNick_Parse" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->Parse((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CNick_GetHostMask(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CNick *arg1 = (CNick *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CNick_GetHostMask",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CNick, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_GetHostMask" "', argument " "1"" of type '" "CNick const *""'"); 
  }
  arg1 = reinterpret_cast< CNick * >(argp1);
  result = ((CNick const *)arg1)->GetHostMask();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CNick_GetCommonChans(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CNick *arg1 = (CNick *) 0 ;
  vector< CChan * > *arg2 = 0 ;
  CIRCNetwork *arg3 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CNick_GetCommonChans",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CNick, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_GetCommonChans" "', argument " "1"" of type '" "CNick const *""'"); 
  }
  arg1 = reinterpret_cast< CNick * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_vectorT_CChan_p_std__allocatorT_CChan_p_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CNick_GetCommonChans" "', argument " "2"" of type '" "vector< CChan * > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CNick_GetCommonChans" "', argument " "2"" of type '" "vector< CChan * > &""'"); 
  }
  arg2 = reinterpret_cast< vector< CChan * > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CNick_GetCommonChans" "', argument " "3"" of type '" "CIRCNetwork *""'"); 
  }
  arg3 = reinterpret_cast< CIRCNetwork * >(argp3);
  result = (unsigned int)((CNick const *)arg1)->GetCommonChans(*arg2,arg3);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CNick_SetNetwork(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CNick *arg1 = (CNick *) 0 ;
  CIRCNetwork *arg2 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CNick_SetNetwork",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CNick, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_SetNetwork" "', argument " "1"" of type '" "CNick *""'"); 
  }
  arg1 = reinterpret_cast< CNick * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CNick_SetNetwork" "', argument " "2"" of type '" "CIRCNetwork *""'"); 
  }
  arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
  (arg1)->SetNetwork(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CNick_SetNick(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CNick *arg1 = (CNick *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CNick_SetNick",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CNick, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_SetNick" "', argument " "1"" of type '" "CNick *""'"); 
  }
  arg1 = reinterpret_cast< CNick * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CNick_SetNick" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CNick_SetNick" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetNick((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CNick_SetIdent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CNick *arg1 = (CNick *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CNick_SetIdent",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CNick, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_SetIdent" "', argument " "1"" of type '" "CNick *""'"); 
  }
  arg1 = reinterpret_cast< CNick * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CNick_SetIdent" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CNick_SetIdent" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetIdent((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CNick_SetHost(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CNick *arg1 = (CNick *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CNick_SetHost",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CNick, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_SetHost" "', argument " "1"" of type '" "CNick *""'"); 
  }
  arg1 = reinterpret_cast< CNick * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CNick_SetHost" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CNick_SetHost" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetHost((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CNick_AddPerm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CNick *arg1 = (CNick *) 0 ;
  unsigned char arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CNick_AddPerm",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CNick, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_AddPerm" "', argument " "1"" of type '" "CNick *""'"); 
  }
  arg1 = reinterpret_cast< CNick * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CNick_AddPerm" "', argument " "2"" of type '" "unsigned char""'");
  } 
  arg2 = static_cast< unsigned char >(val2);
  result = (bool)(arg1)->AddPerm(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CNick_RemPerm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CNick *arg1 = (CNick *) 0 ;
  unsigned char arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CNick_RemPerm",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CNick, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_RemPerm" "', argument " "1"" of type '" "CNick *""'"); 
  }
  arg1 = reinterpret_cast< CNick * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CNick_RemPerm" "', argument " "2"" of type '" "unsigned char""'");
  } 
  arg2 = static_cast< unsigned char >(val2);
  result = (bool)(arg1)->RemPerm(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CNick_GetPermStr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CNick *arg1 = (CNick *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CNick_GetPermStr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CNick, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_GetPermStr" "', argument " "1"" of type '" "CNick const *""'"); 
  }
  arg1 = reinterpret_cast< CNick * >(argp1);
  result = ((CNick const *)arg1)->GetPermStr();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CNick_GetPermChar(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CNick *arg1 = (CNick *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned char result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CNick_GetPermChar",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CNick, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_GetPermChar" "', argument " "1"" of type '" "CNick const *""'"); 
  }
  arg1 = reinterpret_cast< CNick * >(argp1);
  result = (unsigned char)((CNick const *)arg1)->GetPermChar();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CNick_HasPerm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CNick *arg1 = (CNick *) 0 ;
  unsigned char arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CNick_HasPerm",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CNick, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_HasPerm" "', argument " "1"" of type '" "CNick const *""'"); 
  }
  arg1 = reinterpret_cast< CNick * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CNick_HasPerm" "', argument " "2"" of type '" "unsigned char""'");
  } 
  arg2 = static_cast< unsigned char >(val2);
  result = (bool)((CNick const *)arg1)->HasPerm(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CNick_GetNick(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CNick *arg1 = (CNick *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CNick_GetNick",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CNick, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_GetNick" "', argument " "1"" of type '" "CNick const *""'"); 
  }
  arg1 = reinterpret_cast< CNick * >(argp1);
  result = (CString *) &((CNick const *)arg1)->GetNick();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CNick_GetIdent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CNick *arg1 = (CNick *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CNick_GetIdent",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CNick, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_GetIdent" "', argument " "1"" of type '" "CNick const *""'"); 
  }
  arg1 = reinterpret_cast< CNick * >(argp1);
  result = (CString *) &((CNick const *)arg1)->GetIdent();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CNick_GetHost(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CNick *arg1 = (CNick *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CNick_GetHost",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CNick, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_GetHost" "', argument " "1"" of type '" "CNick const *""'"); 
  }
  arg1 = reinterpret_cast< CNick * >(argp1);
  result = (CString *) &((CNick const *)arg1)->GetHost();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CNick_GetNickMask(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CNick *arg1 = (CNick *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CNick_GetNickMask",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CNick, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_GetNickMask" "', argument " "1"" of type '" "CNick const *""'"); 
  }
  arg1 = reinterpret_cast< CNick * >(argp1);
  result = ((CNick const *)arg1)->GetNickMask();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CNick_Clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CNick *arg1 = (CNick *) 0 ;
  CNick *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CNick_Clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CNick, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_Clone" "', argument " "1"" of type '" "CNick *""'"); 
  }
  arg1 = reinterpret_cast< CNick * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CNick_Clone" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CNick_Clone" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  (arg1)->Clone((CNick const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CNick___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CNick *arg1 = (CNick *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CNick___str__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CNick, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick___str__" "', argument " "1"" of type '" "CNick *""'"); 
  }
  arg1 = reinterpret_cast< CNick * >(argp1);
  result = CNick___str__(arg1);
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CNick___repr__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CNick *arg1 = (CNick *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CNick___repr__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CNick, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick___repr__" "', argument " "1"" of type '" "CNick *""'"); 
  }
  arg1 = reinterpret_cast< CNick * >(argp1);
  result = CNick___repr__(arg1);
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CNick_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CNick, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CChan__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  CIRCNetwork *arg2 = (CIRCNetwork *) 0 ;
  bool arg3 ;
  CConfig *arg4 = (CConfig *) 0 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CChan *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_CChan",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CChan" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CChan" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CChan" "', argument " "2"" of type '" "CIRCNetwork *""'"); 
  }
  arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CChan" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CConfig, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CChan" "', argument " "4"" of type '" "CConfig *""'"); 
  }
  arg4 = reinterpret_cast< CConfig * >(argp4);
  result = (CChan *)new CChan((CString const &)*arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CChan, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CChan__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  CIRCNetwork *arg2 = (CIRCNetwork *) 0 ;
  bool arg3 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CChan *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_CChan",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CChan" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CChan" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CChan" "', argument " "2"" of type '" "CIRCNetwork *""'"); 
  }
  arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CChan" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (CChan *)new CChan((CString const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CChan, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CChan(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_CChan__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CConfig, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_new_CChan__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_CChan'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CChan::CChan(CString const &,CIRCNetwork *,bool,CConfig *)\n"
    "    CChan::CChan(CString const &,CIRCNetwork *,bool)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_CChan(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CChan",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CChan" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_Reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_Reset",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_Reset" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  (arg1)->Reset();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_ToConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CConfig result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_ToConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_ToConfig" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  result = (arg1)->ToConfig();
  resultobj = SWIG_NewPointerObj((new CConfig(static_cast< const CConfig& >(result))), SWIGTYPE_p_CConfig, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_Clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  CChan *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CChan_Clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_Clone" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_Clone" "', argument " "2"" of type '" "CChan &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_Clone" "', argument " "2"" of type '" "CChan &""'"); 
  }
  arg2 = reinterpret_cast< CChan * >(argp2);
  (arg1)->Clone(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_Cycle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_Cycle",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_Cycle" "', argument " "1"" of type '" "CChan const *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  ((CChan const *)arg1)->Cycle();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_JoinUser__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  bool arg2 ;
  CString *arg3 = 0 ;
  CClient *arg4 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CChan_JoinUser",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_JoinUser" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_JoinUser" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CChan_JoinUser" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_JoinUser" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CChan_JoinUser" "', argument " "4"" of type '" "CClient *""'"); 
  }
  arg4 = reinterpret_cast< CClient * >(argp4);
  (arg1)->JoinUser(arg2,(CString const &)*arg3,arg4);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_JoinUser__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  bool arg2 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CChan_JoinUser",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_JoinUser" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_JoinUser" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CChan_JoinUser" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_JoinUser" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->JoinUser(arg2,(CString const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_JoinUser__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CChan_JoinUser",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_JoinUser" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_JoinUser" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->JoinUser(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_JoinUser__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_JoinUser",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_JoinUser" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  (arg1)->JoinUser();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_JoinUser(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CChan, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CChan_JoinUser__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CChan, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CChan_JoinUser__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CChan, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CChan_JoinUser__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CChan, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CClient, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CChan_JoinUser__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CChan_JoinUser'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CChan::JoinUser(bool,CString const &,CClient *)\n"
    "    CChan::JoinUser(bool,CString const &)\n"
    "    CChan::JoinUser(bool)\n"
    "    CChan::JoinUser()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CChan_DetachUser(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_DetachUser",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_DetachUser" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  (arg1)->DetachUser();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_AttachUser(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_AttachUser",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_AttachUser" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  (arg1)->AttachUser();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_OnWho(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CChan_OnWho",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_OnWho" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_OnWho" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_OnWho" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CChan_OnWho" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_OnWho" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CChan_OnWho" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_OnWho" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  (arg1)->OnWho((CString const &)*arg2,(CString const &)*arg3,(CString const &)*arg4);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_SetModes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CChan_SetModes",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_SetModes" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_SetModes" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_SetModes" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetModes((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_ModeChange__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  CString *arg2 = 0 ;
  CNick *arg3 = (CNick *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CChan_ModeChange",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_ModeChange" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_ModeChange" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_ModeChange" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CNick, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CChan_ModeChange" "', argument " "3"" of type '" "CNick const *""'"); 
  }
  arg3 = reinterpret_cast< CNick * >(argp3);
  (arg1)->ModeChange((CString const &)*arg2,(CNick const *)arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_ModeChange__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CChan_ModeChange",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_ModeChange" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_ModeChange" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_ModeChange" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->ModeChange((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_ModeChange(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CChan, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CChan_ModeChange__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CChan, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CNick, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CChan_ModeChange__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CChan_ModeChange'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CChan::ModeChange(CString const &,CNick const *)\n"
    "    CChan::ModeChange(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CChan_AddMode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  unsigned char arg2 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CChan_AddMode",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_AddMode" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_AddMode" "', argument " "2"" of type '" "unsigned char""'");
  } 
  arg2 = static_cast< unsigned char >(val2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CChan_AddMode" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_AddMode" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = (bool)(arg1)->AddMode(arg2,(CString const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_RemMode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  unsigned char arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CChan_RemMode",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_RemMode" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_RemMode" "', argument " "2"" of type '" "unsigned char""'");
  } 
  arg2 = static_cast< unsigned char >(val2);
  result = (bool)(arg1)->RemMode(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_GetModeString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_GetModeString",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetModeString" "', argument " "1"" of type '" "CChan const *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  result = ((CChan const *)arg1)->GetModeString();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_GetModeArg__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CChan_GetModeArg",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetModeArg" "', argument " "1"" of type '" "CChan const *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sArgs");
    }
  }
  result = ((CChan const *)arg1)->GetModeArg(*arg2);
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_GetModeForNames(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_GetModeForNames",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetModeForNames" "', argument " "1"" of type '" "CChan const *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  result = ((CChan const *)arg1)->GetModeForNames();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_ClearNicks(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_ClearNicks",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_ClearNicks" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  (arg1)->ClearNicks();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_FindNick__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CNick *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CChan_FindNick",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_FindNick" "', argument " "1"" of type '" "CChan const *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_FindNick" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_FindNick" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (CNick *)((CChan const *)arg1)->FindNick((CString const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CNick, 0 |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_FindNick__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CNick *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CChan_FindNick",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_FindNick" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_FindNick" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_FindNick" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (CNick *)(arg1)->FindNick((CString const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CNick, 0 |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_FindNick(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CChan, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CChan_FindNick__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CChan, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CChan_FindNick__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CChan_FindNick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CChan::FindNick(CString const &) const\n"
    "    CChan::FindNick(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CChan_AddNicks(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CChan_AddNicks",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_AddNicks" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_AddNicks" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_AddNicks" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (int)(arg1)->AddNicks((CString const &)*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_AddNick(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CChan_AddNick",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_AddNick" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_AddNick" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_AddNick" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->AddNick((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_RemNick(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CChan_RemNick",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_RemNick" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_RemNick" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_RemNick" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->RemNick((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_ChangeNick(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CChan_ChangeNick",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_ChangeNick" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_ChangeNick" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_ChangeNick" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CChan_ChangeNick" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_ChangeNick" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = (bool)(arg1)->ChangeNick((CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_GetBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CBuffer *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_GetBuffer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetBuffer" "', argument " "1"" of type '" "CChan const *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  result = (CBuffer *) &((CChan const *)arg1)->GetBuffer();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CBuffer, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_GetBufferCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_GetBufferCount",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetBufferCount" "', argument " "1"" of type '" "CChan const *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  result = (unsigned int)((CChan const *)arg1)->GetBufferCount();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_SetBufferCount__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  unsigned int arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CChan_SetBufferCount",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_SetBufferCount" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_SetBufferCount" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CChan_SetBufferCount" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (bool)(arg1)->SetBufferCount(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_SetBufferCount__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CChan_SetBufferCount",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_SetBufferCount" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_SetBufferCount" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (bool)(arg1)->SetBufferCount(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_SetBufferCount(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CChan, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CChan_SetBufferCount__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CChan, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CChan_SetBufferCount__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CChan_SetBufferCount'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CChan::SetBufferCount(unsigned int,bool)\n"
    "    CChan::SetBufferCount(unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CChan_AddBuffer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  time_t arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CChan_AddBuffer",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_AddBuffer" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_AddBuffer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_AddBuffer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CChan_AddBuffer" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_AddBuffer" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_time_t,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CChan_AddBuffer" "', argument " "4"" of type '" "time_t""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_AddBuffer" "', argument " "4"" of type '" "time_t""'");
    } else {
      time_t * temp = reinterpret_cast< time_t * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  result = (int)(arg1)->AddBuffer((CString const &)*arg2,(CString const &)*arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_AddBuffer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CChan_AddBuffer",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_AddBuffer" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_AddBuffer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_AddBuffer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CChan_AddBuffer" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_AddBuffer" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = (int)(arg1)->AddBuffer((CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_AddBuffer__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CChan_AddBuffer",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_AddBuffer" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_AddBuffer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_AddBuffer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (int)(arg1)->AddBuffer((CString const &)*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_AddBuffer(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CChan, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CChan_AddBuffer__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CChan, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CChan_AddBuffer__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CChan, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_time_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CChan_AddBuffer__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CChan_AddBuffer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CChan::AddBuffer(CString const &,CString const &,time_t)\n"
    "    CChan::AddBuffer(CString const &,CString const &)\n"
    "    CChan::AddBuffer(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CChan_ClearBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_ClearBuffer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_ClearBuffer" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  (arg1)->ClearBuffer();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_SendBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  CClient *arg2 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CChan_SendBuffer",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_SendBuffer" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_SendBuffer" "', argument " "2"" of type '" "CClient *""'"); 
  }
  arg2 = reinterpret_cast< CClient * >(argp2);
  (arg1)->SendBuffer(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_GetPermStr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_GetPermStr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetPermStr" "', argument " "1"" of type '" "CChan const *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  result = ((CChan const *)arg1)->GetPermStr();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_HasPerm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  unsigned char arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CChan_HasPerm",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_HasPerm" "', argument " "1"" of type '" "CChan const *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_HasPerm" "', argument " "2"" of type '" "unsigned char""'");
  } 
  arg2 = static_cast< unsigned char >(val2);
  result = (bool)((CChan const *)arg1)->HasPerm(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_AddPerm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  unsigned char arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CChan_AddPerm",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_AddPerm" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_AddPerm" "', argument " "2"" of type '" "unsigned char""'");
  } 
  arg2 = static_cast< unsigned char >(val2);
  result = (bool)(arg1)->AddPerm(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_RemPerm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  unsigned char arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CChan_RemPerm",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_RemPerm" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_RemPerm" "', argument " "2"" of type '" "unsigned char""'");
  } 
  arg2 = static_cast< unsigned char >(val2);
  result = (bool)(arg1)->RemPerm(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_SetModeKnown(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CChan_SetModeKnown",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_SetModeKnown" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_SetModeKnown" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetModeKnown(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_SetIsOn(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CChan_SetIsOn",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_SetIsOn" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_SetIsOn" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetIsOn(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_SetKey(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CChan_SetKey",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_SetKey" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_SetKey" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_SetKey" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetKey((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_SetTopic(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CChan_SetTopic",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_SetTopic" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_SetTopic" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_SetTopic" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetTopic((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_SetTopicOwner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CChan_SetTopicOwner",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_SetTopicOwner" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_SetTopicOwner" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_SetTopicOwner" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetTopicOwner((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_SetTopicDate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  unsigned long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CChan_SetTopicDate",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_SetTopicDate" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_SetTopicDate" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  (arg1)->SetTopicDate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_SetDefaultModes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CChan_SetDefaultModes",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_SetDefaultModes" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_SetDefaultModes" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_SetDefaultModes" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetDefaultModes((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_SetAutoClearChanBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CChan_SetAutoClearChanBuffer",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_SetAutoClearChanBuffer" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_SetAutoClearChanBuffer" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetAutoClearChanBuffer(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_SetDetached__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CChan_SetDetached",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_SetDetached" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_SetDetached" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetDetached(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_SetDetached__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_SetDetached",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_SetDetached" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  (arg1)->SetDetached();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_SetDetached(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CChan, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CChan_SetDetached__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CChan, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CChan_SetDetached__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CChan_SetDetached'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CChan::SetDetached(bool)\n"
    "    CChan::SetDetached()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CChan_SetInConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CChan_SetInConfig",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_SetInConfig" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_SetInConfig" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetInConfig(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_SetCreationDate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  unsigned long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CChan_SetCreationDate",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_SetCreationDate" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_SetCreationDate" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  (arg1)->SetCreationDate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_Disable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_Disable",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_Disable" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  (arg1)->Disable();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_Enable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_Enable",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_Enable" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  (arg1)->Enable();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_IncJoinTries(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_IncJoinTries",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_IncJoinTries" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  (arg1)->IncJoinTries();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_ResetJoinTries(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_ResetJoinTries",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_ResetJoinTries" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  (arg1)->ResetJoinTries();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_IsModeKnown(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_IsModeKnown",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_IsModeKnown" "', argument " "1"" of type '" "CChan const *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  result = (bool)((CChan const *)arg1)->IsModeKnown();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_HasMode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  unsigned char arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CChan_HasMode",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_HasMode" "', argument " "1"" of type '" "CChan const *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_HasMode" "', argument " "2"" of type '" "unsigned char""'");
  } 
  arg2 = static_cast< unsigned char >(val2);
  result = (bool)((CChan const *)arg1)->HasMode(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_GetOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_GetOptions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetOptions" "', argument " "1"" of type '" "CChan const *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  result = ((CChan const *)arg1)->GetOptions();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_GetModeArg__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  unsigned char arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CChan_GetModeArg",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetModeArg" "', argument " "1"" of type '" "CChan const *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_GetModeArg" "', argument " "2"" of type '" "unsigned char""'");
  } 
  arg2 = static_cast< unsigned char >(val2);
  result = ((CChan const *)arg1)->GetModeArg(arg2);
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_GetModeArg(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CChan, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CString, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CChan_GetModeArg__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CChan, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_char(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CChan_GetModeArg__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CChan_GetModeArg'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CChan::GetModeArg(CString &) const\n"
    "    CChan::GetModeArg(unsigned char) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CChan_GetPermCounts(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  map< char,unsigned int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_GetPermCounts",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetPermCounts" "', argument " "1"" of type '" "CChan const *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  result = ((CChan const *)arg1)->GetPermCounts();
  resultobj = SWIG_NewPointerObj((new map< char,unsigned int >(static_cast< const map< char,unsigned int >& >(result))), SWIGTYPE_p_mapT_char_unsigned_int_std__lessT_char_t_std__allocatorT_std__pairT_char_const_unsigned_int_t_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_IsOn(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_IsOn",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_IsOn" "', argument " "1"" of type '" "CChan const *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  result = (bool)((CChan const *)arg1)->IsOn();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_GetName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_GetName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetName" "', argument " "1"" of type '" "CChan const *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  result = (CString *) &((CChan const *)arg1)->GetName();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_GetModes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  map< unsigned char,CString > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_GetModes",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetModes" "', argument " "1"" of type '" "CChan const *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  result = (map< unsigned char,CString > *) &((CChan const *)arg1)->GetModes();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mapT_unsigned_char_CString_std__lessT_unsigned_char_t_std__allocatorT_std__pairT_unsigned_char_const_CString_t_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_GetKey(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_GetKey",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetKey" "', argument " "1"" of type '" "CChan const *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  result = (CString *) &((CChan const *)arg1)->GetKey();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_GetTopic(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_GetTopic",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetTopic" "', argument " "1"" of type '" "CChan const *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  result = (CString *) &((CChan const *)arg1)->GetTopic();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_GetTopicOwner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_GetTopicOwner",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetTopicOwner" "', argument " "1"" of type '" "CChan const *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  result = (CString *) &((CChan const *)arg1)->GetTopicOwner();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_GetTopicDate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_GetTopicDate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetTopicDate" "', argument " "1"" of type '" "CChan const *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  result = (unsigned int)((CChan const *)arg1)->GetTopicDate();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_GetDefaultModes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_GetDefaultModes",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetDefaultModes" "', argument " "1"" of type '" "CChan const *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  result = (CString *) &((CChan const *)arg1)->GetDefaultModes();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_GetNicks(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  map< CString,CNick > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_GetNicks",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetNicks" "', argument " "1"" of type '" "CChan const *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  result = (map< CString,CNick > *) &((CChan const *)arg1)->GetNicks();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_GetNickCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_GetNickCount",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetNickCount" "', argument " "1"" of type '" "CChan const *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  result = (unsigned int)((CChan const *)arg1)->GetNickCount();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_AutoClearChanBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_AutoClearChanBuffer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_AutoClearChanBuffer" "', argument " "1"" of type '" "CChan const *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  result = (bool)((CChan const *)arg1)->AutoClearChanBuffer();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_IsDetached(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_IsDetached",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_IsDetached" "', argument " "1"" of type '" "CChan const *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  result = (bool)((CChan const *)arg1)->IsDetached();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_InConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_InConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_InConfig" "', argument " "1"" of type '" "CChan const *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  result = (bool)((CChan const *)arg1)->InConfig();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_GetCreationDate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned long result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_GetCreationDate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetCreationDate" "', argument " "1"" of type '" "CChan const *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  result = (unsigned long)((CChan const *)arg1)->GetCreationDate();
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_IsDisabled(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_IsDisabled",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_IsDisabled" "', argument " "1"" of type '" "CChan const *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  result = (bool)((CChan const *)arg1)->IsDisabled();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_GetJoinTries(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_GetJoinTries",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetJoinTries" "', argument " "1"" of type '" "CChan const *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  result = (unsigned int)((CChan const *)arg1)->GetJoinTries();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan___str__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan___str__" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  result = CChan___str__(arg1);
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan___repr__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan___repr__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan___repr__" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  result = CChan___repr__(arg1);
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CChan_GetNicks_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CChan *arg1 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::map< CString,CNick,std::less< CString >,std::allocator< std::pair< CString const,CNick > > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CChan_GetNicks_",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetNicks_" "', argument " "1"" of type '" "CChan *""'"); 
  }
  arg1 = reinterpret_cast< CChan * >(argp1);
  result = CChan_GetNicks_(arg1);
  resultobj = swig::from(static_cast< std::map<CString,CNick,std::less< CString >,std::allocator< std::pair< CString const,CNick > > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CChan_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CChan, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CUser(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  CUser *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_CUser",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CUser" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CUser" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  result = (CUser *)new CUser((CString const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CUser, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CUser(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CUser",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CUser" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_ParseConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CConfig *arg2 = (CConfig *) 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CUser_ParseConfig",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_ParseConfig" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CConfig, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_ParseConfig" "', argument " "2"" of type '" "CConfig *""'"); 
  }
  arg2 = reinterpret_cast< CConfig * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sError");
    }
  }
  result = (bool)(arg1)->ParseConfig(arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_SaltedHash(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  CString *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_SaltedHash",&obj0,&obj1)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SaltedHash" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_SaltedHash" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_SaltedHash" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_SaltedHash" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = CUser::SaltedHash((CString const &)*arg1,(CString const &)*arg2);
  resultobj = SWIG_From_std_string((CString)(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_ToConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CConfig result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_ToConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_ToConfig" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (arg1)->ToConfig();
  resultobj = SWIG_NewPointerObj((new CConfig(static_cast< const CConfig& >(result))), SWIGTYPE_p_CConfig, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_CheckPass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_CheckPass",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_CheckPass" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_CheckPass" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_CheckPass" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)((CUser const *)arg1)->CheckPass((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_AddAllowedHost(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_AddAllowedHost",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_AddAllowedHost" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_AddAllowedHost" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_AddAllowedHost" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->AddAllowedHost((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_IsHostAllowed(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_IsHostAllowed",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_IsHostAllowed" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_IsHostAllowed" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_IsHostAllowed" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)((CUser const *)arg1)->IsHostAllowed((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_IsValid__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CUser_IsValid",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_IsValid" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sErrMsg");
    }
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CUser_IsValid" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (bool)((CUser const *)arg1)->IsValid(*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_IsValid__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_IsValid",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_IsValid" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sErrMsg");
    }
  }
  result = (bool)((CUser const *)arg1)->IsValid(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_IsValid(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CString, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CUser_IsValid__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CString, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CUser_IsValid__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CUser_IsValid'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CUser::IsValid(CString &,bool) const\n"
    "    CUser::IsValid(CString &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CUser_IsValidUserName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_IsValidUserName",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_IsValidUserName" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_IsValidUserName" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  result = (bool)CUser::IsValidUserName((CString const &)*arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_MakeCleanUserName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_MakeCleanUserName",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_MakeCleanUserName" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_MakeCleanUserName" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  result = CUser::MakeCleanUserName((CString const &)*arg1);
  resultobj = SWIG_From_std_string((CString)(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_GetModules__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CModules *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_GetModules",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetModules" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (CModules *) &(arg1)->GetModules();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModules, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_GetModules__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CModules *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_GetModules",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetModules" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (CModules *) &((CUser const *)arg1)->GetModules();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModules, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_GetModules(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CUser_GetModules__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CUser_GetModules__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CUser_GetModules'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CUser::GetModules()\n"
    "    CUser::GetModules() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CUser_AddNetwork__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CIRCNetwork *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_AddNetwork",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_AddNetwork" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_AddNetwork" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_AddNetwork" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (CIRCNetwork *)(arg1)->AddNetwork((CString const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_DeleteNetwork(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_DeleteNetwork",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_DeleteNetwork" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_DeleteNetwork" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_DeleteNetwork" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->DeleteNetwork((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_AddNetwork__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CIRCNetwork *arg2 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_AddNetwork",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_AddNetwork" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_AddNetwork" "', argument " "2"" of type '" "CIRCNetwork *""'"); 
  }
  arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
  result = (bool)(arg1)->AddNetwork(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_AddNetwork(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CUser_AddNetwork__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CUser_AddNetwork__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CUser_AddNetwork'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CUser::AddNetwork(CString const &)\n"
    "    CUser::AddNetwork(CIRCNetwork *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CUser_RemoveNetwork(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CIRCNetwork *arg2 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_RemoveNetwork",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_RemoveNetwork" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_RemoveNetwork" "', argument " "2"" of type '" "CIRCNetwork *""'"); 
  }
  arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
  (arg1)->RemoveNetwork(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_FindNetwork(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CIRCNetwork *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_FindNetwork",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_FindNetwork" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_FindNetwork" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_FindNetwork" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (CIRCNetwork *)((CUser const *)arg1)->FindNetwork((CString const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_GetNetworks(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  vector< CIRCNetwork * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_GetNetworks",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetNetworks" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (vector< CIRCNetwork * > *) &((CUser const *)arg1)->GetNetworks();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_PutUser__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  CClient *arg3 = (CClient *) 0 ;
  CClient *arg4 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CUser_PutUser",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_PutUser" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_PutUser" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutUser" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_PutUser" "', argument " "3"" of type '" "CClient *""'"); 
  }
  arg3 = reinterpret_cast< CClient * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CUser_PutUser" "', argument " "4"" of type '" "CClient *""'"); 
  }
  arg4 = reinterpret_cast< CClient * >(argp4);
  result = (bool)(arg1)->PutUser((CString const &)*arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_PutUser__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  CClient *arg3 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CUser_PutUser",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_PutUser" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_PutUser" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutUser" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_PutUser" "', argument " "3"" of type '" "CClient *""'"); 
  }
  arg3 = reinterpret_cast< CClient * >(argp3);
  result = (bool)(arg1)->PutUser((CString const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_PutUser__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_PutUser",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_PutUser" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_PutUser" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutUser" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->PutUser((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_PutUser(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CUser_PutUser__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CUser_PutUser__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CClient, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CUser_PutUser__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CUser_PutUser'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CUser::PutUser(CString const &,CClient *,CClient *)\n"
    "    CUser::PutUser(CString const &,CClient *)\n"
    "    CUser::PutUser(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CUser_PutAllUser__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  CClient *arg3 = (CClient *) 0 ;
  CClient *arg4 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CUser_PutAllUser",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_PutAllUser" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_PutAllUser" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutAllUser" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_PutAllUser" "', argument " "3"" of type '" "CClient *""'"); 
  }
  arg3 = reinterpret_cast< CClient * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CUser_PutAllUser" "', argument " "4"" of type '" "CClient *""'"); 
  }
  arg4 = reinterpret_cast< CClient * >(argp4);
  result = (bool)(arg1)->PutAllUser((CString const &)*arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_PutAllUser__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  CClient *arg3 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CUser_PutAllUser",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_PutAllUser" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_PutAllUser" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutAllUser" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_PutAllUser" "', argument " "3"" of type '" "CClient *""'"); 
  }
  arg3 = reinterpret_cast< CClient * >(argp3);
  result = (bool)(arg1)->PutAllUser((CString const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_PutAllUser__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_PutAllUser",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_PutAllUser" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_PutAllUser" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutAllUser" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->PutAllUser((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_PutAllUser(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CUser_PutAllUser__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CUser_PutAllUser__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CClient, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CUser_PutAllUser__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CUser_PutAllUser'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CUser::PutAllUser(CString const &,CClient *,CClient *)\n"
    "    CUser::PutAllUser(CString const &,CClient *)\n"
    "    CUser::PutAllUser(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CUser_PutStatus__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  CClient *arg3 = (CClient *) 0 ;
  CClient *arg4 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CUser_PutStatus",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_PutStatus" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_PutStatus" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutStatus" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_PutStatus" "', argument " "3"" of type '" "CClient *""'"); 
  }
  arg3 = reinterpret_cast< CClient * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CUser_PutStatus" "', argument " "4"" of type '" "CClient *""'"); 
  }
  arg4 = reinterpret_cast< CClient * >(argp4);
  result = (bool)(arg1)->PutStatus((CString const &)*arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_PutStatus__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  CClient *arg3 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CUser_PutStatus",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_PutStatus" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_PutStatus" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutStatus" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_PutStatus" "', argument " "3"" of type '" "CClient *""'"); 
  }
  arg3 = reinterpret_cast< CClient * >(argp3);
  result = (bool)(arg1)->PutStatus((CString const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_PutStatus__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_PutStatus",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_PutStatus" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_PutStatus" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutStatus" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->PutStatus((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_PutStatus(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CUser_PutStatus__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CUser_PutStatus__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CClient, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CUser_PutStatus__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CUser_PutStatus'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CUser::PutStatus(CString const &,CClient *,CClient *)\n"
    "    CUser::PutStatus(CString const &,CClient *)\n"
    "    CUser::PutStatus(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CUser_PutStatusNotice__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  CClient *arg3 = (CClient *) 0 ;
  CClient *arg4 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CUser_PutStatusNotice",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_PutStatusNotice" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_PutStatusNotice" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutStatusNotice" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_PutStatusNotice" "', argument " "3"" of type '" "CClient *""'"); 
  }
  arg3 = reinterpret_cast< CClient * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CUser_PutStatusNotice" "', argument " "4"" of type '" "CClient *""'"); 
  }
  arg4 = reinterpret_cast< CClient * >(argp4);
  result = (bool)(arg1)->PutStatusNotice((CString const &)*arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_PutStatusNotice__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  CClient *arg3 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CUser_PutStatusNotice",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_PutStatusNotice" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_PutStatusNotice" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutStatusNotice" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_PutStatusNotice" "', argument " "3"" of type '" "CClient *""'"); 
  }
  arg3 = reinterpret_cast< CClient * >(argp3);
  result = (bool)(arg1)->PutStatusNotice((CString const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_PutStatusNotice__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_PutStatusNotice",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_PutStatusNotice" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_PutStatusNotice" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutStatusNotice" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->PutStatusNotice((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_PutStatusNotice(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CUser_PutStatusNotice__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CUser_PutStatusNotice__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CClient, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CUser_PutStatusNotice__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CUser_PutStatusNotice'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CUser::PutStatusNotice(CString const &,CClient *,CClient *)\n"
    "    CUser::PutStatusNotice(CString const &,CClient *)\n"
    "    CUser::PutStatusNotice(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CUser_PutModule__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  CClient *arg4 = (CClient *) 0 ;
  CClient *arg5 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CUser_PutModule",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_PutModule" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_PutModule" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutModule" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_PutModule" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutModule" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CUser_PutModule" "', argument " "4"" of type '" "CClient *""'"); 
  }
  arg4 = reinterpret_cast< CClient * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CUser_PutModule" "', argument " "5"" of type '" "CClient *""'"); 
  }
  arg5 = reinterpret_cast< CClient * >(argp5);
  result = (bool)(arg1)->PutModule((CString const &)*arg2,(CString const &)*arg3,arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_PutModule__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  CClient *arg4 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CUser_PutModule",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_PutModule" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_PutModule" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutModule" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_PutModule" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutModule" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CUser_PutModule" "', argument " "4"" of type '" "CClient *""'"); 
  }
  arg4 = reinterpret_cast< CClient * >(argp4);
  result = (bool)(arg1)->PutModule((CString const &)*arg2,(CString const &)*arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_PutModule__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CUser_PutModule",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_PutModule" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_PutModule" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutModule" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_PutModule" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutModule" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = (bool)(arg1)->PutModule((CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_PutModule(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CUser_PutModule__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CClient, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CUser_PutModule__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CClient, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CClient, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_CUser_PutModule__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CUser_PutModule'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CUser::PutModule(CString const &,CString const &,CClient *,CClient *)\n"
    "    CUser::PutModule(CString const &,CString const &,CClient *)\n"
    "    CUser::PutModule(CString const &,CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CUser_PutModNotice__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  CClient *arg4 = (CClient *) 0 ;
  CClient *arg5 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CUser_PutModNotice",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_PutModNotice" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_PutModNotice" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutModNotice" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_PutModNotice" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutModNotice" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CUser_PutModNotice" "', argument " "4"" of type '" "CClient *""'"); 
  }
  arg4 = reinterpret_cast< CClient * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CUser_PutModNotice" "', argument " "5"" of type '" "CClient *""'"); 
  }
  arg5 = reinterpret_cast< CClient * >(argp5);
  result = (bool)(arg1)->PutModNotice((CString const &)*arg2,(CString const &)*arg3,arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_PutModNotice__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  CClient *arg4 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CUser_PutModNotice",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_PutModNotice" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_PutModNotice" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutModNotice" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_PutModNotice" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutModNotice" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CUser_PutModNotice" "', argument " "4"" of type '" "CClient *""'"); 
  }
  arg4 = reinterpret_cast< CClient * >(argp4);
  result = (bool)(arg1)->PutModNotice((CString const &)*arg2,(CString const &)*arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_PutModNotice__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CUser_PutModNotice",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_PutModNotice" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_PutModNotice" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutModNotice" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_PutModNotice" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutModNotice" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = (bool)(arg1)->PutModNotice((CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_PutModNotice(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CUser_PutModNotice__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CClient, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CUser_PutModNotice__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CClient, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CClient, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_CUser_PutModNotice__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CUser_PutModNotice'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CUser::PutModNotice(CString const &,CString const &,CClient *,CClient *)\n"
    "    CUser::PutModNotice(CString const &,CString const &,CClient *)\n"
    "    CUser::PutModNotice(CString const &,CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CUser_IsUserAttached(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_IsUserAttached",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_IsUserAttached" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (bool)((CUser const *)arg1)->IsUserAttached();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_UserConnected(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CClient *arg2 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_UserConnected",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_UserConnected" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_UserConnected" "', argument " "2"" of type '" "CClient *""'"); 
  }
  arg2 = reinterpret_cast< CClient * >(argp2);
  (arg1)->UserConnected(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_UserDisconnected(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CClient *arg2 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_UserDisconnected",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_UserDisconnected" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_UserDisconnected" "', argument " "2"" of type '" "CClient *""'"); 
  }
  arg2 = reinterpret_cast< CClient * >(argp2);
  (arg1)->UserDisconnected(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_GetLocalDCCIP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_GetLocalDCCIP",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetLocalDCCIP" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (arg1)->GetLocalDCCIP();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_ExpandString__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_ExpandString",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_ExpandString" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_ExpandString" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_ExpandString" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = ((CUser const *)arg1)->ExpandString((CString const &)*arg2);
  resultobj = SWIG_From_std_string((CString)(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_ExpandString__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CUser_ExpandString",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_ExpandString" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_ExpandString" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_ExpandString" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sRet");
    }
  }
  result = (CString *) &((CUser const *)arg1)->ExpandString((CString const &)*arg2,*arg3);
  {
    if (result) {
      resultobj = CPyRetString::wrap(*result);
    } else {
      resultobj = Py_None;
      Py_INCREF(Py_None);
    }
  }
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_ExpandString(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CUser_ExpandString__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CUser_ExpandString__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CUser_ExpandString'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CUser::ExpandString(CString const &) const\n"
    "    CUser::ExpandString(CString const &,CString &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CUser_AddTimestamp__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_AddTimestamp",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_AddTimestamp" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_AddTimestamp" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_AddTimestamp" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = ((CUser const *)arg1)->AddTimestamp((CString const &)*arg2);
  resultobj = SWIG_From_std_string((CString)(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_AddTimestamp__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  time_t arg2 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CUser_AddTimestamp",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_AddTimestamp" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_time_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_AddTimestamp" "', argument " "2"" of type '" "time_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_AddTimestamp" "', argument " "2"" of type '" "time_t""'");
    } else {
      time_t * temp = reinterpret_cast< time_t * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_AddTimestamp" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_AddTimestamp" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = ((CUser const *)arg1)->AddTimestamp(arg2,(CString const &)*arg3);
  resultobj = SWIG_From_std_string((CString)(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_AddTimestamp(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CUser_AddTimestamp__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_time_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CUser_AddTimestamp__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CUser_AddTimestamp'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CUser::AddTimestamp(CString const &) const\n"
    "    CUser::AddTimestamp(time_t,CString const &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CUser_CloneNetworks(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CUser *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_CloneNetworks",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_CloneNetworks" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CUser,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_CloneNetworks" "', argument " "2"" of type '" "CUser const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_CloneNetworks" "', argument " "2"" of type '" "CUser const &""'"); 
  }
  arg2 = reinterpret_cast< CUser * >(argp2);
  (arg1)->CloneNetworks((CUser const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_Clone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CUser *arg2 = 0 ;
  CString *arg3 = 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CUser_Clone",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_Clone" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CUser,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_Clone" "', argument " "2"" of type '" "CUser const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_Clone" "', argument " "2"" of type '" "CUser const &""'"); 
  }
  arg2 = reinterpret_cast< CUser * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sErrorRet");
    }
  }
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CUser_Clone" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (bool)(arg1)->Clone((CUser const &)*arg2,*arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_Clone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CUser *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CUser_Clone",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_Clone" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CUser,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_Clone" "', argument " "2"" of type '" "CUser const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_Clone" "', argument " "2"" of type '" "CUser const &""'"); 
  }
  arg2 = reinterpret_cast< CUser * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sErrorRet");
    }
  }
  result = (bool)(arg1)->Clone((CUser const &)*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_Clone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_CUser, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CUser_Clone__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_CUser, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_CUser_Clone__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CUser_Clone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CUser::Clone(CUser const &,CString &,bool)\n"
    "    CUser::Clone(CUser const &,CString &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CUser_BounceAllClients(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_BounceAllClients",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_BounceAllClients" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  (arg1)->BounceAllClients();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_AddBytesRead(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  unsigned long long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_AddBytesRead",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_AddBytesRead" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUser_AddBytesRead" "', argument " "2"" of type '" "unsigned long long""'");
  } 
  arg2 = static_cast< unsigned long long >(val2);
  (arg1)->AddBytesRead(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_AddBytesWritten(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  unsigned long long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_AddBytesWritten",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_AddBytesWritten" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUser_AddBytesWritten" "', argument " "2"" of type '" "unsigned long long""'");
  } 
  arg2 = static_cast< unsigned long long >(val2);
  (arg1)->AddBytesWritten(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_SetNick(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_SetNick",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetNick" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_SetNick" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_SetNick" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetNick((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_SetAltNick(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_SetAltNick",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetAltNick" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_SetAltNick" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_SetAltNick" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetAltNick((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_SetIdent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_SetIdent",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetIdent" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_SetIdent" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_SetIdent" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetIdent((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_SetRealName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_SetRealName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetRealName" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_SetRealName" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_SetRealName" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetRealName((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_SetBindHost(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_SetBindHost",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetBindHost" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_SetBindHost" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_SetBindHost" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetBindHost((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_SetDCCBindHost(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_SetDCCBindHost",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetDCCBindHost" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_SetDCCBindHost" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_SetDCCBindHost" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetDCCBindHost((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_SetPass__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  CUser::eHashType arg3 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CUser_SetPass",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetPass" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_SetPass" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_SetPass" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CUser_SetPass" "', argument " "3"" of type '" "CUser::eHashType""'");
  } 
  arg3 = static_cast< CUser::eHashType >(val3);
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CUser_SetPass" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_SetPass" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  (arg1)->SetPass((CString const &)*arg2,arg3,(CString const &)*arg4);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_SetPass__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  CUser::eHashType arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CUser_SetPass",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetPass" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_SetPass" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_SetPass" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CUser_SetPass" "', argument " "3"" of type '" "CUser::eHashType""'");
  } 
  arg3 = static_cast< CUser::eHashType >(val3);
  (arg1)->SetPass((CString const &)*arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_SetPass(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CUser_SetPass__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (CString**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CUser_SetPass__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CUser_SetPass'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CUser::SetPass(CString const &,CUser::eHashType,CString const &)\n"
    "    CUser::SetPass(CString const &,CUser::eHashType)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CUser_SetMultiClients(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_SetMultiClients",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetMultiClients" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUser_SetMultiClients" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetMultiClients(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_SetDenyLoadMod(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_SetDenyLoadMod",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetDenyLoadMod" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUser_SetDenyLoadMod" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetDenyLoadMod(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_SetAdmin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_SetAdmin",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetAdmin" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUser_SetAdmin" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetAdmin(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_SetDenySetBindHost(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_SetDenySetBindHost",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetDenySetBindHost" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUser_SetDenySetBindHost" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetDenySetBindHost(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_SetStatusPrefix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_SetStatusPrefix",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetStatusPrefix" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_SetStatusPrefix" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_SetStatusPrefix" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->SetStatusPrefix((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_SetDefaultChanModes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_SetDefaultChanModes",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetDefaultChanModes" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_SetDefaultChanModes" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_SetDefaultChanModes" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetDefaultChanModes((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_SetQuitMsg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_SetQuitMsg",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetQuitMsg" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_SetQuitMsg" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_SetQuitMsg" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetQuitMsg((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_AddCTCPReply(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CUser_AddCTCPReply",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_AddCTCPReply" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_AddCTCPReply" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_AddCTCPReply" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_AddCTCPReply" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_AddCTCPReply" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = (bool)(arg1)->AddCTCPReply((CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_DelCTCPReply(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_DelCTCPReply",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_DelCTCPReply" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_DelCTCPReply" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_DelCTCPReply" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->DelCTCPReply((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_SetBufferCount__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  unsigned int arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CUser_SetBufferCount",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetBufferCount" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUser_SetBufferCount" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CUser_SetBufferCount" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (bool)(arg1)->SetBufferCount(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_SetBufferCount__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_SetBufferCount",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetBufferCount" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUser_SetBufferCount" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (bool)(arg1)->SetBufferCount(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_SetBufferCount(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CUser_SetBufferCount__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CUser_SetBufferCount__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CUser_SetBufferCount'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CUser::SetBufferCount(unsigned int,bool)\n"
    "    CUser::SetBufferCount(unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CUser_SetAutoClearChanBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_SetAutoClearChanBuffer",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetAutoClearChanBuffer" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUser_SetAutoClearChanBuffer" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetAutoClearChanBuffer(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_SetBeingDeleted(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_SetBeingDeleted",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetBeingDeleted" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUser_SetBeingDeleted" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetBeingDeleted(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_SetTimestampFormat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_SetTimestampFormat",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetTimestampFormat" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_SetTimestampFormat" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_SetTimestampFormat" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetTimestampFormat((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_SetTimestampAppend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_SetTimestampAppend",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetTimestampAppend" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUser_SetTimestampAppend" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetTimestampAppend(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_SetTimestampPrepend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_SetTimestampPrepend",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetTimestampPrepend" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUser_SetTimestampPrepend" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetTimestampPrepend(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_SetTimezone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_SetTimezone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetTimezone" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_SetTimezone" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_SetTimezone" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetTimezone((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_SetJoinTries(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_SetJoinTries",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetJoinTries" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUser_SetJoinTries" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  (arg1)->SetJoinTries(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_SetSkinName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_SetSkinName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetSkinName" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_SetSkinName" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_SetSkinName" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetSkinName((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_GetUserClients(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  vector< CClient * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_GetUserClients",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetUserClients" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (vector< CClient * > *) &(arg1)->GetUserClients();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_vectorT_CClient_p_std__allocatorT_CClient_p_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_GetAllClients(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< vector< CClient * > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_GetAllClients",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetAllClients" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (arg1)->GetAllClients();
  resultobj = SWIG_NewPointerObj((new vector< CClient * >(static_cast< const vector< CClient * >& >(result))), SWIGTYPE_p_vectorT_CClient_p_std__allocatorT_CClient_p_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_GetUserName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_GetUserName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetUserName" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (CString *) &((CUser const *)arg1)->GetUserName();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_GetCleanUserName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_GetCleanUserName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetCleanUserName" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (CString *) &((CUser const *)arg1)->GetCleanUserName();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_GetNick__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_GetNick",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetNick" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUser_GetNick" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (CString *) &((CUser const *)arg1)->GetNick(arg2);
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_GetNick__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_GetNick",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetNick" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (CString *) &((CUser const *)arg1)->GetNick();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_GetNick(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CUser_GetNick__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CUser_GetNick__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CUser_GetNick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CUser::GetNick(bool) const\n"
    "    CUser::GetNick() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CUser_GetAltNick__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_GetAltNick",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetAltNick" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUser_GetAltNick" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (CString *) &((CUser const *)arg1)->GetAltNick(arg2);
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_GetAltNick__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_GetAltNick",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetAltNick" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (CString *) &((CUser const *)arg1)->GetAltNick();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_GetAltNick(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CUser_GetAltNick__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CUser_GetAltNick__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CUser_GetAltNick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CUser::GetAltNick(bool) const\n"
    "    CUser::GetAltNick() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CUser_GetIdent__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CUser_GetIdent",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetIdent" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUser_GetIdent" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (CString *) &((CUser const *)arg1)->GetIdent(arg2);
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_GetIdent__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_GetIdent",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetIdent" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (CString *) &((CUser const *)arg1)->GetIdent();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_GetIdent(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CUser_GetIdent__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CUser_GetIdent__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CUser_GetIdent'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CUser::GetIdent(bool) const\n"
    "    CUser::GetIdent() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CUser_GetRealName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_GetRealName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetRealName" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (CString *) &((CUser const *)arg1)->GetRealName();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_GetBindHost(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_GetBindHost",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetBindHost" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (CString *) &((CUser const *)arg1)->GetBindHost();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_GetDCCBindHost(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_GetDCCBindHost",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetDCCBindHost" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (CString *) &((CUser const *)arg1)->GetDCCBindHost();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_GetPass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_GetPass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetPass" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (CString *) &((CUser const *)arg1)->GetPass();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_GetPassHashType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CUser::eHashType result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_GetPassHashType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetPassHashType" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (CUser::eHashType)((CUser const *)arg1)->GetPassHashType();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_GetPassSalt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_GetPassSalt",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetPassSalt" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (CString *) &((CUser const *)arg1)->GetPassSalt();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_GetAllowedHosts(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  set< CString > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_GetAllowedHosts",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetAllowedHosts" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (set< CString > *) &((CUser const *)arg1)->GetAllowedHosts();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_setT_CString_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_GetTimestampFormat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_GetTimestampFormat",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetTimestampFormat" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (CString *) &((CUser const *)arg1)->GetTimestampFormat();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_GetTimestampAppend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_GetTimestampAppend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetTimestampAppend" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (bool)((CUser const *)arg1)->GetTimestampAppend();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_GetTimestampPrepend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_GetTimestampPrepend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetTimestampPrepend" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (bool)((CUser const *)arg1)->GetTimestampPrepend();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_GetUserPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_GetUserPath",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetUserPath" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (CString *) &((CUser const *)arg1)->GetUserPath();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_DenyLoadMod(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_DenyLoadMod",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_DenyLoadMod" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (bool)((CUser const *)arg1)->DenyLoadMod();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_IsAdmin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_IsAdmin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_IsAdmin" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (bool)((CUser const *)arg1)->IsAdmin();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_DenySetBindHost(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_DenySetBindHost",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_DenySetBindHost" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (bool)((CUser const *)arg1)->DenySetBindHost();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_MultiClients(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_MultiClients",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_MultiClients" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (bool)((CUser const *)arg1)->MultiClients();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_GetStatusPrefix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_GetStatusPrefix",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetStatusPrefix" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (CString *) &((CUser const *)arg1)->GetStatusPrefix();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_GetDefaultChanModes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_GetDefaultChanModes",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetDefaultChanModes" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (CString *) &((CUser const *)arg1)->GetDefaultChanModes();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_GetQuitMsg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_GetQuitMsg",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetQuitMsg" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = ((CUser const *)arg1)->GetQuitMsg();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_GetCTCPReplies(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  MCString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_GetCTCPReplies",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetCTCPReplies" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (MCString *) &((CUser const *)arg1)->GetCTCPReplies();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_MCString, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_GetBufferCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_GetBufferCount",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetBufferCount" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (unsigned int)((CUser const *)arg1)->GetBufferCount();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_AutoClearChanBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_AutoClearChanBuffer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_AutoClearChanBuffer" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (bool)((CUser const *)arg1)->AutoClearChanBuffer();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_IsBeingDeleted(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_IsBeingDeleted",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_IsBeingDeleted" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (bool)((CUser const *)arg1)->IsBeingDeleted();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_GetTimezone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_GetTimezone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetTimezone" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = ((CUser const *)arg1)->GetTimezone();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_BytesRead(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned long long result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_BytesRead",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_BytesRead" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (unsigned long long)((CUser const *)arg1)->BytesRead();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_BytesWritten(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned long long result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_BytesWritten",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_BytesWritten" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (unsigned long long)((CUser const *)arg1)->BytesWritten();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_JoinTries(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_JoinTries",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_JoinTries" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = (unsigned int)((CUser const *)arg1)->JoinTries();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_GetSkinName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_GetSkinName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetSkinName" "', argument " "1"" of type '" "CUser const *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = ((CUser const *)arg1)->GetSkinName();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser___str__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser___str__" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = CUser___str__(arg1);
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser___repr__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser___repr__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser___repr__" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = CUser___repr__(arg1);
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CUser_GetNetworks_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< CIRCNetwork *,std::allocator< CIRCNetwork * > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CUser_GetNetworks_",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetNetworks_" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  result = CUser_GetNetworks_(arg1);
  resultobj = swig::from(static_cast< std::vector<CIRCNetwork*,std::allocator< CIRCNetwork * > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CUser_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CUser, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_CIRCNetwork_IsValidNetwork(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_IsValidNetwork",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_IsValidNetwork" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_IsValidNetwork" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  result = (bool)CIRCNetwork::IsValidNetwork((CString const &)*arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CIRCNetwork__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CIRCNetwork *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_CIRCNetwork",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CIRCNetwork" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CIRCNetwork" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CIRCNetwork" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (CIRCNetwork *)new CIRCNetwork(arg1,(CString const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CIRCNetwork, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CIRCNetwork__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CIRCNetwork *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CIRCNetwork *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_CIRCNetwork",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CIRCNetwork" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CIRCNetwork,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CIRCNetwork" "', argument " "2"" of type '" "CIRCNetwork const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CIRCNetwork" "', argument " "2"" of type '" "CIRCNetwork const &""'"); 
  }
  arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
  result = (CIRCNetwork *)new CIRCNetwork(arg1,(CIRCNetwork const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CIRCNetwork, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CIRCNetwork(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_CIRCNetwork, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_CIRCNetwork__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CUser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_CIRCNetwork__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_CIRCNetwork'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CIRCNetwork::CIRCNetwork(CUser *,CString const &)\n"
    "    CIRCNetwork::CIRCNetwork(CUser *,CIRCNetwork const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_CIRCNetwork(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CIRCNetwork",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CIRCNetwork" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_Clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CIRCNetwork *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCNetwork_Clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_Clone" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CIRCNetwork,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_Clone" "', argument " "2"" of type '" "CIRCNetwork const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_Clone" "', argument " "2"" of type '" "CIRCNetwork const &""'"); 
  }
  arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
  (arg1)->Clone((CIRCNetwork const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_GetNetworkPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_GetNetworkPath",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetNetworkPath" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  result = (arg1)->GetNetworkPath();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_DelServers(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_DelServers",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_DelServers" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  (arg1)->DelServers();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_ParseConfig__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CConfig *arg2 = (CConfig *) 0 ;
  CString *arg3 = 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CIRCNetwork_ParseConfig",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_ParseConfig" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CConfig, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_ParseConfig" "', argument " "2"" of type '" "CConfig *""'"); 
  }
  arg2 = reinterpret_cast< CConfig * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sError");
    }
  }
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CIRCNetwork_ParseConfig" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (bool)(arg1)->ParseConfig(arg2,*arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_ParseConfig__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CConfig *arg2 = (CConfig *) 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CIRCNetwork_ParseConfig",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_ParseConfig" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CConfig, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_ParseConfig" "', argument " "2"" of type '" "CConfig *""'"); 
  }
  arg2 = reinterpret_cast< CConfig * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sError");
    }
  }
  result = (bool)(arg1)->ParseConfig(arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_ParseConfig(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CConfig, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CIRCNetwork_ParseConfig__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CConfig, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_CIRCNetwork_ParseConfig__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CIRCNetwork_ParseConfig'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CIRCNetwork::ParseConfig(CConfig *,CString &,bool)\n"
    "    CIRCNetwork::ParseConfig(CConfig *,CString &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_ToConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CConfig result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_ToConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_ToConfig" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  result = (arg1)->ToConfig();
  resultobj = SWIG_NewPointerObj((new CConfig(static_cast< const CConfig& >(result))), SWIGTYPE_p_CConfig, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_BounceAllClients(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_BounceAllClients",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_BounceAllClients" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  (arg1)->BounceAllClients();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_IsUserAttached(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_IsUserAttached",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_IsUserAttached" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  result = (bool)((CIRCNetwork const *)arg1)->IsUserAttached();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_IsUserOnline(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_IsUserOnline",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_IsUserOnline" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  result = (bool)((CIRCNetwork const *)arg1)->IsUserOnline();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_ClientConnected(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CClient *arg2 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCNetwork_ClientConnected",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_ClientConnected" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_ClientConnected" "', argument " "2"" of type '" "CClient *""'"); 
  }
  arg2 = reinterpret_cast< CClient * >(argp2);
  (arg1)->ClientConnected(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_ClientDisconnected(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CClient *arg2 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCNetwork_ClientDisconnected",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_ClientDisconnected" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_ClientDisconnected" "', argument " "2"" of type '" "CClient *""'"); 
  }
  arg2 = reinterpret_cast< CClient * >(argp2);
  (arg1)->ClientDisconnected(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_GetUser(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CUser *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_GetUser",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetUser" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  result = (CUser *)(arg1)->GetUser();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CUser, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_GetName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_GetName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetName" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  result = (CString *) &((CIRCNetwork const *)arg1)->GetName();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_IsNetworkAttached(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_IsNetworkAttached",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_IsNetworkAttached" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  result = (bool)((CIRCNetwork const *)arg1)->IsNetworkAttached();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_GetClients(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  vector< CClient * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_GetClients",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetClients" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  result = (vector< CClient * > *) &(arg1)->GetClients();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_vectorT_CClient_p_std__allocatorT_CClient_p_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_SetUser(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CUser *arg2 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCNetwork_SetUser",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_SetUser" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_SetUser" "', argument " "2"" of type '" "CUser *""'"); 
  }
  arg2 = reinterpret_cast< CUser * >(argp2);
  (arg1)->SetUser(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_SetName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCNetwork_SetName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_SetName" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_SetName" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_SetName" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->SetName((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_GetModules__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CModules *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_GetModules",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetModules" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  result = (CModules *) &(arg1)->GetModules();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModules, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_GetModules__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CModules *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_GetModules",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetModules" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  result = (CModules *) &((CIRCNetwork const *)arg1)->GetModules();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModules, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_GetModules(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CIRCNetwork_GetModules__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CIRCNetwork_GetModules__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CIRCNetwork_GetModules'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CIRCNetwork::GetModules()\n"
    "    CIRCNetwork::GetModules() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_PutUser__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  CClient *arg3 = (CClient *) 0 ;
  CClient *arg4 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CIRCNetwork_PutUser",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_PutUser" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_PutUser" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_PutUser" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_PutUser" "', argument " "3"" of type '" "CClient *""'"); 
  }
  arg3 = reinterpret_cast< CClient * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CIRCNetwork_PutUser" "', argument " "4"" of type '" "CClient *""'"); 
  }
  arg4 = reinterpret_cast< CClient * >(argp4);
  result = (bool)(arg1)->PutUser((CString const &)*arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_PutUser__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  CClient *arg3 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CIRCNetwork_PutUser",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_PutUser" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_PutUser" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_PutUser" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_PutUser" "', argument " "3"" of type '" "CClient *""'"); 
  }
  arg3 = reinterpret_cast< CClient * >(argp3);
  result = (bool)(arg1)->PutUser((CString const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_PutUser__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCNetwork_PutUser",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_PutUser" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_PutUser" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_PutUser" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->PutUser((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_PutUser(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CIRCNetwork_PutUser__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CIRCNetwork_PutUser__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CClient, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CIRCNetwork_PutUser__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CIRCNetwork_PutUser'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CIRCNetwork::PutUser(CString const &,CClient *,CClient *)\n"
    "    CIRCNetwork::PutUser(CString const &,CClient *)\n"
    "    CIRCNetwork::PutUser(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_PutStatus__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  CClient *arg3 = (CClient *) 0 ;
  CClient *arg4 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CIRCNetwork_PutStatus",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_PutStatus" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_PutStatus" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_PutStatus" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_PutStatus" "', argument " "3"" of type '" "CClient *""'"); 
  }
  arg3 = reinterpret_cast< CClient * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CIRCNetwork_PutStatus" "', argument " "4"" of type '" "CClient *""'"); 
  }
  arg4 = reinterpret_cast< CClient * >(argp4);
  result = (bool)(arg1)->PutStatus((CString const &)*arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_PutStatus__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  CClient *arg3 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CIRCNetwork_PutStatus",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_PutStatus" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_PutStatus" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_PutStatus" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_PutStatus" "', argument " "3"" of type '" "CClient *""'"); 
  }
  arg3 = reinterpret_cast< CClient * >(argp3);
  result = (bool)(arg1)->PutStatus((CString const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_PutStatus__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCNetwork_PutStatus",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_PutStatus" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_PutStatus" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_PutStatus" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->PutStatus((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_PutStatus(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CIRCNetwork_PutStatus__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CIRCNetwork_PutStatus__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CClient, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CIRCNetwork_PutStatus__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CIRCNetwork_PutStatus'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CIRCNetwork::PutStatus(CString const &,CClient *,CClient *)\n"
    "    CIRCNetwork::PutStatus(CString const &,CClient *)\n"
    "    CIRCNetwork::PutStatus(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_PutModule__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  CClient *arg4 = (CClient *) 0 ;
  CClient *arg5 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CIRCNetwork_PutModule",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_PutModule" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_PutModule" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_PutModule" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_PutModule" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_PutModule" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CIRCNetwork_PutModule" "', argument " "4"" of type '" "CClient *""'"); 
  }
  arg4 = reinterpret_cast< CClient * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CIRCNetwork_PutModule" "', argument " "5"" of type '" "CClient *""'"); 
  }
  arg5 = reinterpret_cast< CClient * >(argp5);
  result = (bool)(arg1)->PutModule((CString const &)*arg2,(CString const &)*arg3,arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_PutModule__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  CClient *arg4 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CIRCNetwork_PutModule",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_PutModule" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_PutModule" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_PutModule" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_PutModule" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_PutModule" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CIRCNetwork_PutModule" "', argument " "4"" of type '" "CClient *""'"); 
  }
  arg4 = reinterpret_cast< CClient * >(argp4);
  result = (bool)(arg1)->PutModule((CString const &)*arg2,(CString const &)*arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_PutModule__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CIRCNetwork_PutModule",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_PutModule" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_PutModule" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_PutModule" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_PutModule" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_PutModule" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = (bool)(arg1)->PutModule((CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_PutModule(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CIRCNetwork_PutModule__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CClient, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CIRCNetwork_PutModule__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CClient, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CClient, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_CIRCNetwork_PutModule__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CIRCNetwork_PutModule'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CIRCNetwork::PutModule(CString const &,CString const &,CClient *,CClient *)\n"
    "    CIRCNetwork::PutModule(CString const &,CString const &,CClient *)\n"
    "    CIRCNetwork::PutModule(CString const &,CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_GetChans(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  vector< CChan * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_GetChans",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetChans" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  result = (vector< CChan * > *) &((CIRCNetwork const *)arg1)->GetChans();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_FindChan(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CChan *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCNetwork_FindChan",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_FindChan" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_FindChan" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_FindChan" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (CChan *)((CIRCNetwork const *)arg1)->FindChan((CString const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CChan, 0 |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_AddChan__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CChan *arg2 = (CChan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCNetwork_AddChan",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_AddChan" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CChan, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_AddChan" "', argument " "2"" of type '" "CChan *""'"); 
  }
  arg2 = reinterpret_cast< CChan * >(argp2);
  result = (bool)(arg1)->AddChan(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_AddChan__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CIRCNetwork_AddChan",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_AddChan" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_AddChan" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_AddChan" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CIRCNetwork_AddChan" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (bool)(arg1)->AddChan((CString const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_AddChan(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CChan, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CIRCNetwork_AddChan__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CIRCNetwork_AddChan__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CIRCNetwork_AddChan'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CIRCNetwork::AddChan(CChan *)\n"
    "    CIRCNetwork::AddChan(CString const &,bool)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_DelChan(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCNetwork_DelChan",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_DelChan" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_DelChan" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_DelChan" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->DelChan((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_JoinChans(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_JoinChans",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_JoinChans" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  (arg1)->JoinChans();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_GetChanPrefixes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_GetChanPrefixes",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetChanPrefixes" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  result = (CString *) &((CIRCNetwork const *)arg1)->GetChanPrefixes();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_SetChanPrefixes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCNetwork_SetChanPrefixes",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_SetChanPrefixes" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_SetChanPrefixes" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_SetChanPrefixes" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetChanPrefixes((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_IsChan(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCNetwork_IsChan",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_IsChan" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_IsChan" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_IsChan" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)((CIRCNetwork const *)arg1)->IsChan((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_GetServers(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  vector< CServer * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_GetServers",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetServers" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  result = (vector< CServer * > *) &((CIRCNetwork const *)arg1)->GetServers();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_vectorT_CServer_p_std__allocatorT_CServer_p_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_HasServers(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_HasServers",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_HasServers" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  result = (bool)((CIRCNetwork const *)arg1)->HasServers();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_FindServer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CServer *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCNetwork_FindServer",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_FindServer" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_FindServer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_FindServer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (CServer *)((CIRCNetwork const *)arg1)->FindServer((CString const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CServer, 0 |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_DelServer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  unsigned short arg3 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned short val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CIRCNetwork_DelServer",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_DelServer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_DelServer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_DelServer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_short(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CIRCNetwork_DelServer" "', argument " "3"" of type '" "unsigned short""'");
  } 
  arg3 = static_cast< unsigned short >(val3);
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CIRCNetwork_DelServer" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_DelServer" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  result = (bool)(arg1)->DelServer((CString const &)*arg2,arg3,(CString const &)*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_AddServer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCNetwork_AddServer",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_AddServer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_AddServer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_AddServer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->AddServer((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_AddServer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  unsigned short arg3 ;
  CString *arg4 = 0 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned short val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CIRCNetwork_AddServer",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_AddServer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_AddServer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_AddServer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_short(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CIRCNetwork_AddServer" "', argument " "3"" of type '" "unsigned short""'");
  } 
  arg3 = static_cast< unsigned short >(val3);
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CIRCNetwork_AddServer" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_AddServer" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CIRCNetwork_AddServer" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  result = (bool)(arg1)->AddServer((CString const &)*arg2,arg3,(CString const &)*arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_AddServer__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  unsigned short arg3 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned short val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CIRCNetwork_AddServer",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_AddServer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_AddServer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_AddServer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_short(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CIRCNetwork_AddServer" "', argument " "3"" of type '" "unsigned short""'");
  } 
  arg3 = static_cast< unsigned short >(val3);
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CIRCNetwork_AddServer" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_AddServer" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  result = (bool)(arg1)->AddServer((CString const &)*arg2,arg3,(CString const &)*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_AddServer__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  unsigned short arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned short val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CIRCNetwork_AddServer",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_AddServer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_AddServer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_AddServer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_short(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CIRCNetwork_AddServer" "', argument " "3"" of type '" "unsigned short""'");
  } 
  arg3 = static_cast< unsigned short >(val3);
  result = (bool)(arg1)->AddServer((CString const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_AddServer(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CIRCNetwork_AddServer__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_short(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CIRCNetwork_AddServer__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_short(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (CString**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CIRCNetwork_AddServer__SWIG_2(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_short(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (CString**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_CIRCNetwork_AddServer__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CIRCNetwork_AddServer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CIRCNetwork::AddServer(CString const &)\n"
    "    CIRCNetwork::AddServer(CString const &,unsigned short,CString const &,bool)\n"
    "    CIRCNetwork::AddServer(CString const &,unsigned short,CString const &)\n"
    "    CIRCNetwork::AddServer(CString const &,unsigned short)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_GetNextServer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CServer *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_GetNextServer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetNextServer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  result = (CServer *)(arg1)->GetNextServer();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CServer, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_GetCurrentServer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CServer *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_GetCurrentServer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetCurrentServer" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  result = (CServer *)((CIRCNetwork const *)arg1)->GetCurrentServer();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CServer, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_SetIRCServer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCNetwork_SetIRCServer",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_SetIRCServer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_SetIRCServer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_SetIRCServer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetIRCServer((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_SetNextServer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CServer *arg2 = (CServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCNetwork_SetNextServer",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_SetNextServer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CServer, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_SetNextServer" "', argument " "2"" of type '" "CServer const *""'"); 
  }
  arg2 = reinterpret_cast< CServer * >(argp2);
  result = (bool)(arg1)->SetNextServer((CServer const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_IsLastServer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_IsLastServer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_IsLastServer" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  result = (bool)((CIRCNetwork const *)arg1)->IsLastServer();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_SetIRCConnectEnabled(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCNetwork_SetIRCConnectEnabled",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_SetIRCConnectEnabled" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CIRCNetwork_SetIRCConnectEnabled" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetIRCConnectEnabled(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_GetIRCConnectEnabled(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_GetIRCConnectEnabled",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetIRCConnectEnabled" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  result = (bool)((CIRCNetwork const *)arg1)->GetIRCConnectEnabled();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_GetIRCSock__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CIRCSock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_GetIRCSock",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetIRCSock" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  result = (CIRCSock *)(arg1)->GetIRCSock();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CIRCSock, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_GetIRCSock__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CIRCSock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_GetIRCSock",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetIRCSock" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  result = (CIRCSock *)((CIRCNetwork const *)arg1)->GetIRCSock();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CIRCSock, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_GetIRCSock(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CIRCNetwork_GetIRCSock__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CIRCNetwork_GetIRCSock__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CIRCNetwork_GetIRCSock'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CIRCNetwork::GetIRCSock()\n"
    "    CIRCNetwork::GetIRCSock() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_GetIRCServer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_GetIRCServer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetIRCServer" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  result = (CString *) &((CIRCNetwork const *)arg1)->GetIRCServer();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_GetIRCNick(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CNick *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_GetIRCNick",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetIRCNick" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  result = (CNick *) &((CIRCNetwork const *)arg1)->GetIRCNick();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CNick, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_SetIRCNick(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CNick *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCNetwork_SetIRCNick",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_SetIRCNick" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_SetIRCNick" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_SetIRCNick" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  (arg1)->SetIRCNick((CNick const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_GetCurNick(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_GetCurNick",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetCurNick" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  result = ((CIRCNetwork const *)arg1)->GetCurNick();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_IsIRCAway(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_IsIRCAway",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_IsIRCAway" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  result = (bool)((CIRCNetwork const *)arg1)->IsIRCAway();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_SetIRCAway(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCNetwork_SetIRCAway",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_SetIRCAway" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CIRCNetwork_SetIRCAway" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetIRCAway(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_Connect(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_Connect",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_Connect" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  result = (bool)(arg1)->Connect();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_IsIRCConnected(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_IsIRCConnected",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_IsIRCConnected" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  result = (bool)((CIRCNetwork const *)arg1)->IsIRCConnected();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_SetIRCSocket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CIRCSock *arg2 = (CIRCSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCNetwork_SetIRCSocket",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_SetIRCSocket" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_SetIRCSocket" "', argument " "2"" of type '" "CIRCSock *""'"); 
  }
  arg2 = reinterpret_cast< CIRCSock * >(argp2);
  (arg1)->SetIRCSocket(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_IRCDisconnected(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_IRCDisconnected",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_IRCDisconnected" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  (arg1)->IRCDisconnected();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_CheckIRCConnect(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_CheckIRCConnect",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_CheckIRCConnect" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  (arg1)->CheckIRCConnect();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_PutIRC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCNetwork_PutIRC",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_PutIRC" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_PutIRC" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_PutIRC" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->PutIRC((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_AddRawBuffer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CIRCNetwork_AddRawBuffer",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_AddRawBuffer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_AddRawBuffer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_AddRawBuffer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_AddRawBuffer" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_AddRawBuffer" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->AddRawBuffer((CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_AddRawBuffer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCNetwork_AddRawBuffer",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_AddRawBuffer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_AddRawBuffer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_AddRawBuffer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->AddRawBuffer((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_AddRawBuffer(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CIRCNetwork_AddRawBuffer__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CIRCNetwork_AddRawBuffer__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CIRCNetwork_AddRawBuffer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CIRCNetwork::AddRawBuffer(CString const &,CString const &)\n"
    "    CIRCNetwork::AddRawBuffer(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_UpdateRawBuffer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CIRCNetwork_UpdateRawBuffer",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_UpdateRawBuffer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_UpdateRawBuffer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_UpdateRawBuffer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_UpdateRawBuffer" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_UpdateRawBuffer" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CIRCNetwork_UpdateRawBuffer" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_UpdateRawBuffer" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  (arg1)->UpdateRawBuffer((CString const &)*arg2,(CString const &)*arg3,(CString const &)*arg4);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_UpdateRawBuffer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CIRCNetwork_UpdateRawBuffer",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_UpdateRawBuffer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_UpdateRawBuffer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_UpdateRawBuffer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_UpdateRawBuffer" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_UpdateRawBuffer" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->UpdateRawBuffer((CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_UpdateRawBuffer(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CIRCNetwork_UpdateRawBuffer__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (CString**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CIRCNetwork_UpdateRawBuffer__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CIRCNetwork_UpdateRawBuffer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CIRCNetwork::UpdateRawBuffer(CString const &,CString const &,CString const &)\n"
    "    CIRCNetwork::UpdateRawBuffer(CString const &,CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_UpdateExactRawBuffer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CIRCNetwork_UpdateExactRawBuffer",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_UpdateExactRawBuffer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_UpdateExactRawBuffer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_UpdateExactRawBuffer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_UpdateExactRawBuffer" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_UpdateExactRawBuffer" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->UpdateExactRawBuffer((CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_UpdateExactRawBuffer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCNetwork_UpdateExactRawBuffer",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_UpdateExactRawBuffer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_UpdateExactRawBuffer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_UpdateExactRawBuffer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->UpdateExactRawBuffer((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_UpdateExactRawBuffer(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CIRCNetwork_UpdateExactRawBuffer__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CIRCNetwork_UpdateExactRawBuffer__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CIRCNetwork_UpdateExactRawBuffer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CIRCNetwork::UpdateExactRawBuffer(CString const &,CString const &)\n"
    "    CIRCNetwork::UpdateExactRawBuffer(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_ClearRawBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_ClearRawBuffer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_ClearRawBuffer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  (arg1)->ClearRawBuffer();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_AddMotdBuffer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CIRCNetwork_AddMotdBuffer",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_AddMotdBuffer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_AddMotdBuffer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_AddMotdBuffer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_AddMotdBuffer" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_AddMotdBuffer" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->AddMotdBuffer((CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_AddMotdBuffer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCNetwork_AddMotdBuffer",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_AddMotdBuffer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_AddMotdBuffer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_AddMotdBuffer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->AddMotdBuffer((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_AddMotdBuffer(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CIRCNetwork_AddMotdBuffer__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CIRCNetwork_AddMotdBuffer__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CIRCNetwork_AddMotdBuffer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CIRCNetwork::AddMotdBuffer(CString const &,CString const &)\n"
    "    CIRCNetwork::AddMotdBuffer(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_UpdateMotdBuffer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CIRCNetwork_UpdateMotdBuffer",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_UpdateMotdBuffer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_UpdateMotdBuffer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_UpdateMotdBuffer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_UpdateMotdBuffer" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_UpdateMotdBuffer" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CIRCNetwork_UpdateMotdBuffer" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_UpdateMotdBuffer" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  (arg1)->UpdateMotdBuffer((CString const &)*arg2,(CString const &)*arg3,(CString const &)*arg4);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_UpdateMotdBuffer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CIRCNetwork_UpdateMotdBuffer",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_UpdateMotdBuffer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_UpdateMotdBuffer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_UpdateMotdBuffer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_UpdateMotdBuffer" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_UpdateMotdBuffer" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->UpdateMotdBuffer((CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_UpdateMotdBuffer(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CIRCNetwork_UpdateMotdBuffer__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (CString**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CIRCNetwork_UpdateMotdBuffer__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CIRCNetwork_UpdateMotdBuffer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CIRCNetwork::UpdateMotdBuffer(CString const &,CString const &,CString const &)\n"
    "    CIRCNetwork::UpdateMotdBuffer(CString const &,CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_ClearMotdBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_ClearMotdBuffer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_ClearMotdBuffer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  (arg1)->ClearMotdBuffer();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_AddQueryBuffer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CIRCNetwork_AddQueryBuffer",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_AddQueryBuffer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_AddQueryBuffer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_AddQueryBuffer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_AddQueryBuffer" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_AddQueryBuffer" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->AddQueryBuffer((CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_AddQueryBuffer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCNetwork_AddQueryBuffer",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_AddQueryBuffer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_AddQueryBuffer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_AddQueryBuffer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->AddQueryBuffer((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_AddQueryBuffer(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CIRCNetwork_AddQueryBuffer__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CIRCNetwork_AddQueryBuffer__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CIRCNetwork_AddQueryBuffer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CIRCNetwork::AddQueryBuffer(CString const &,CString const &)\n"
    "    CIRCNetwork::AddQueryBuffer(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_UpdateQueryBuffer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CIRCNetwork_UpdateQueryBuffer",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_UpdateQueryBuffer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_UpdateQueryBuffer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_UpdateQueryBuffer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_UpdateQueryBuffer" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_UpdateQueryBuffer" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CIRCNetwork_UpdateQueryBuffer" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_UpdateQueryBuffer" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  (arg1)->UpdateQueryBuffer((CString const &)*arg2,(CString const &)*arg3,(CString const &)*arg4);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_UpdateQueryBuffer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CIRCNetwork_UpdateQueryBuffer",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_UpdateQueryBuffer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_UpdateQueryBuffer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_UpdateQueryBuffer" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_UpdateQueryBuffer" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_UpdateQueryBuffer" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->UpdateQueryBuffer((CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_UpdateQueryBuffer(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CIRCNetwork_UpdateQueryBuffer__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (CString**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CIRCNetwork_UpdateQueryBuffer__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CIRCNetwork_UpdateQueryBuffer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CIRCNetwork::UpdateQueryBuffer(CString const &,CString const &,CString const &)\n"
    "    CIRCNetwork::UpdateQueryBuffer(CString const &,CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_ClearQueryBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_ClearQueryBuffer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_ClearQueryBuffer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  (arg1)->ClearQueryBuffer();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_GetNick__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCNetwork_GetNick",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetNick" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CIRCNetwork_GetNick" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (CString *) &((CIRCNetwork const *)arg1)->GetNick(arg2);
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_GetNick__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_GetNick",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetNick" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  result = (CString *) &((CIRCNetwork const *)arg1)->GetNick();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_GetNick(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CIRCNetwork_GetNick__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CIRCNetwork_GetNick__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CIRCNetwork_GetNick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CIRCNetwork::GetNick(bool const) const\n"
    "    CIRCNetwork::GetNick() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_GetAltNick__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCNetwork_GetAltNick",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetAltNick" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CIRCNetwork_GetAltNick" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (CString *) &((CIRCNetwork const *)arg1)->GetAltNick(arg2);
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_GetAltNick__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_GetAltNick",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetAltNick" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  result = (CString *) &((CIRCNetwork const *)arg1)->GetAltNick();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_GetAltNick(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CIRCNetwork_GetAltNick__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CIRCNetwork_GetAltNick__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CIRCNetwork_GetAltNick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CIRCNetwork::GetAltNick(bool const) const\n"
    "    CIRCNetwork::GetAltNick() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_GetIdent__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCNetwork_GetIdent",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetIdent" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CIRCNetwork_GetIdent" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (CString *) &((CIRCNetwork const *)arg1)->GetIdent(arg2);
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_GetIdent__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_GetIdent",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetIdent" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  result = (CString *) &((CIRCNetwork const *)arg1)->GetIdent();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_GetIdent(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CIRCNetwork_GetIdent__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CIRCNetwork_GetIdent__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CIRCNetwork_GetIdent'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CIRCNetwork::GetIdent(bool const) const\n"
    "    CIRCNetwork::GetIdent() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_GetRealName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_GetRealName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetRealName" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  result = (CString *) &((CIRCNetwork const *)arg1)->GetRealName();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_SetNick(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCNetwork_SetNick",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_SetNick" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_SetNick" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_SetNick" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetNick((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_SetAltNick(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCNetwork_SetAltNick",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_SetAltNick" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_SetAltNick" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_SetAltNick" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetAltNick((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_SetIdent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCNetwork_SetIdent",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_SetIdent" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_SetIdent" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_SetIdent" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetIdent((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_SetRealName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCNetwork_SetRealName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_SetRealName" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_SetRealName" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_SetRealName" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetRealName((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_GetFloodRate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_GetFloodRate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetFloodRate" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  result = (double)((CIRCNetwork const *)arg1)->GetFloodRate();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_GetFloodBurst(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned short result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_GetFloodBurst",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetFloodBurst" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  result = (unsigned short)((CIRCNetwork const *)arg1)->GetFloodBurst();
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_SetFloodRate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCNetwork_SetFloodRate",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_SetFloodRate" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CIRCNetwork_SetFloodRate" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->SetFloodRate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_SetFloodBurst(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  unsigned short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCNetwork_SetFloodBurst",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_SetFloodBurst" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CIRCNetwork_SetFloodBurst" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  (arg1)->SetFloodBurst(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_ExpandString__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCNetwork_ExpandString",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_ExpandString" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_ExpandString" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_ExpandString" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = ((CIRCNetwork const *)arg1)->ExpandString((CString const &)*arg2);
  resultobj = SWIG_From_std_string((CString)(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_ExpandString__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CIRCNetwork_ExpandString",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_ExpandString" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_ExpandString" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_ExpandString" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sRet");
    }
  }
  result = (CString *) &((CIRCNetwork const *)arg1)->ExpandString((CString const &)*arg2,*arg3);
  {
    if (result) {
      resultobj = CPyRetString::wrap(*result);
    } else {
      resultobj = Py_None;
      Py_INCREF(Py_None);
    }
  }
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_ExpandString(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CIRCNetwork_ExpandString__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CIRCNetwork_ExpandString__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CIRCNetwork_ExpandString'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CIRCNetwork::ExpandString(CString const &) const\n"
    "    CIRCNetwork::ExpandString(CString const &,CString &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork___str__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork___str__" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  result = CIRCNetwork___str__(arg1);
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork___repr__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork___repr__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork___repr__" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  result = CIRCNetwork___repr__(arg1);
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCNetwork_GetChans_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< CChan *,std::allocator< CChan * > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCNetwork_GetChans_",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetChans_" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  result = CIRCNetwork_GetChans_(arg1);
  resultobj = swig::from(static_cast< std::vector<CChan*,std::allocator< CChan * > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CIRCNetwork_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CIRCNetwork, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_CAuthBase(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CAuthBase *arg1 = (CAuthBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CAuthBase",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CAuthBase, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CAuthBase" "', argument " "1"" of type '" "CAuthBase *""'"); 
  }
  arg1 = reinterpret_cast< CAuthBase * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CAuthBase_SetLoginInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CAuthBase *arg1 = (CAuthBase *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  Csock *arg4 = (Csock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CAuthBase_SetLoginInfo",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CAuthBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CAuthBase_SetLoginInfo" "', argument " "1"" of type '" "CAuthBase *""'"); 
  }
  arg1 = reinterpret_cast< CAuthBase * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CAuthBase_SetLoginInfo" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CAuthBase_SetLoginInfo" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CAuthBase_SetLoginInfo" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CAuthBase_SetLoginInfo" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_Csock, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CAuthBase_SetLoginInfo" "', argument " "4"" of type '" "Csock *""'"); 
  }
  arg4 = reinterpret_cast< Csock * >(argp4);
  (arg1)->SetLoginInfo((CString const &)*arg2,(CString const &)*arg3,arg4);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CAuthBase_AcceptLogin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CAuthBase *arg1 = (CAuthBase *) 0 ;
  CUser *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CAuthBase_AcceptLogin",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CAuthBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CAuthBase_AcceptLogin" "', argument " "1"" of type '" "CAuthBase *""'"); 
  }
  arg1 = reinterpret_cast< CAuthBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CUser,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CAuthBase_AcceptLogin" "', argument " "2"" of type '" "CUser &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CAuthBase_AcceptLogin" "', argument " "2"" of type '" "CUser &""'"); 
  }
  arg2 = reinterpret_cast< CUser * >(argp2);
  (arg1)->AcceptLogin(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CAuthBase_RefuseLogin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CAuthBase *arg1 = (CAuthBase *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CAuthBase_RefuseLogin",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CAuthBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CAuthBase_RefuseLogin" "', argument " "1"" of type '" "CAuthBase *""'"); 
  }
  arg1 = reinterpret_cast< CAuthBase * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CAuthBase_RefuseLogin" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CAuthBase_RefuseLogin" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->RefuseLogin((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CAuthBase_GetUsername(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CAuthBase *arg1 = (CAuthBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CAuthBase_GetUsername",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CAuthBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CAuthBase_GetUsername" "', argument " "1"" of type '" "CAuthBase const *""'"); 
  }
  arg1 = reinterpret_cast< CAuthBase * >(argp1);
  result = (CString *) &((CAuthBase const *)arg1)->GetUsername();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CAuthBase_GetPassword(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CAuthBase *arg1 = (CAuthBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CAuthBase_GetPassword",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CAuthBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CAuthBase_GetPassword" "', argument " "1"" of type '" "CAuthBase const *""'"); 
  }
  arg1 = reinterpret_cast< CAuthBase * >(argp1);
  result = (CString *) &((CAuthBase const *)arg1)->GetPassword();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CAuthBase_GetSocket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CAuthBase *arg1 = (CAuthBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Csock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CAuthBase_GetSocket",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CAuthBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CAuthBase_GetSocket" "', argument " "1"" of type '" "CAuthBase const *""'"); 
  }
  arg1 = reinterpret_cast< CAuthBase * >(argp1);
  result = (Csock *)((CAuthBase const *)arg1)->GetSocket();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CAuthBase_GetRemoteIP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CAuthBase *arg1 = (CAuthBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CAuthBase_GetRemoteIP",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CAuthBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CAuthBase_GetRemoteIP" "', argument " "1"" of type '" "CAuthBase const *""'"); 
  }
  arg1 = reinterpret_cast< CAuthBase * >(argp1);
  result = ((CAuthBase const *)arg1)->GetRemoteIP();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CAuthBase_Invalidate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CAuthBase *arg1 = (CAuthBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CAuthBase_Invalidate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CAuthBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CAuthBase_Invalidate" "', argument " "1"" of type '" "CAuthBase *""'"); 
  }
  arg1 = reinterpret_cast< CAuthBase * >(argp1);
  (arg1)->Invalidate();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CAuthBase_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CAuthBase, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CClientAuth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CClientAuth *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_CClientAuth",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CClientAuth" "', argument " "1"" of type '" "CClient *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CClientAuth" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CClientAuth" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CClientAuth" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CClientAuth" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = (CClientAuth *)new CClientAuth(arg1,(CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CClientAuth, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CClientAuth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClientAuth *arg1 = (CClientAuth *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CClientAuth",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClientAuth, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CClientAuth" "', argument " "1"" of type '" "CClientAuth *""'"); 
  }
  arg1 = reinterpret_cast< CClientAuth * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClientAuth_Invalidate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClientAuth *arg1 = (CClientAuth *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CClientAuth_Invalidate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClientAuth, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClientAuth_Invalidate" "', argument " "1"" of type '" "CClientAuth *""'"); 
  }
  arg1 = reinterpret_cast< CClientAuth * >(argp1);
  (arg1)->Invalidate();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClientAuth_AcceptedLogin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClientAuth *arg1 = (CClientAuth *) 0 ;
  CUser *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CClientAuth_AcceptedLogin",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClientAuth, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClientAuth_AcceptedLogin" "', argument " "1"" of type '" "CClientAuth *""'"); 
  }
  arg1 = reinterpret_cast< CClientAuth * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CUser,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClientAuth_AcceptedLogin" "', argument " "2"" of type '" "CUser &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CClientAuth_AcceptedLogin" "', argument " "2"" of type '" "CUser &""'"); 
  }
  arg2 = reinterpret_cast< CUser * >(argp2);
  (arg1)->AcceptedLogin(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClientAuth_RefusedLogin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClientAuth *arg1 = (CClientAuth *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CClientAuth_RefusedLogin",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClientAuth, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClientAuth_RefusedLogin" "', argument " "1"" of type '" "CClientAuth *""'"); 
  }
  arg1 = reinterpret_cast< CClientAuth * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClientAuth_RefusedLogin" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CClientAuth_RefusedLogin" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->RefusedLogin((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *CClientAuth_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CClientAuth, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CClient(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CClient")) SWIG_fail;
  result = (CClient *)new CClient();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CClient, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CClient(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CClient",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CClient" "', argument " "1"" of type '" "CClient *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_AcceptLogin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  CUser *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CClient_AcceptLogin",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_AcceptLogin" "', argument " "1"" of type '" "CClient *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CUser,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClient_AcceptLogin" "', argument " "2"" of type '" "CUser &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CClient_AcceptLogin" "', argument " "2"" of type '" "CUser &""'"); 
  }
  arg2 = reinterpret_cast< CUser * >(argp2);
  (arg1)->AcceptLogin(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_RefuseLogin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CClient_RefuseLogin",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_RefuseLogin" "', argument " "1"" of type '" "CClient *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClient_RefuseLogin" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CClient_RefuseLogin" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->RefuseLogin((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_GetNick__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CClient_GetNick",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_GetNick" "', argument " "1"" of type '" "CClient const *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CClient_GetNick" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = ((CClient const *)arg1)->GetNick(arg2);
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_GetNick__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CClient_GetNick",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_GetNick" "', argument " "1"" of type '" "CClient const *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  result = ((CClient const *)arg1)->GetNick();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_GetNick(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CClient, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CClient_GetNick__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CClient, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CClient_GetNick__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CClient_GetNick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CClient::GetNick(bool) const\n"
    "    CClient::GetNick() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CClient_GetNickMask(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CClient_GetNickMask",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_GetNickMask" "', argument " "1"" of type '" "CClient const *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  result = ((CClient const *)arg1)->GetNickMask();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_HasNamesx(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CClient_HasNamesx",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_HasNamesx" "', argument " "1"" of type '" "CClient const *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  result = (bool)((CClient const *)arg1)->HasNamesx();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_HasUHNames(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CClient_HasUHNames",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_HasUHNames" "', argument " "1"" of type '" "CClient const *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  result = (bool)((CClient const *)arg1)->HasUHNames();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_IsAway(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CClient_IsAway",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_IsAway" "', argument " "1"" of type '" "CClient const *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  result = (bool)((CClient const *)arg1)->IsAway();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_HasServerTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CClient_HasServerTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_HasServerTime" "', argument " "1"" of type '" "CClient const *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  result = (bool)((CClient const *)arg1)->HasServerTime();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_UserCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CClient_UserCommand",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_UserCommand" "', argument " "1"" of type '" "CClient *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sLine");
    }
  }
  (arg1)->UserCommand(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_UserPortCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CClient_UserPortCommand",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_UserPortCommand" "', argument " "1"" of type '" "CClient *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sLine");
    }
  }
  (arg1)->UserPortCommand(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_StatusCTCP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CClient_StatusCTCP",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_StatusCTCP" "', argument " "1"" of type '" "CClient *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClient_StatusCTCP" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CClient_StatusCTCP" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->StatusCTCP((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_BouncedOff(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CClient_BouncedOff",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_BouncedOff" "', argument " "1"" of type '" "CClient *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  (arg1)->BouncedOff();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_IsAttached(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CClient_IsAttached",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_IsAttached" "', argument " "1"" of type '" "CClient const *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  result = (bool)((CClient const *)arg1)->IsAttached();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_PutIRC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CClient_PutIRC",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_PutIRC" "', argument " "1"" of type '" "CClient *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClient_PutIRC" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CClient_PutIRC" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->PutIRC((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_PutClient(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CClient_PutClient",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_PutClient" "', argument " "1"" of type '" "CClient *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClient_PutClient" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CClient_PutClient" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->PutClient((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_PutStatus__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  CTable *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CClient_PutStatus",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_PutStatus" "', argument " "1"" of type '" "CClient *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CTable,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClient_PutStatus" "', argument " "2"" of type '" "CTable const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CClient_PutStatus" "', argument " "2"" of type '" "CTable const &""'"); 
  }
  arg2 = reinterpret_cast< CTable * >(argp2);
  result = (unsigned int)(arg1)->PutStatus((CTable const &)*arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_PutStatus__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CClient_PutStatus",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_PutStatus" "', argument " "1"" of type '" "CClient *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClient_PutStatus" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CClient_PutStatus" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->PutStatus((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_PutStatus(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CClient, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_CTable, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CClient_PutStatus__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CClient, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CClient_PutStatus__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CClient_PutStatus'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CClient::PutStatus(CTable const &)\n"
    "    CClient::PutStatus(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CClient_PutStatusNotice(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CClient_PutStatusNotice",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_PutStatusNotice" "', argument " "1"" of type '" "CClient *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClient_PutStatusNotice" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CClient_PutStatusNotice" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->PutStatusNotice((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_PutModule(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CClient_PutModule",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_PutModule" "', argument " "1"" of type '" "CClient *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClient_PutModule" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CClient_PutModule" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CClient_PutModule" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CClient_PutModule" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->PutModule((CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_PutModNotice(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CClient_PutModNotice",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_PutModNotice" "', argument " "1"" of type '" "CClient *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClient_PutModNotice" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CClient_PutModNotice" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CClient_PutModNotice" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CClient_PutModNotice" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->PutModNotice((CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_IsCapEnabled(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CClient_IsCapEnabled",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_IsCapEnabled" "', argument " "1"" of type '" "CClient *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClient_IsCapEnabled" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CClient_IsCapEnabled" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->IsCapEnabled((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_ReadLine(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CClient_ReadLine",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_ReadLine" "', argument " "1"" of type '" "CClient *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClient_ReadLine" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CClient_ReadLine" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->ReadLine((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_SendMotd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CClient_SendMotd",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_SendMotd" "', argument " "1"" of type '" "CClient *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  result = (bool)(arg1)->SendMotd();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_HelpUser(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CClient_HelpUser",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_HelpUser" "', argument " "1"" of type '" "CClient *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  (arg1)->HelpUser();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_AuthUser(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CClient_AuthUser",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_AuthUser" "', argument " "1"" of type '" "CClient *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  (arg1)->AuthUser();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_Connected(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CClient_Connected",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_Connected" "', argument " "1"" of type '" "CClient *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  (arg1)->Connected();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_Timeout(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CClient_Timeout",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_Timeout" "', argument " "1"" of type '" "CClient *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  (arg1)->Timeout();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_Disconnected(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CClient_Disconnected",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_Disconnected" "', argument " "1"" of type '" "CClient *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  (arg1)->Disconnected();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_ConnectionRefused(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CClient_ConnectionRefused",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_ConnectionRefused" "', argument " "1"" of type '" "CClient *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  (arg1)->ConnectionRefused();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_ReachedMaxBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CClient_ReachedMaxBuffer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_ReachedMaxBuffer" "', argument " "1"" of type '" "CClient *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  (arg1)->ReachedMaxBuffer();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_SetNick(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CClient_SetNick",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_SetNick" "', argument " "1"" of type '" "CClient *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClient_SetNick" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CClient_SetNick" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetNick((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_SetAway(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CClient_SetAway",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_SetAway" "', argument " "1"" of type '" "CClient *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CClient_SetAway" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetAway(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_GetUser(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CUser *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CClient_GetUser",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_GetUser" "', argument " "1"" of type '" "CClient const *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  result = (CUser *)((CClient const *)arg1)->GetUser();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CUser, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_SetNetwork__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  CIRCNetwork *arg2 = (CIRCNetwork *) 0 ;
  bool arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CClient_SetNetwork",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_SetNetwork" "', argument " "1"" of type '" "CClient *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClient_SetNetwork" "', argument " "2"" of type '" "CIRCNetwork *""'"); 
  }
  arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CClient_SetNetwork" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CClient_SetNetwork" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  (arg1)->SetNetwork(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_SetNetwork__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  CIRCNetwork *arg2 = (CIRCNetwork *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CClient_SetNetwork",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_SetNetwork" "', argument " "1"" of type '" "CClient *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClient_SetNetwork" "', argument " "2"" of type '" "CIRCNetwork *""'"); 
  }
  arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CClient_SetNetwork" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  (arg1)->SetNetwork(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_SetNetwork__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  CIRCNetwork *arg2 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CClient_SetNetwork",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_SetNetwork" "', argument " "1"" of type '" "CClient *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClient_SetNetwork" "', argument " "2"" of type '" "CIRCNetwork *""'"); 
  }
  arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
  (arg1)->SetNetwork(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_SetNetwork(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CClient, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CClient_SetNetwork__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CClient, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CClient_SetNetwork__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CClient, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CIRCNetwork, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_CClient_SetNetwork__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CClient_SetNetwork'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CClient::SetNetwork(CIRCNetwork *,bool,bool)\n"
    "    CClient::SetNetwork(CIRCNetwork *,bool)\n"
    "    CClient::SetNetwork(CIRCNetwork *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CClient_GetNetwork(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CIRCNetwork *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CClient_GetNetwork",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_GetNetwork" "', argument " "1"" of type '" "CClient const *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  result = (CIRCNetwork *)((CClient const *)arg1)->GetNetwork();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_GetClients(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  vector< CClient * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CClient_GetClients",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_GetClients" "', argument " "1"" of type '" "CClient *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  result = (vector< CClient * > *) &(arg1)->GetClients();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_vectorT_CClient_p_std__allocatorT_CClient_p_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_GetIRCSock__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CIRCSock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CClient_GetIRCSock",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_GetIRCSock" "', argument " "1"" of type '" "CClient const *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  result = (CIRCSock *)((CClient const *)arg1)->GetIRCSock();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CIRCSock, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_GetIRCSock__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CIRCSock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CClient_GetIRCSock",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_GetIRCSock" "', argument " "1"" of type '" "CClient *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  result = (CIRCSock *)(arg1)->GetIRCSock();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CIRCSock, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CClient_GetIRCSock(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CClient, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CClient_GetIRCSock__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CClient, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CClient_GetIRCSock__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CClient_GetIRCSock'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CClient::GetIRCSock() const\n"
    "    CClient::GetIRCSock()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CClient_GetFullName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CClient *arg1 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CClient_GetFullName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_GetFullName" "', argument " "1"" of type '" "CClient *""'"); 
  }
  arg1 = reinterpret_cast< CClient * >(argp1);
  result = (arg1)->GetFullName();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CClient_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CClient, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CIRCSock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CIRCSock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_CIRCSock",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CIRCSock" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
  }
  arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
  result = (CIRCSock *)new CIRCSock(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CIRCSock, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CIRCSock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CIRCSock",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CIRCSock" "', argument " "1"" of type '" "CIRCSock *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_OnCTCPReply(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  CNick *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CIRCSock_OnCTCPReply",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_OnCTCPReply" "', argument " "1"" of type '" "CIRCSock *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCSock_OnCTCPReply" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_OnCTCPReply" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (bool)(arg1)->OnCTCPReply(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_OnPrivCTCP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  CNick *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CIRCSock_OnPrivCTCP",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_OnPrivCTCP" "', argument " "1"" of type '" "CIRCSock *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCSock_OnPrivCTCP" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_OnPrivCTCP" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (bool)(arg1)->OnPrivCTCP(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_OnChanCTCP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  CNick *arg2 = 0 ;
  CString *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CIRCSock_OnChanCTCP",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_OnChanCTCP" "', argument " "1"" of type '" "CIRCSock *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCSock_OnChanCTCP" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_OnChanCTCP" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCSock_OnChanCTCP" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_OnChanCTCP" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj3, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg4 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 4 sMessage");
    }
  }
  result = (bool)(arg1)->OnChanCTCP(*arg2,(CString const &)*arg3,*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_OnGeneralCTCP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  CNick *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CIRCSock_OnGeneralCTCP",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_OnGeneralCTCP" "', argument " "1"" of type '" "CIRCSock *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCSock_OnGeneralCTCP" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_OnGeneralCTCP" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (bool)(arg1)->OnGeneralCTCP(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_OnPrivMsg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  CNick *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CIRCSock_OnPrivMsg",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_OnPrivMsg" "', argument " "1"" of type '" "CIRCSock *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCSock_OnPrivMsg" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_OnPrivMsg" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (bool)(arg1)->OnPrivMsg(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_OnChanMsg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  CNick *arg2 = 0 ;
  CString *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CIRCSock_OnChanMsg",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_OnChanMsg" "', argument " "1"" of type '" "CIRCSock *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCSock_OnChanMsg" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_OnChanMsg" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCSock_OnChanMsg" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_OnChanMsg" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj3, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg4 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 4 sMessage");
    }
  }
  result = (bool)(arg1)->OnChanMsg(*arg2,(CString const &)*arg3,*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_OnPrivNotice(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  CNick *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CIRCSock_OnPrivNotice",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_OnPrivNotice" "', argument " "1"" of type '" "CIRCSock *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCSock_OnPrivNotice" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_OnPrivNotice" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (bool)(arg1)->OnPrivNotice(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_OnChanNotice(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  CNick *arg2 = 0 ;
  CString *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CIRCSock_OnChanNotice",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_OnChanNotice" "', argument " "1"" of type '" "CIRCSock *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCSock_OnChanNotice" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_OnChanNotice" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCSock_OnChanNotice" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_OnChanNotice" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj3, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg4 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 4 sMessage");
    }
  }
  result = (bool)(arg1)->OnChanNotice(*arg2,(CString const &)*arg3,*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_OnServerCapAvailable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCSock_OnServerCapAvailable",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_OnServerCapAvailable" "', argument " "1"" of type '" "CIRCSock *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCSock_OnServerCapAvailable" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_OnServerCapAvailable" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->OnServerCapAvailable((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_ReadLine(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCSock_ReadLine",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_ReadLine" "', argument " "1"" of type '" "CIRCSock *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCSock_ReadLine" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_ReadLine" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->ReadLine((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_Connected(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCSock_Connected",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_Connected" "', argument " "1"" of type '" "CIRCSock *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  (arg1)->Connected();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_Disconnected(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCSock_Disconnected",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_Disconnected" "', argument " "1"" of type '" "CIRCSock *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  (arg1)->Disconnected();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_ConnectionRefused(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCSock_ConnectionRefused",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_ConnectionRefused" "', argument " "1"" of type '" "CIRCSock *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  (arg1)->ConnectionRefused();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_SockError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  int arg2 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CIRCSock_SockError",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_SockError" "', argument " "1"" of type '" "CIRCSock *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CIRCSock_SockError" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCSock_SockError" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_SockError" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->SockError(arg2,(CString const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_Timeout(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCSock_Timeout",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_Timeout" "', argument " "1"" of type '" "CIRCSock *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  (arg1)->Timeout();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_ReachedMaxBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCSock_ReachedMaxBuffer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_ReachedMaxBuffer" "', argument " "1"" of type '" "CIRCSock *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  (arg1)->ReachedMaxBuffer();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_PutIRC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCSock_PutIRC",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_PutIRC" "', argument " "1"" of type '" "CIRCSock *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCSock_PutIRC" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_PutIRC" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->PutIRC((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_PutIRCQuick(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCSock_PutIRCQuick",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_PutIRCQuick" "', argument " "1"" of type '" "CIRCSock *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCSock_PutIRCQuick" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_PutIRCQuick" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->PutIRCQuick((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_ResetChans(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCSock_ResetChans",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_ResetChans" "', argument " "1"" of type '" "CIRCSock *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  (arg1)->ResetChans();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_Quit__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCSock_Quit",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_Quit" "', argument " "1"" of type '" "CIRCSock *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCSock_Quit" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_Quit" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->Quit((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_Quit__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCSock_Quit",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_Quit" "', argument " "1"" of type '" "CIRCSock *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  (arg1)->Quit();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_Quit(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCSock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CIRCSock_Quit__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCSock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CIRCSock_Quit__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CIRCSock_Quit'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CIRCSock::Quit(CString const &)\n"
    "    CIRCSock::Quit()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CIRCSock_PauseCap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCSock_PauseCap",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_PauseCap" "', argument " "1"" of type '" "CIRCSock *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  (arg1)->PauseCap();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_ResumeCap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCSock_ResumeCap",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_ResumeCap" "', argument " "1"" of type '" "CIRCSock *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  (arg1)->ResumeCap();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_SetPass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCSock_SetPass",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_SetPass" "', argument " "1"" of type '" "CIRCSock *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCSock_SetPass" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_SetPass" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetPass((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_GetMaxNickLen(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCSock_GetMaxNickLen",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_GetMaxNickLen" "', argument " "1"" of type '" "CIRCSock const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  result = (unsigned int)((CIRCSock const *)arg1)->GetMaxNickLen();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_GetModeType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  unsigned char arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CIRCSock::EChanModeArgs result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCSock_GetModeType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_GetModeType" "', argument " "1"" of type '" "CIRCSock const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CIRCSock_GetModeType" "', argument " "2"" of type '" "unsigned char""'");
  } 
  arg2 = static_cast< unsigned char >(val2);
  result = (CIRCSock::EChanModeArgs)((CIRCSock const *)arg1)->GetModeType(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_GetPermFromMode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  unsigned char arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  unsigned char result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCSock_GetPermFromMode",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_GetPermFromMode" "', argument " "1"" of type '" "CIRCSock const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CIRCSock_GetPermFromMode" "', argument " "2"" of type '" "unsigned char""'");
  } 
  arg2 = static_cast< unsigned char >(val2);
  result = (unsigned char)((CIRCSock const *)arg1)->GetPermFromMode(arg2);
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_GetChanModes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  map< unsigned char,CIRCSock::EChanModeArgs > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCSock_GetChanModes",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_GetChanModes" "', argument " "1"" of type '" "CIRCSock const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  result = (map< unsigned char,CIRCSock::EChanModeArgs > *) &((CIRCSock const *)arg1)->GetChanModes();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mapT_unsigned_char_CIRCSock__EChanModeArgs_std__lessT_unsigned_char_t_std__allocatorT_std__pairT_unsigned_char_const_CIRCSock__EChanModeArgs_t_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_IsPermChar(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  char arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCSock_IsPermChar",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_IsPermChar" "', argument " "1"" of type '" "CIRCSock const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  ecode2 = SWIG_AsVal_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CIRCSock_IsPermChar" "', argument " "2"" of type '" "char""'");
  } 
  arg2 = static_cast< char >(val2);
  result = (bool)((CIRCSock const *)arg1)->IsPermChar(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_IsPermMode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  char arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCSock_IsPermMode",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_IsPermMode" "', argument " "1"" of type '" "CIRCSock const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  ecode2 = SWIG_AsVal_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CIRCSock_IsPermMode" "', argument " "2"" of type '" "char""'");
  } 
  arg2 = static_cast< char >(val2);
  result = (bool)((CIRCSock const *)arg1)->IsPermMode(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_GetPerms(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCSock_GetPerms",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_GetPerms" "', argument " "1"" of type '" "CIRCSock const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  result = (CString *) &((CIRCSock const *)arg1)->GetPerms();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_GetPermModes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCSock_GetPermModes",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_GetPermModes" "', argument " "1"" of type '" "CIRCSock const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  result = (CString *) &((CIRCSock const *)arg1)->GetPermModes();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_GetNickMask(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCSock_GetNickMask",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_GetNickMask" "', argument " "1"" of type '" "CIRCSock const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  result = ((CIRCSock const *)arg1)->GetNickMask();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_GetNick(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCSock_GetNick",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_GetNick" "', argument " "1"" of type '" "CIRCSock const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  result = (CString *) &((CIRCSock const *)arg1)->GetNick();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_GetPass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCSock_GetPass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_GetPass" "', argument " "1"" of type '" "CIRCSock const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  result = (CString *) &((CIRCSock const *)arg1)->GetPass();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_GetNetwork(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CIRCNetwork *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCSock_GetNetwork",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_GetNetwork" "', argument " "1"" of type '" "CIRCSock const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  result = (CIRCNetwork *)((CIRCSock const *)arg1)->GetNetwork();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_HasNamesx(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCSock_HasNamesx",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_HasNamesx" "', argument " "1"" of type '" "CIRCSock const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  result = (bool)((CIRCSock const *)arg1)->HasNamesx();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_HasUHNames(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCSock_HasUHNames",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_HasUHNames" "', argument " "1"" of type '" "CIRCSock const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  result = (bool)((CIRCSock const *)arg1)->HasUHNames();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_GetUserModes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  set< unsigned char > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCSock_GetUserModes",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_GetUserModes" "', argument " "1"" of type '" "CIRCSock const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  result = (set< unsigned char > *) &((CIRCSock const *)arg1)->GetUserModes();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_setT_unsigned_char_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_IsAuthed(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCSock_IsAuthed",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_IsAuthed" "', argument " "1"" of type '" "CIRCSock const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  result = (bool)((CIRCSock const *)arg1)->IsAuthed();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_IsCapAccepted(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCSock_IsCapAccepted",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_IsCapAccepted" "', argument " "1"" of type '" "CIRCSock *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCSock_IsCapAccepted" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_IsCapAccepted" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->IsCapAccepted((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_GetISupport(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  MCString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCSock_GetISupport",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_GetISupport" "', argument " "1"" of type '" "CIRCSock const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  result = (MCString *) &((CIRCSock const *)arg1)->GetISupport();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_MCString, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_ForwardRaw353__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIRCSock_ForwardRaw353",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_ForwardRaw353" "', argument " "1"" of type '" "CIRCSock const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCSock_ForwardRaw353" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_ForwardRaw353" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ((CIRCSock const *)arg1)->ForwardRaw353((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_ForwardRaw353__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIRCSock *arg1 = (CIRCSock *) 0 ;
  CString *arg2 = 0 ;
  CClient *arg3 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CIRCSock_ForwardRaw353",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_ForwardRaw353" "', argument " "1"" of type '" "CIRCSock const *""'"); 
  }
  arg1 = reinterpret_cast< CIRCSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCSock_ForwardRaw353" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_ForwardRaw353" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCSock_ForwardRaw353" "', argument " "3"" of type '" "CClient *""'"); 
  }
  arg3 = reinterpret_cast< CClient * >(argp3);
  ((CIRCSock const *)arg1)->ForwardRaw353((CString const &)*arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIRCSock_ForwardRaw353(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCSock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CIRCSock_ForwardRaw353__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CIRCSock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CIRCSock_ForwardRaw353__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CIRCSock_ForwardRaw353'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CIRCSock::ForwardRaw353(CString const &) const\n"
    "    CIRCSock::ForwardRaw353(CString const &,CClient *) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CIRCSock_IsFloodProtected(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  double arg1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIRCSock_IsFloodProtected",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CIRCSock_IsFloodProtected" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  result = (bool)CIRCSock::IsFloodProtected(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CIRCSock_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CIRCSock, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CListener(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short arg1 ;
  CString *arg2 = 0 ;
  bool arg3 ;
  EAddrType arg4 ;
  CListener::EAcceptType arg5 ;
  unsigned short val1 ;
  int ecode1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  CListener *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_CListener",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_short(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CListener" "', argument " "1"" of type '" "unsigned short""'");
  } 
  arg1 = static_cast< unsigned short >(val1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CListener" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CListener" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CListener" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_CListener" "', argument " "4"" of type '" "EAddrType""'");
  } 
  arg4 = static_cast< EAddrType >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_CListener" "', argument " "5"" of type '" "CListener::EAcceptType""'");
  } 
  arg5 = static_cast< CListener::EAcceptType >(val5);
  result = (CListener *)new CListener(arg1,(CString const &)*arg2,arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CListener, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CListener(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CListener *arg1 = (CListener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CListener",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CListener, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CListener" "', argument " "1"" of type '" "CListener *""'"); 
  }
  arg1 = reinterpret_cast< CListener * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CListener_IsSSL(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CListener *arg1 = (CListener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CListener_IsSSL",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CListener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CListener_IsSSL" "', argument " "1"" of type '" "CListener const *""'"); 
  }
  arg1 = reinterpret_cast< CListener * >(argp1);
  result = (bool)((CListener const *)arg1)->IsSSL();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CListener_GetAddrType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CListener *arg1 = (CListener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  EAddrType result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CListener_GetAddrType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CListener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CListener_GetAddrType" "', argument " "1"" of type '" "CListener const *""'"); 
  }
  arg1 = reinterpret_cast< CListener * >(argp1);
  result = (EAddrType)((CListener const *)arg1)->GetAddrType();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CListener_GetPort(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CListener *arg1 = (CListener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned short result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CListener_GetPort",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CListener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CListener_GetPort" "', argument " "1"" of type '" "CListener const *""'"); 
  }
  arg1 = reinterpret_cast< CListener * >(argp1);
  result = (unsigned short)((CListener const *)arg1)->GetPort();
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CListener_GetBindHost(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CListener *arg1 = (CListener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CListener_GetBindHost",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CListener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CListener_GetBindHost" "', argument " "1"" of type '" "CListener const *""'"); 
  }
  arg1 = reinterpret_cast< CListener * >(argp1);
  result = (CString *) &((CListener const *)arg1)->GetBindHost();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CListener_GetRealListener(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CListener *arg1 = (CListener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CRealListener *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CListener_GetRealListener",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CListener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CListener_GetRealListener" "', argument " "1"" of type '" "CListener const *""'"); 
  }
  arg1 = reinterpret_cast< CListener * >(argp1);
  result = (CRealListener *)((CListener const *)arg1)->GetRealListener();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CRealListener, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CListener_GetAcceptType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CListener *arg1 = (CListener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CListener::EAcceptType result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CListener_GetAcceptType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CListener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CListener_GetAcceptType" "', argument " "1"" of type '" "CListener const *""'"); 
  }
  arg1 = reinterpret_cast< CListener * >(argp1);
  result = (CListener::EAcceptType)((CListener const *)arg1)->GetAcceptType();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CListener_SetAcceptType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CListener *arg1 = (CListener *) 0 ;
  CListener::EAcceptType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CListener_SetAcceptType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CListener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CListener_SetAcceptType" "', argument " "1"" of type '" "CListener *""'"); 
  }
  arg1 = reinterpret_cast< CListener * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CListener_SetAcceptType" "', argument " "2"" of type '" "CListener::EAcceptType""'");
  } 
  arg2 = static_cast< CListener::EAcceptType >(val2);
  (arg1)->SetAcceptType(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CListener_Listen(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CListener *arg1 = (CListener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CListener_Listen",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CListener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CListener_Listen" "', argument " "1"" of type '" "CListener *""'"); 
  }
  arg1 = reinterpret_cast< CListener * >(argp1);
  result = (bool)(arg1)->Listen();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CListener_ResetRealListener(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CListener *arg1 = (CListener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CListener_ResetRealListener",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CListener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CListener_ResetRealListener" "', argument " "1"" of type '" "CListener *""'"); 
  }
  arg1 = reinterpret_cast< CListener * >(argp1);
  (arg1)->ResetRealListener();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CListener_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CListener, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CRealListener(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CListener *arg1 = (CListener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CRealListener *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_CRealListener",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CListener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CRealListener" "', argument " "1"" of type '" "CListener *""'"); 
  }
  arg1 = reinterpret_cast< CListener * >(argp1);
  result = (CRealListener *)new CRealListener(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CRealListener, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CRealListener(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CRealListener *arg1 = (CRealListener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CRealListener",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CRealListener, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CRealListener" "', argument " "1"" of type '" "CRealListener *""'"); 
  }
  arg1 = reinterpret_cast< CRealListener * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CRealListener_ConnectionFrom(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CRealListener *arg1 = (CRealListener *) 0 ;
  CString *arg2 = 0 ;
  unsigned short arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned short val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CRealListener_ConnectionFrom",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CRealListener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CRealListener_ConnectionFrom" "', argument " "1"" of type '" "CRealListener *""'"); 
  }
  arg1 = reinterpret_cast< CRealListener * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CRealListener_ConnectionFrom" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CRealListener_ConnectionFrom" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_short(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CRealListener_ConnectionFrom" "', argument " "3"" of type '" "unsigned short""'");
  } 
  arg3 = static_cast< unsigned short >(val3);
  result = (bool)(arg1)->ConnectionFrom((CString const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CRealListener_GetSockObj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CRealListener *arg1 = (CRealListener *) 0 ;
  CString *arg2 = 0 ;
  unsigned short arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned short val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Csock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CRealListener_GetSockObj",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CRealListener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CRealListener_GetSockObj" "', argument " "1"" of type '" "CRealListener *""'"); 
  }
  arg1 = reinterpret_cast< CRealListener * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CRealListener_GetSockObj" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CRealListener_GetSockObj" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_short(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CRealListener_GetSockObj" "', argument " "3"" of type '" "unsigned short""'");
  } 
  arg3 = static_cast< unsigned short >(val3);
  result = (Csock *)(arg1)->GetSockObj((CString const &)*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CRealListener_SockError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CRealListener *arg1 = (CRealListener *) 0 ;
  int arg2 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CRealListener_SockError",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CRealListener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CRealListener_SockError" "', argument " "1"" of type '" "CRealListener *""'"); 
  }
  arg1 = reinterpret_cast< CRealListener * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CRealListener_SockError" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CRealListener_SockError" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CRealListener_SockError" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->SockError(arg2,(CString const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *CRealListener_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CRealListener, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CIncomingConnection(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  unsigned short arg2 ;
  CListener::EAcceptType arg3 ;
  int res1 = SWIG_OLDOBJ ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CIncomingConnection *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_CIncomingConnection",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CIncomingConnection" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CIncomingConnection" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CIncomingConnection" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CIncomingConnection" "', argument " "3"" of type '" "CListener::EAcceptType""'");
  } 
  arg3 = static_cast< CListener::EAcceptType >(val3);
  result = (CIncomingConnection *)new CIncomingConnection((CString const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CIncomingConnection, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CIncomingConnection(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIncomingConnection *arg1 = (CIncomingConnection *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CIncomingConnection",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIncomingConnection, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CIncomingConnection" "', argument " "1"" of type '" "CIncomingConnection *""'"); 
  }
  arg1 = reinterpret_cast< CIncomingConnection * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIncomingConnection_ReadLine(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIncomingConnection *arg1 = (CIncomingConnection *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CIncomingConnection_ReadLine",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIncomingConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIncomingConnection_ReadLine" "', argument " "1"" of type '" "CIncomingConnection *""'"); 
  }
  arg1 = reinterpret_cast< CIncomingConnection * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIncomingConnection_ReadLine" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIncomingConnection_ReadLine" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->ReadLine((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CIncomingConnection_ReachedMaxBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CIncomingConnection *arg1 = (CIncomingConnection *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CIncomingConnection_ReachedMaxBuffer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CIncomingConnection, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIncomingConnection_ReachedMaxBuffer" "', argument " "1"" of type '" "CIncomingConnection *""'"); 
  }
  arg1 = reinterpret_cast< CIncomingConnection * >(argp1);
  (arg1)->ReachedMaxBuffer();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CIncomingConnection_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CIncomingConnection, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_CHTTPSock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CHTTPSock",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CHTTPSock" "', argument " "1"" of type '" "CHTTPSock *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_ReadData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CHTTPSock_ReadData",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_ReadData" "', argument " "1"" of type '" "CHTTPSock *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_ReadData" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CHTTPSock_ReadData" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  (arg1)->ReadData((char const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_ReadLine(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CHTTPSock_ReadLine",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_ReadLine" "', argument " "1"" of type '" "CHTTPSock *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_ReadLine" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_ReadLine" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->ReadLine((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_Connected(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CHTTPSock_Connected",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_Connected" "', argument " "1"" of type '" "CHTTPSock *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  (arg1)->Connected();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_GetSockObj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  CString *arg2 = 0 ;
  unsigned short arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned short val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Csock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CHTTPSock_GetSockObj",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetSockObj" "', argument " "1"" of type '" "CHTTPSock *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_GetSockObj" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetSockObj" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_short(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CHTTPSock_GetSockObj" "', argument " "3"" of type '" "unsigned short""'");
  } 
  arg3 = static_cast< unsigned short >(val3);
  result = (Csock *)(arg1)->GetSockObj((CString const &)*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_ForceLogin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CHTTPSock_ForceLogin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_ForceLogin" "', argument " "1"" of type '" "CHTTPSock *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  result = (bool)(arg1)->ForceLogin();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_OnLogin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CHTTPSock_OnLogin",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_OnLogin" "', argument " "1"" of type '" "CHTTPSock *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_OnLogin" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_OnLogin" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CHTTPSock_OnLogin" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_OnLogin" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = (bool)(arg1)->OnLogin((CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_OnPageRequest(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CHTTPSock_OnPageRequest",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_OnPageRequest" "', argument " "1"" of type '" "CHTTPSock *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_OnPageRequest" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_OnPageRequest" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->OnPageRequest((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_PrintFile__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  CString *arg2 = 0 ;
  CString arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CHTTPSock_PrintFile",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_PrintFile" "', argument " "1"" of type '" "CHTTPSock *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_PrintFile" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_PrintFile" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    int res = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "CHTTPSock_PrintFile" "', argument " "3"" of type '" "CString""'");
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) free((char*)ptr);
  }
  result = (bool)(arg1)->PrintFile((CString const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_PrintFile__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CHTTPSock_PrintFile",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_PrintFile" "', argument " "1"" of type '" "CHTTPSock *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_PrintFile" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_PrintFile" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->PrintFile((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_PrintFile(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CHTTPSock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CHTTPSock_PrintFile__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CHTTPSock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CHTTPSock_PrintFile__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CHTTPSock_PrintFile'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CHTTPSock::PrintFile(CString const &,CString)\n"
    "    CHTTPSock::PrintFile(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_CheckPost(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CHTTPSock_CheckPost",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_CheckPost" "', argument " "1"" of type '" "CHTTPSock *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  (arg1)->CheckPost();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_SentHeader(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CHTTPSock_SentHeader",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_SentHeader" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  result = (bool)((CHTTPSock const *)arg1)->SentHeader();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_PrintHeader__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  off_t arg2 ;
  CString *arg3 = 0 ;
  unsigned int arg4 ;
  CString *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  int res5 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CHTTPSock_PrintHeader",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_PrintHeader" "', argument " "1"" of type '" "CHTTPSock *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  ecode2 = SWIG_AsVal_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CHTTPSock_PrintHeader" "', argument " "2"" of type '" "off_t""'");
  } 
  arg2 = static_cast< off_t >(val2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CHTTPSock_PrintHeader" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_PrintHeader" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CHTTPSock_PrintHeader" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  {
    CString *ptr = (CString *)0;
    res5 = SWIG_AsPtr_std_string(obj4, &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CHTTPSock_PrintHeader" "', argument " "5"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_PrintHeader" "', argument " "5"" of type '" "CString const &""'"); 
    }
    arg5 = ptr;
  }
  result = (bool)(arg1)->PrintHeader(arg2,(CString const &)*arg3,arg4,(CString const &)*arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res5)) free((char*)arg5);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res5)) free((char*)arg5);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_PrintHeader__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  off_t arg2 ;
  CString *arg3 = 0 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CHTTPSock_PrintHeader",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_PrintHeader" "', argument " "1"" of type '" "CHTTPSock *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  ecode2 = SWIG_AsVal_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CHTTPSock_PrintHeader" "', argument " "2"" of type '" "off_t""'");
  } 
  arg2 = static_cast< off_t >(val2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CHTTPSock_PrintHeader" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_PrintHeader" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CHTTPSock_PrintHeader" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (bool)(arg1)->PrintHeader(arg2,(CString const &)*arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_PrintHeader__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  off_t arg2 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CHTTPSock_PrintHeader",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_PrintHeader" "', argument " "1"" of type '" "CHTTPSock *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  ecode2 = SWIG_AsVal_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CHTTPSock_PrintHeader" "', argument " "2"" of type '" "off_t""'");
  } 
  arg2 = static_cast< off_t >(val2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CHTTPSock_PrintHeader" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_PrintHeader" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = (bool)(arg1)->PrintHeader(arg2,(CString const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_PrintHeader__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  off_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CHTTPSock_PrintHeader",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_PrintHeader" "', argument " "1"" of type '" "CHTTPSock *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  ecode2 = SWIG_AsVal_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CHTTPSock_PrintHeader" "', argument " "2"" of type '" "off_t""'");
  } 
  arg2 = static_cast< off_t >(val2);
  result = (bool)(arg1)->PrintHeader(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_PrintHeader(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CHTTPSock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CHTTPSock_PrintHeader__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CHTTPSock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CHTTPSock_PrintHeader__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CHTTPSock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_CHTTPSock_PrintHeader__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CHTTPSock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            int res = SWIG_AsPtr_std_string(argv[4], (CString**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_CHTTPSock_PrintHeader__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CHTTPSock_PrintHeader'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CHTTPSock::PrintHeader(off_t,CString const &,unsigned int,CString const &)\n"
    "    CHTTPSock::PrintHeader(off_t,CString const &,unsigned int)\n"
    "    CHTTPSock::PrintHeader(off_t,CString const &)\n"
    "    CHTTPSock::PrintHeader(off_t)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_AddHeader(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CHTTPSock_AddHeader",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_AddHeader" "', argument " "1"" of type '" "CHTTPSock *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_AddHeader" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_AddHeader" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CHTTPSock_AddHeader" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_AddHeader" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->AddHeader((CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_SetContentType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CHTTPSock_SetContentType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_SetContentType" "', argument " "1"" of type '" "CHTTPSock *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_SetContentType" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_SetContentType" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetContentType((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_PrintNotFound(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CHTTPSock_PrintNotFound",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_PrintNotFound" "', argument " "1"" of type '" "CHTTPSock *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  result = (bool)(arg1)->PrintNotFound();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_Redirect(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CHTTPSock_Redirect",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_Redirect" "', argument " "1"" of type '" "CHTTPSock *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_Redirect" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_Redirect" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->Redirect((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_PrintErrorPage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  unsigned int arg2 ;
  CString *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CHTTPSock_PrintErrorPage",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_PrintErrorPage" "', argument " "1"" of type '" "CHTTPSock *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CHTTPSock_PrintErrorPage" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CHTTPSock_PrintErrorPage" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_PrintErrorPage" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CHTTPSock_PrintErrorPage" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_PrintErrorPage" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  result = (bool)(arg1)->PrintErrorPage(arg2,(CString const &)*arg3,(CString const &)*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_ParseParams(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  map< CString,VCString > *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CHTTPSock_ParseParams",&obj0,&obj1)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_ParseParams" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_ParseParams" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mapT_CString_VCString_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_VCString_t_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_ParseParams" "', argument " "2"" of type '" "map< CString,VCString > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_ParseParams" "', argument " "2"" of type '" "map< CString,VCString > &""'"); 
  }
  arg2 = reinterpret_cast< map< CString,VCString > * >(argp2);
  CHTTPSock::ParseParams((CString const &)*arg1,*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_ParseURI(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CHTTPSock_ParseURI",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_ParseURI" "', argument " "1"" of type '" "CHTTPSock *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  (arg1)->ParseURI();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_GetPage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CHTTPSock_GetPage",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetPage" "', argument " "1"" of type '" "CHTTPSock *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  (arg1)->GetPage();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_GetDate__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  time_t arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CHTTPSock_GetDate",&obj0)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_time_t,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetDate" "', argument " "1"" of type '" "time_t""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetDate" "', argument " "1"" of type '" "time_t""'");
    } else {
      time_t * temp = reinterpret_cast< time_t * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  result = CHTTPSock::GetDate(arg1);
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_GetDate__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)":CHTTPSock_GetDate")) SWIG_fail;
  result = CHTTPSock::GetDate();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_GetDate(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_CHTTPSock_GetDate__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_time_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CHTTPSock_GetDate__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CHTTPSock_GetDate'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CHTTPSock::GetDate(time_t)\n"
    "    CHTTPSock::GetDate()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_GetRequestCookie(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CHTTPSock_GetRequestCookie",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetRequestCookie" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_GetRequestCookie" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetRequestCookie" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = ((CHTTPSock const *)arg1)->GetRequestCookie((CString const &)*arg2);
  resultobj = SWIG_From_std_string((CString)(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_SendCookie(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CHTTPSock_SendCookie",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_SendCookie" "', argument " "1"" of type '" "CHTTPSock *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_SendCookie" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_SendCookie" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CHTTPSock_SendCookie" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_SendCookie" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = (bool)(arg1)->SendCookie((CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_SetDocRoot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CHTTPSock_SetDocRoot",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_SetDocRoot" "', argument " "1"" of type '" "CHTTPSock *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_SetDocRoot" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_SetDocRoot" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetDocRoot((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_SetLoggedIn(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CHTTPSock_SetLoggedIn",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_SetLoggedIn" "', argument " "1"" of type '" "CHTTPSock *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CHTTPSock_SetLoggedIn" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetLoggedIn(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_GetPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CHTTPSock_GetPath",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetPath" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  result = ((CHTTPSock const *)arg1)->GetPath();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_IsLoggedIn(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CHTTPSock_IsLoggedIn",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_IsLoggedIn" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  result = (bool)((CHTTPSock const *)arg1)->IsLoggedIn();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_GetDocRoot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CHTTPSock_GetDocRoot",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetDocRoot" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  result = (CString *) &((CHTTPSock const *)arg1)->GetDocRoot();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_GetUser(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CHTTPSock_GetUser",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetUser" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  result = (CString *) &((CHTTPSock const *)arg1)->GetUser();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_GetPass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CHTTPSock_GetPass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetPass" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  result = (CString *) &((CHTTPSock const *)arg1)->GetPass();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_GetParamString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CHTTPSock_GetParamString",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetParamString" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  result = (CString *) &((CHTTPSock const *)arg1)->GetParamString();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_GetContentType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CHTTPSock_GetContentType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetContentType" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  result = (CString *) &((CHTTPSock const *)arg1)->GetContentType();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_IsPost(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CHTTPSock_IsPost",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_IsPost" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  result = (bool)((CHTTPSock const *)arg1)->IsPost();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_GetParam__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  CString *arg2 = 0 ;
  bool arg3 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CHTTPSock_GetParam",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetParam" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_GetParam" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetParam" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CHTTPSock_GetParam" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CHTTPSock_GetParam" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetParam" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  result = ((CHTTPSock const *)arg1)->GetParam((CString const &)*arg2,arg3,(CString const &)*arg4);
  resultobj = SWIG_From_std_string((CString)(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_GetParam__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  CString *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CHTTPSock_GetParam",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetParam" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_GetParam" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetParam" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CHTTPSock_GetParam" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = ((CHTTPSock const *)arg1)->GetParam((CString const &)*arg2,arg3);
  resultobj = SWIG_From_std_string((CString)(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_GetParam__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CHTTPSock_GetParam",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetParam" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_GetParam" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetParam" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = ((CHTTPSock const *)arg1)->GetParam((CString const &)*arg2);
  resultobj = SWIG_From_std_string((CString)(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_GetParam(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CHTTPSock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CHTTPSock_GetParam__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CHTTPSock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CHTTPSock_GetParam__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CHTTPSock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (CString**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CHTTPSock_GetParam__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CHTTPSock_GetParam'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CHTTPSock::GetParam(CString const &,bool,CString const &) const\n"
    "    CHTTPSock::GetParam(CString const &,bool) const\n"
    "    CHTTPSock::GetParam(CString const &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_GetRawParam__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  CString *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CHTTPSock_GetRawParam",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetRawParam" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_GetRawParam" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetRawParam" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CHTTPSock_GetRawParam" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = ((CHTTPSock const *)arg1)->GetRawParam((CString const &)*arg2,arg3);
  resultobj = SWIG_From_std_string((CString)(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_GetRawParam__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CHTTPSock_GetRawParam",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetRawParam" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_GetRawParam" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetRawParam" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = ((CHTTPSock const *)arg1)->GetRawParam((CString const &)*arg2);
  resultobj = SWIG_From_std_string((CString)(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_GetRawParam(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CHTTPSock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CHTTPSock_GetRawParam__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CHTTPSock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CHTTPSock_GetRawParam__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CHTTPSock_GetRawParam'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CHTTPSock::GetRawParam(CString const &,bool) const\n"
    "    CHTTPSock::GetRawParam(CString const &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_HasParam__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  CString *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CHTTPSock_HasParam",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_HasParam" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_HasParam" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_HasParam" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CHTTPSock_HasParam" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (bool)((CHTTPSock const *)arg1)->HasParam((CString const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_HasParam__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CHTTPSock_HasParam",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_HasParam" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_HasParam" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_HasParam" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)((CHTTPSock const *)arg1)->HasParam((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_HasParam(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CHTTPSock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CHTTPSock_HasParam__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CHTTPSock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CHTTPSock_HasParam__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CHTTPSock_HasParam'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CHTTPSock::HasParam(CString const &,bool) const\n"
    "    CHTTPSock::HasParam(CString const &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_GetParams__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  map< CString,VCString > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CHTTPSock_GetParams",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetParams" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CHTTPSock_GetParams" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (map< CString,VCString > *) &((CHTTPSock const *)arg1)->GetParams(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mapT_CString_VCString_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_VCString_t_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_GetParams__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  map< CString,VCString > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CHTTPSock_GetParams",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetParams" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  result = (map< CString,VCString > *) &((CHTTPSock const *)arg1)->GetParams();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mapT_CString_VCString_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_VCString_t_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_GetParams(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CHTTPSock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CHTTPSock_GetParams__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CHTTPSock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CHTTPSock_GetParams__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CHTTPSock_GetParams'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CHTTPSock::GetParams(bool) const\n"
    "    CHTTPSock::GetParams() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_GetParamValues__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  CString *arg2 = 0 ;
  VCString *arg3 = 0 ;
  bool arg4 ;
  CString *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  int res5 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CHTTPSock_GetParamValues",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetParamValues" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_GetParamValues" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetParamValues" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_VCString,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CHTTPSock_GetParamValues" "', argument " "3"" of type '" "VCString &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetParamValues" "', argument " "3"" of type '" "VCString &""'"); 
  }
  arg3 = reinterpret_cast< VCString * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CHTTPSock_GetParamValues" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    CString *ptr = (CString *)0;
    res5 = SWIG_AsPtr_std_string(obj4, &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CHTTPSock_GetParamValues" "', argument " "5"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetParamValues" "', argument " "5"" of type '" "CString const &""'"); 
    }
    arg5 = ptr;
  }
  result = (unsigned int)((CHTTPSock const *)arg1)->GetParamValues((CString const &)*arg2,*arg3,arg4,(CString const &)*arg5);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res5)) free((char*)arg5);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res5)) free((char*)arg5);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_GetParamValues__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  CString *arg2 = 0 ;
  VCString *arg3 = 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CHTTPSock_GetParamValues",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetParamValues" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_GetParamValues" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetParamValues" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_VCString,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CHTTPSock_GetParamValues" "', argument " "3"" of type '" "VCString &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetParamValues" "', argument " "3"" of type '" "VCString &""'"); 
  }
  arg3 = reinterpret_cast< VCString * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CHTTPSock_GetParamValues" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (unsigned int)((CHTTPSock const *)arg1)->GetParamValues((CString const &)*arg2,*arg3,arg4);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_GetParamValues__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  CString *arg2 = 0 ;
  VCString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CHTTPSock_GetParamValues",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetParamValues" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_GetParamValues" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetParamValues" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_VCString,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CHTTPSock_GetParamValues" "', argument " "3"" of type '" "VCString &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetParamValues" "', argument " "3"" of type '" "VCString &""'"); 
  }
  arg3 = reinterpret_cast< VCString * >(argp3);
  result = (unsigned int)((CHTTPSock const *)arg1)->GetParamValues((CString const &)*arg2,*arg3);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_GetParamValues__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  CString *arg2 = 0 ;
  set< CString > *arg3 = 0 ;
  bool arg4 ;
  CString *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  int res5 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CHTTPSock_GetParamValues",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetParamValues" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_GetParamValues" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetParamValues" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_setT_CString_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CHTTPSock_GetParamValues" "', argument " "3"" of type '" "set< CString > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetParamValues" "', argument " "3"" of type '" "set< CString > &""'"); 
  }
  arg3 = reinterpret_cast< set< CString > * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CHTTPSock_GetParamValues" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    CString *ptr = (CString *)0;
    res5 = SWIG_AsPtr_std_string(obj4, &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CHTTPSock_GetParamValues" "', argument " "5"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetParamValues" "', argument " "5"" of type '" "CString const &""'"); 
    }
    arg5 = ptr;
  }
  result = (unsigned int)((CHTTPSock const *)arg1)->GetParamValues((CString const &)*arg2,*arg3,arg4,(CString const &)*arg5);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res5)) free((char*)arg5);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res5)) free((char*)arg5);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_GetParamValues__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  CString *arg2 = 0 ;
  set< CString > *arg3 = 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CHTTPSock_GetParamValues",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetParamValues" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_GetParamValues" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetParamValues" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_setT_CString_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CHTTPSock_GetParamValues" "', argument " "3"" of type '" "set< CString > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetParamValues" "', argument " "3"" of type '" "set< CString > &""'"); 
  }
  arg3 = reinterpret_cast< set< CString > * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CHTTPSock_GetParamValues" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (unsigned int)((CHTTPSock const *)arg1)->GetParamValues((CString const &)*arg2,*arg3,arg4);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_GetParamValues__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CHTTPSock *arg1 = (CHTTPSock *) 0 ;
  CString *arg2 = 0 ;
  set< CString > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CHTTPSock_GetParamValues",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetParamValues" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
  }
  arg1 = reinterpret_cast< CHTTPSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_GetParamValues" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetParamValues" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_setT_CString_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CHTTPSock_GetParamValues" "', argument " "3"" of type '" "set< CString > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetParamValues" "', argument " "3"" of type '" "set< CString > &""'"); 
  }
  arg3 = reinterpret_cast< set< CString > * >(argp3);
  result = (unsigned int)((CHTTPSock const *)arg1)->GetParamValues((CString const &)*arg2,*arg3);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CHTTPSock_GetParamValues(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CHTTPSock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_VCString, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CHTTPSock_GetParamValues__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CHTTPSock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_setT_CString_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CHTTPSock_GetParamValues__SWIG_5(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CHTTPSock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_setT_CString_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_CHTTPSock_GetParamValues__SWIG_4(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CHTTPSock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_VCString, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_CHTTPSock_GetParamValues__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CHTTPSock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_VCString, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            int res = SWIG_AsPtr_std_string(argv[4], (CString**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_CHTTPSock_GetParamValues__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CHTTPSock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_setT_CString_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            int res = SWIG_AsPtr_std_string(argv[4], (CString**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_CHTTPSock_GetParamValues__SWIG_3(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CHTTPSock_GetParamValues'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CHTTPSock::GetParamValues(CString const &,VCString &,bool,CString const &) const\n"
    "    CHTTPSock::GetParamValues(CString const &,VCString &,bool) const\n"
    "    CHTTPSock::GetParamValues(CString const &,VCString &) const\n"
    "    CHTTPSock::GetParamValues(CString const &,set< CString > &,bool,CString const &) const\n"
    "    CHTTPSock::GetParamValues(CString const &,set< CString > &,bool) const\n"
    "    CHTTPSock::GetParamValues(CString const &,set< CString > &) const\n");
  return 0;
}


SWIGINTERN PyObject *CHTTPSock_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CHTTPSock, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CTemplateTagHandler(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplateTagHandler *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CTemplateTagHandler")) SWIG_fail;
  result = (CTemplateTagHandler *)new CTemplateTagHandler();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CTemplateTagHandler, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CTemplateTagHandler(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplateTagHandler *arg1 = (CTemplateTagHandler *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CTemplateTagHandler",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplateTagHandler, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CTemplateTagHandler" "', argument " "1"" of type '" "CTemplateTagHandler *""'"); 
  }
  arg1 = reinterpret_cast< CTemplateTagHandler * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplateTagHandler_HandleVar(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplateTagHandler *arg1 = (CTemplateTagHandler *) 0 ;
  CTemplate *arg2 = 0 ;
  CString *arg3 = 0 ;
  CString *arg4 = 0 ;
  CString *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CTemplateTagHandler_HandleVar",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplateTagHandler, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateTagHandler_HandleVar" "', argument " "1"" of type '" "CTemplateTagHandler *""'"); 
  }
  arg1 = reinterpret_cast< CTemplateTagHandler * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CTemplate,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplateTagHandler_HandleVar" "', argument " "2"" of type '" "CTemplate &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplateTagHandler_HandleVar" "', argument " "2"" of type '" "CTemplate &""'"); 
  }
  arg2 = reinterpret_cast< CTemplate * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CTemplateTagHandler_HandleVar" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplateTagHandler_HandleVar" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CTemplateTagHandler_HandleVar" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplateTagHandler_HandleVar" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj4, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg5 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 5 sOutput");
    }
  }
  result = (bool)(arg1)->HandleVar(*arg2,(CString const &)*arg3,(CString const &)*arg4,*arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplateTagHandler_HandleTag(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplateTagHandler *arg1 = (CTemplateTagHandler *) 0 ;
  CTemplate *arg2 = 0 ;
  CString *arg3 = 0 ;
  CString *arg4 = 0 ;
  CString *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CTemplateTagHandler_HandleTag",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplateTagHandler, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateTagHandler_HandleTag" "', argument " "1"" of type '" "CTemplateTagHandler *""'"); 
  }
  arg1 = reinterpret_cast< CTemplateTagHandler * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CTemplate,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplateTagHandler_HandleTag" "', argument " "2"" of type '" "CTemplate &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplateTagHandler_HandleTag" "', argument " "2"" of type '" "CTemplate &""'"); 
  }
  arg2 = reinterpret_cast< CTemplate * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CTemplateTagHandler_HandleTag" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplateTagHandler_HandleTag" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CTemplateTagHandler_HandleTag" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplateTagHandler_HandleTag" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj4, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg5 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 5 sOutput");
    }
  }
  result = (bool)(arg1)->HandleTag(*arg2,(CString const &)*arg3,(CString const &)*arg4,*arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplateTagHandler_HandleIf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplateTagHandler *arg1 = (CTemplateTagHandler *) 0 ;
  CTemplate *arg2 = 0 ;
  CString *arg3 = 0 ;
  CString *arg4 = 0 ;
  CString *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CTemplateTagHandler_HandleIf",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplateTagHandler, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateTagHandler_HandleIf" "', argument " "1"" of type '" "CTemplateTagHandler *""'"); 
  }
  arg1 = reinterpret_cast< CTemplateTagHandler * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CTemplate,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplateTagHandler_HandleIf" "', argument " "2"" of type '" "CTemplate &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplateTagHandler_HandleIf" "', argument " "2"" of type '" "CTemplate &""'"); 
  }
  arg2 = reinterpret_cast< CTemplate * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CTemplateTagHandler_HandleIf" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplateTagHandler_HandleIf" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CTemplateTagHandler_HandleIf" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplateTagHandler_HandleIf" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj4, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg5 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 5 sOutput");
    }
  }
  result = (bool)(arg1)->HandleIf(*arg2,(CString const &)*arg3,(CString const &)*arg4,*arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplateTagHandler_HandleValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplateTagHandler *arg1 = (CTemplateTagHandler *) 0 ;
  CTemplate *arg2 = 0 ;
  CString *arg3 = 0 ;
  MCString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CTemplateTagHandler_HandleValue",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplateTagHandler, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateTagHandler_HandleValue" "', argument " "1"" of type '" "CTemplateTagHandler *""'"); 
  }
  arg1 = reinterpret_cast< CTemplateTagHandler * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CTemplate,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplateTagHandler_HandleValue" "', argument " "2"" of type '" "CTemplate &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplateTagHandler_HandleValue" "', argument " "2"" of type '" "CTemplate &""'"); 
  }
  arg2 = reinterpret_cast< CTemplate * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sValue");
    }
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_MCString,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CTemplateTagHandler_HandleValue" "', argument " "4"" of type '" "MCString const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplateTagHandler_HandleValue" "', argument " "4"" of type '" "MCString const &""'"); 
  }
  arg4 = reinterpret_cast< MCString * >(argp4);
  result = (bool)(arg1)->HandleValue(*arg2,*arg3,(MCString const &)*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CTemplateTagHandler_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CTemplateTagHandler, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CTemplateOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplateOptions *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CTemplateOptions")) SWIG_fail;
  result = (CTemplateOptions *)new CTemplateOptions();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CTemplateOptions, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CTemplateOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplateOptions *arg1 = (CTemplateOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CTemplateOptions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplateOptions, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CTemplateOptions" "', argument " "1"" of type '" "CTemplateOptions *""'"); 
  }
  arg1 = reinterpret_cast< CTemplateOptions * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplateOptions_Parse(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplateOptions *arg1 = (CTemplateOptions *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CTemplateOptions_Parse",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplateOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateOptions_Parse" "', argument " "1"" of type '" "CTemplateOptions *""'"); 
  }
  arg1 = reinterpret_cast< CTemplateOptions * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplateOptions_Parse" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplateOptions_Parse" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->Parse((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplateOptions_GetEscapeFrom(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplateOptions *arg1 = (CTemplateOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString::EEscape result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CTemplateOptions_GetEscapeFrom",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplateOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateOptions_GetEscapeFrom" "', argument " "1"" of type '" "CTemplateOptions const *""'"); 
  }
  arg1 = reinterpret_cast< CTemplateOptions * >(argp1);
  result = ((CTemplateOptions const *)arg1)->GetEscapeFrom();
  resultobj = SWIG_NewPointerObj((new CString::EEscape(static_cast< const CString::EEscape& >(result))), SWIGTYPE_p_CString__EEscape, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplateOptions_GetEscapeTo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplateOptions *arg1 = (CTemplateOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString::EEscape result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CTemplateOptions_GetEscapeTo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplateOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateOptions_GetEscapeTo" "', argument " "1"" of type '" "CTemplateOptions const *""'"); 
  }
  arg1 = reinterpret_cast< CTemplateOptions * >(argp1);
  result = ((CTemplateOptions const *)arg1)->GetEscapeTo();
  resultobj = SWIG_NewPointerObj((new CString::EEscape(static_cast< const CString::EEscape& >(result))), SWIGTYPE_p_CString__EEscape, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CTemplateOptions_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CTemplateOptions, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CTemplateLoopContext(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long arg1 ;
  CString *arg2 = 0 ;
  bool arg3 ;
  vector< CTemplate * > *arg4 = (vector< CTemplate * > *) 0 ;
  unsigned long val1 ;
  int ecode1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CTemplateLoopContext *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_CTemplateLoopContext",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CTemplateLoopContext" "', argument " "1"" of type '" "unsigned long""'");
  } 
  arg1 = static_cast< unsigned long >(val1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CTemplateLoopContext" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CTemplateLoopContext" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CTemplateLoopContext" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_vectorT_CTemplate_p_std__allocatorT_CTemplate_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CTemplateLoopContext" "', argument " "4"" of type '" "vector< CTemplate * > *""'"); 
  }
  arg4 = reinterpret_cast< vector< CTemplate * > * >(argp4);
  result = (CTemplateLoopContext *)new CTemplateLoopContext(arg1,(CString const &)*arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CTemplateLoopContext, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CTemplateLoopContext(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CTemplateLoopContext",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplateLoopContext, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CTemplateLoopContext" "', argument " "1"" of type '" "CTemplateLoopContext *""'"); 
  }
  arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplateLoopContext_SetHasData__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CTemplateLoopContext_SetHasData",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateLoopContext_SetHasData" "', argument " "1"" of type '" "CTemplateLoopContext *""'"); 
  }
  arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CTemplateLoopContext_SetHasData" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetHasData(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplateLoopContext_SetHasData__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CTemplateLoopContext_SetHasData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateLoopContext_SetHasData" "', argument " "1"" of type '" "CTemplateLoopContext *""'"); 
  }
  arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
  (arg1)->SetHasData();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplateLoopContext_SetHasData(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CTemplateLoopContext, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CTemplateLoopContext_SetHasData__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CTemplateLoopContext, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CTemplateLoopContext_SetHasData__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CTemplateLoopContext_SetHasData'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CTemplateLoopContext::SetHasData(bool)\n"
    "    CTemplateLoopContext::SetHasData()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CTemplateLoopContext_SetName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CTemplateLoopContext_SetName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateLoopContext_SetName" "', argument " "1"" of type '" "CTemplateLoopContext *""'"); 
  }
  arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplateLoopContext_SetName" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplateLoopContext_SetName" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetName((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplateLoopContext_SetRowIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CTemplateLoopContext_SetRowIndex",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateLoopContext_SetRowIndex" "', argument " "1"" of type '" "CTemplateLoopContext *""'"); 
  }
  arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CTemplateLoopContext_SetRowIndex" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  (arg1)->SetRowIndex(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplateLoopContext_IncRowIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CTemplateLoopContext_IncRowIndex",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateLoopContext_IncRowIndex" "', argument " "1"" of type '" "CTemplateLoopContext *""'"); 
  }
  arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
  result = (unsigned int)(arg1)->IncRowIndex();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplateLoopContext_DecRowIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CTemplateLoopContext_DecRowIndex",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateLoopContext_DecRowIndex" "', argument " "1"" of type '" "CTemplateLoopContext *""'"); 
  }
  arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
  result = (unsigned int)(arg1)->DecRowIndex();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplateLoopContext_SetFilePosition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CTemplateLoopContext_SetFilePosition",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateLoopContext_SetFilePosition" "', argument " "1"" of type '" "CTemplateLoopContext *""'"); 
  }
  arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CTemplateLoopContext_SetFilePosition" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  (arg1)->SetFilePosition(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplateLoopContext_HasData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CTemplateLoopContext_HasData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateLoopContext_HasData" "', argument " "1"" of type '" "CTemplateLoopContext const *""'"); 
  }
  arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
  result = (bool)((CTemplateLoopContext const *)arg1)->HasData();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplateLoopContext_GetName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CTemplateLoopContext_GetName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateLoopContext_GetName" "', argument " "1"" of type '" "CTemplateLoopContext const *""'"); 
  }
  arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
  result = (CString *) &((CTemplateLoopContext const *)arg1)->GetName();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplateLoopContext_GetFilePosition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned long result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CTemplateLoopContext_GetFilePosition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateLoopContext_GetFilePosition" "', argument " "1"" of type '" "CTemplateLoopContext const *""'"); 
  }
  arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
  result = (unsigned long)((CTemplateLoopContext const *)arg1)->GetFilePosition();
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplateLoopContext_GetRowIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CTemplateLoopContext_GetRowIndex",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateLoopContext_GetRowIndex" "', argument " "1"" of type '" "CTemplateLoopContext const *""'"); 
  }
  arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
  result = (unsigned int)((CTemplateLoopContext const *)arg1)->GetRowIndex();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplateLoopContext_GetRowCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CTemplateLoopContext_GetRowCount",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateLoopContext_GetRowCount" "', argument " "1"" of type '" "CTemplateLoopContext *""'"); 
  }
  arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
  result = (unsigned int)(arg1)->GetRowCount();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplateLoopContext_GetRows(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  vector< CTemplate * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CTemplateLoopContext_GetRows",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateLoopContext_GetRows" "', argument " "1"" of type '" "CTemplateLoopContext *""'"); 
  }
  arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
  result = (vector< CTemplate * > *)(arg1)->GetRows();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_vectorT_CTemplate_p_std__allocatorT_CTemplate_p_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplateLoopContext_GetNextRow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CTemplate *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CTemplateLoopContext_GetNextRow",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateLoopContext_GetNextRow" "', argument " "1"" of type '" "CTemplateLoopContext *""'"); 
  }
  arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
  result = (CTemplate *)(arg1)->GetNextRow();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CTemplate, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplateLoopContext_GetCurRow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CTemplate *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CTemplateLoopContext_GetCurRow",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateLoopContext_GetCurRow" "', argument " "1"" of type '" "CTemplateLoopContext *""'"); 
  }
  arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
  result = (CTemplate *)(arg1)->GetCurRow();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CTemplate, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplateLoopContext_GetRow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CTemplate *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CTemplateLoopContext_GetRow",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateLoopContext_GetRow" "', argument " "1"" of type '" "CTemplateLoopContext *""'"); 
  }
  arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CTemplateLoopContext_GetRow" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (CTemplate *)(arg1)->GetRow(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CTemplate, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplateLoopContext_GetValue__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
  CString *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CTemplateLoopContext_GetValue",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateLoopContext_GetValue" "', argument " "1"" of type '" "CTemplateLoopContext *""'"); 
  }
  arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplateLoopContext_GetValue" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplateLoopContext_GetValue" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CTemplateLoopContext_GetValue" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (arg1)->GetValue((CString const &)*arg2,arg3);
  resultobj = SWIG_From_std_string((CString)(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplateLoopContext_GetValue__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CTemplateLoopContext_GetValue",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateLoopContext_GetValue" "', argument " "1"" of type '" "CTemplateLoopContext *""'"); 
  }
  arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplateLoopContext_GetValue" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplateLoopContext_GetValue" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (arg1)->GetValue((CString const &)*arg2);
  resultobj = SWIG_From_std_string((CString)(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplateLoopContext_GetValue(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CTemplateLoopContext, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CTemplateLoopContext_GetValue__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CTemplateLoopContext, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CTemplateLoopContext_GetValue__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CTemplateLoopContext_GetValue'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CTemplateLoopContext::GetValue(CString const &,bool)\n"
    "    CTemplateLoopContext::GetValue(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *CTemplateLoopContext_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CTemplateLoopContext, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CTemplate__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplate *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CTemplate")) SWIG_fail;
  result = (CTemplate *)new CTemplate();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CTemplate, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CTemplate__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  CTemplate *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_CTemplate",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CTemplate" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CTemplate" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  result = (CTemplate *)new CTemplate((CString const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CTemplate, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CTemplate__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSmartPtr< CTemplateOptions > *arg1 = 0 ;
  CTemplate *arg2 = (CTemplate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CTemplate *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_CTemplate",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_CSmartPtrT_CTemplateOptions_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CTemplate" "', argument " "1"" of type '" "CSmartPtr< CTemplateOptions > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CTemplate" "', argument " "1"" of type '" "CSmartPtr< CTemplateOptions > const &""'"); 
  }
  arg1 = reinterpret_cast< CSmartPtr< CTemplateOptions > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CTemplate, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CTemplate" "', argument " "2"" of type '" "CTemplate *""'"); 
  }
  arg2 = reinterpret_cast< CTemplate * >(argp2);
  result = (CTemplate *)new CTemplate((CSmartPtr< CTemplateOptions > const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CTemplate, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CTemplate__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CSmartPtr< CTemplateOptions > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CTemplate *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_CTemplate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_CSmartPtrT_CTemplateOptions_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CTemplate" "', argument " "1"" of type '" "CSmartPtr< CTemplateOptions > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CTemplate" "', argument " "1"" of type '" "CSmartPtr< CTemplateOptions > const &""'"); 
  }
  arg1 = reinterpret_cast< CSmartPtr< CTemplateOptions > * >(argp1);
  result = (CTemplate *)new CTemplate((CSmartPtr< CTemplateOptions > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CTemplate, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CTemplate(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_CTemplate__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_CSmartPtrT_CTemplateOptions_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_CTemplate__SWIG_3(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_CTemplate__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_CSmartPtrT_CTemplateOptions_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CTemplate, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_CTemplate__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_CTemplate'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CTemplate::CTemplate()\n"
    "    CTemplate::CTemplate(CString const &)\n"
    "    CTemplate::CTemplate(CSmartPtr< CTemplateOptions > const &,CTemplate *)\n"
    "    CTemplate::CTemplate(CSmartPtr< CTemplateOptions > const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_CTemplate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplate *arg1 = (CTemplate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CTemplate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplate, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CTemplate" "', argument " "1"" of type '" "CTemplate *""'"); 
  }
  arg1 = reinterpret_cast< CTemplate * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplate_AddTagHandler(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplate *arg1 = (CTemplate *) 0 ;
  SwigValueWrapper< CSmartPtr< CTemplateTagHandler > > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CTemplate_AddTagHandler",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_AddTagHandler" "', argument " "1"" of type '" "CTemplate *""'"); 
  }
  arg1 = reinterpret_cast< CTemplate * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CSmartPtrT_CTemplateTagHandler_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_AddTagHandler" "', argument " "2"" of type '" "CSmartPtr< CTemplateTagHandler >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_AddTagHandler" "', argument " "2"" of type '" "CSmartPtr< CTemplateTagHandler >""'");
    } else {
      CSmartPtr< CTemplateTagHandler > * temp = reinterpret_cast< CSmartPtr< CTemplateTagHandler > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->AddTagHandler(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplate_GetTagHandlers(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplate *arg1 = (CTemplate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  vector< CSmartPtr< CTemplateTagHandler > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CTemplate_GetTagHandlers",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_GetTagHandlers" "', argument " "1"" of type '" "CTemplate *""'"); 
  }
  arg1 = reinterpret_cast< CTemplate * >(argp1);
  result = (vector< CSmartPtr< CTemplateTagHandler > > *) &(arg1)->GetTagHandlers();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_vectorT_CSmartPtrT_CTemplateTagHandler_t_std__allocatorT_CSmartPtrT_CTemplateTagHandler_t_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplate_ResolveLiteral(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplate *arg1 = (CTemplate *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CTemplate_ResolveLiteral",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_ResolveLiteral" "', argument " "1"" of type '" "CTemplate *""'"); 
  }
  arg1 = reinterpret_cast< CTemplate * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_ResolveLiteral" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_ResolveLiteral" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (arg1)->ResolveLiteral((CString const &)*arg2);
  resultobj = SWIG_From_std_string((CString)(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplate_Init(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplate *arg1 = (CTemplate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CTemplate_Init",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_Init" "', argument " "1"" of type '" "CTemplate *""'"); 
  }
  arg1 = reinterpret_cast< CTemplate * >(argp1);
  (arg1)->Init();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplate_GetParent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplate *arg1 = (CTemplate *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CTemplate *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CTemplate_GetParent",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_GetParent" "', argument " "1"" of type '" "CTemplate *""'"); 
  }
  arg1 = reinterpret_cast< CTemplate * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CTemplate_GetParent" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (CTemplate *)(arg1)->GetParent(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CTemplate, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplate_ExpandFile__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplate *arg1 = (CTemplate *) 0 ;
  CString *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CTemplate_ExpandFile",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_ExpandFile" "', argument " "1"" of type '" "CTemplate *""'"); 
  }
  arg1 = reinterpret_cast< CTemplate * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_ExpandFile" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_ExpandFile" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CTemplate_ExpandFile" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (arg1)->ExpandFile((CString const &)*arg2,arg3);
  resultobj = SWIG_From_std_string((CString)(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplate_ExpandFile__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplate *arg1 = (CTemplate *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CTemplate_ExpandFile",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_ExpandFile" "', argument " "1"" of type '" "CTemplate *""'"); 
  }
  arg1 = reinterpret_cast< CTemplate * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_ExpandFile" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_ExpandFile" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (arg1)->ExpandFile((CString const &)*arg2);
  resultobj = SWIG_From_std_string((CString)(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplate_ExpandFile(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CTemplate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CTemplate_ExpandFile__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CTemplate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CTemplate_ExpandFile__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CTemplate_ExpandFile'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CTemplate::ExpandFile(CString const &,bool)\n"
    "    CTemplate::ExpandFile(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CTemplate_SetFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplate *arg1 = (CTemplate *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CTemplate_SetFile",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_SetFile" "', argument " "1"" of type '" "CTemplate *""'"); 
  }
  arg1 = reinterpret_cast< CTemplate * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_SetFile" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_SetFile" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->SetFile((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplate_SetPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplate *arg1 = (CTemplate *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CTemplate_SetPath",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_SetPath" "', argument " "1"" of type '" "CTemplate *""'"); 
  }
  arg1 = reinterpret_cast< CTemplate * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_SetPath" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_SetPath" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetPath((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplate_MakePath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplate *arg1 = (CTemplate *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CTemplate_MakePath",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_MakePath" "', argument " "1"" of type '" "CTemplate const *""'"); 
  }
  arg1 = reinterpret_cast< CTemplate * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_MakePath" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_MakePath" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = ((CTemplate const *)arg1)->MakePath((CString const &)*arg2);
  resultobj = SWIG_From_std_string((CString)(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplate_PrependPath__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplate *arg1 = (CTemplate *) 0 ;
  CString *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CTemplate_PrependPath",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_PrependPath" "', argument " "1"" of type '" "CTemplate *""'"); 
  }
  arg1 = reinterpret_cast< CTemplate * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_PrependPath" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_PrependPath" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CTemplate_PrependPath" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  (arg1)->PrependPath((CString const &)*arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplate_PrependPath__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplate *arg1 = (CTemplate *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CTemplate_PrependPath",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_PrependPath" "', argument " "1"" of type '" "CTemplate *""'"); 
  }
  arg1 = reinterpret_cast< CTemplate * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_PrependPath" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_PrependPath" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->PrependPath((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplate_PrependPath(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CTemplate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CTemplate_PrependPath__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CTemplate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CTemplate_PrependPath__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CTemplate_PrependPath'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CTemplate::PrependPath(CString const &,bool)\n"
    "    CTemplate::PrependPath(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CTemplate_AppendPath__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplate *arg1 = (CTemplate *) 0 ;
  CString *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CTemplate_AppendPath",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_AppendPath" "', argument " "1"" of type '" "CTemplate *""'"); 
  }
  arg1 = reinterpret_cast< CTemplate * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_AppendPath" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_AppendPath" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CTemplate_AppendPath" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  (arg1)->AppendPath((CString const &)*arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplate_AppendPath__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplate *arg1 = (CTemplate *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CTemplate_AppendPath",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_AppendPath" "', argument " "1"" of type '" "CTemplate *""'"); 
  }
  arg1 = reinterpret_cast< CTemplate * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_AppendPath" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_AppendPath" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->AppendPath((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplate_AppendPath(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CTemplate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CTemplate_AppendPath__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CTemplate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CTemplate_AppendPath__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CTemplate_AppendPath'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CTemplate::AppendPath(CString const &,bool)\n"
    "    CTemplate::AppendPath(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CTemplate_RemovePath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplate *arg1 = (CTemplate *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CTemplate_RemovePath",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_RemovePath" "', argument " "1"" of type '" "CTemplate *""'"); 
  }
  arg1 = reinterpret_cast< CTemplate * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_RemovePath" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_RemovePath" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->RemovePath((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplate_ClearPaths(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplate *arg1 = (CTemplate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CTemplate_ClearPaths",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_ClearPaths" "', argument " "1"" of type '" "CTemplate *""'"); 
  }
  arg1 = reinterpret_cast< CTemplate * >(argp1);
  (arg1)->ClearPaths();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplate_PrintString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplate *arg1 = (CTemplate *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CTemplate_PrintString",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_PrintString" "', argument " "1"" of type '" "CTemplate *""'"); 
  }
  arg1 = reinterpret_cast< CTemplate * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sRet");
    }
  }
  result = (bool)(arg1)->PrintString(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplate_Print__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplate *arg1 = (CTemplate *) 0 ;
  ostream *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CTemplate_Print",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_Print" "', argument " "1"" of type '" "CTemplate *""'"); 
  }
  arg1 = reinterpret_cast< CTemplate * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_Print" "', argument " "2"" of type '" "ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_Print" "', argument " "2"" of type '" "ostream &""'"); 
  }
  arg2 = reinterpret_cast< ostream * >(argp2);
  result = (bool)(arg1)->Print(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplate_Print__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplate *arg1 = (CTemplate *) 0 ;
  CString *arg2 = 0 ;
  ostream *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CTemplate_Print",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_Print" "', argument " "1"" of type '" "CTemplate *""'"); 
  }
  arg1 = reinterpret_cast< CTemplate * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_Print" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_Print" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_ostream,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CTemplate_Print" "', argument " "3"" of type '" "ostream &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_Print" "', argument " "3"" of type '" "ostream &""'"); 
  }
  arg3 = reinterpret_cast< ostream * >(argp3);
  result = (bool)(arg1)->Print((CString const &)*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplate_Print(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CTemplate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ostream, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CTemplate_Print__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CTemplate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_ostream, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CTemplate_Print__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CTemplate_Print'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CTemplate::Print(ostream &)\n"
    "    CTemplate::Print(CString const &,ostream &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CTemplate_ValidIf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplate *arg1 = (CTemplate *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CTemplate_ValidIf",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_ValidIf" "', argument " "1"" of type '" "CTemplate *""'"); 
  }
  arg1 = reinterpret_cast< CTemplate * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_ValidIf" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_ValidIf" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->ValidIf((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplate_ValidExpr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplate *arg1 = (CTemplate *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CTemplate_ValidExpr",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_ValidExpr" "', argument " "1"" of type '" "CTemplate *""'"); 
  }
  arg1 = reinterpret_cast< CTemplate * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_ValidExpr" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_ValidExpr" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->ValidExpr((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplate_IsTrue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplate *arg1 = (CTemplate *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CTemplate_IsTrue",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_IsTrue" "', argument " "1"" of type '" "CTemplate *""'"); 
  }
  arg1 = reinterpret_cast< CTemplate * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_IsTrue" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_IsTrue" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->IsTrue((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplate_HasLoop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplate *arg1 = (CTemplate *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CTemplate_HasLoop",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_HasLoop" "', argument " "1"" of type '" "CTemplate *""'"); 
  }
  arg1 = reinterpret_cast< CTemplate * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_HasLoop" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_HasLoop" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->HasLoop((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplate_GetValue__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplate *arg1 = (CTemplate *) 0 ;
  CString *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CTemplate_GetValue",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_GetValue" "', argument " "1"" of type '" "CTemplate *""'"); 
  }
  arg1 = reinterpret_cast< CTemplate * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_GetValue" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_GetValue" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CTemplate_GetValue" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (arg1)->GetValue((CString const &)*arg2,arg3);
  resultobj = SWIG_From_std_string((CString)(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplate_GetValue__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplate *arg1 = (CTemplate *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CTemplate_GetValue",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_GetValue" "', argument " "1"" of type '" "CTemplate *""'"); 
  }
  arg1 = reinterpret_cast< CTemplate * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_GetValue" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_GetValue" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (arg1)->GetValue((CString const &)*arg2);
  resultobj = SWIG_From_std_string((CString)(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplate_GetValue(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CTemplate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CTemplate_GetValue__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CTemplate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CTemplate_GetValue__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CTemplate_GetValue'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CTemplate::GetValue(CString const &,bool)\n"
    "    CTemplate::GetValue(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CTemplate_AddRow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplate *arg1 = (CTemplate *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CTemplate *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CTemplate_AddRow",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_AddRow" "', argument " "1"" of type '" "CTemplate *""'"); 
  }
  arg1 = reinterpret_cast< CTemplate * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_AddRow" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_AddRow" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (CTemplate *) &(arg1)->AddRow((CString const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CTemplate, 0 |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplate_GetRow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplate *arg1 = (CTemplate *) 0 ;
  CString *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CTemplate *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CTemplate_GetRow",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_GetRow" "', argument " "1"" of type '" "CTemplate *""'"); 
  }
  arg1 = reinterpret_cast< CTemplate * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_GetRow" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_GetRow" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CTemplate_GetRow" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (CTemplate *)(arg1)->GetRow((CString const &)*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CTemplate, 0 |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplate_GetLoop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplate *arg1 = (CTemplate *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  vector< CTemplate * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CTemplate_GetLoop",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_GetLoop" "', argument " "1"" of type '" "CTemplate *""'"); 
  }
  arg1 = reinterpret_cast< CTemplate * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_GetLoop" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_GetLoop" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (vector< CTemplate * > *)(arg1)->GetLoop((CString const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_vectorT_CTemplate_p_std__allocatorT_CTemplate_p_t_t, 0 |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplate_DelCurLoopContext(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplate *arg1 = (CTemplate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CTemplate_DelCurLoopContext",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_DelCurLoopContext" "', argument " "1"" of type '" "CTemplate *""'"); 
  }
  arg1 = reinterpret_cast< CTemplate * >(argp1);
  (arg1)->DelCurLoopContext();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplate_GetCurLoopContext(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplate *arg1 = (CTemplate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CTemplateLoopContext *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CTemplate_GetCurLoopContext",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_GetCurLoopContext" "', argument " "1"" of type '" "CTemplate *""'"); 
  }
  arg1 = reinterpret_cast< CTemplate * >(argp1);
  result = (CTemplateLoopContext *)(arg1)->GetCurLoopContext();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplate_GetCurTemplate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplate *arg1 = (CTemplate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CTemplate *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CTemplate_GetCurTemplate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_GetCurTemplate" "', argument " "1"" of type '" "CTemplate *""'"); 
  }
  arg1 = reinterpret_cast< CTemplate * >(argp1);
  result = (CTemplate *)(arg1)->GetCurTemplate();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CTemplate, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplate_GetFileName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplate *arg1 = (CTemplate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CTemplate_GetFileName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_GetFileName" "', argument " "1"" of type '" "CTemplate const *""'"); 
  }
  arg1 = reinterpret_cast< CTemplate * >(argp1);
  result = (CString *) &((CTemplate const *)arg1)->GetFileName();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CTemplate_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CTemplate *arg1 = (CTemplate *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CTemplate_set",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_set" "', argument " "1"" of type '" "CTemplate *""'"); 
  }
  arg1 = reinterpret_cast< CTemplate * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_set" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_set" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CTemplate_set" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_set" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  CTemplate_set(arg1,(CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *CTemplate_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CTemplate, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CZNCTagHandler(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSock *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CZNCTagHandler *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_CZNCTagHandler",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_CWebSock,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CZNCTagHandler" "', argument " "1"" of type '" "CWebSock &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CZNCTagHandler" "', argument " "1"" of type '" "CWebSock &""'"); 
  }
  arg1 = reinterpret_cast< CWebSock * >(argp1);
  result = (CZNCTagHandler *)new CZNCTagHandler(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CZNCTagHandler, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CZNCTagHandler(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNCTagHandler *arg1 = (CZNCTagHandler *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CZNCTagHandler",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNCTagHandler, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CZNCTagHandler" "', argument " "1"" of type '" "CZNCTagHandler *""'"); 
  }
  arg1 = reinterpret_cast< CZNCTagHandler * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNCTagHandler_HandleTag(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNCTagHandler *arg1 = (CZNCTagHandler *) 0 ;
  CTemplate *arg2 = 0 ;
  CString *arg3 = 0 ;
  CString *arg4 = 0 ;
  CString *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CZNCTagHandler_HandleTag",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNCTagHandler, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNCTagHandler_HandleTag" "', argument " "1"" of type '" "CZNCTagHandler *""'"); 
  }
  arg1 = reinterpret_cast< CZNCTagHandler * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CTemplate,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNCTagHandler_HandleTag" "', argument " "2"" of type '" "CTemplate &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNCTagHandler_HandleTag" "', argument " "2"" of type '" "CTemplate &""'"); 
  }
  arg2 = reinterpret_cast< CTemplate * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CZNCTagHandler_HandleTag" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNCTagHandler_HandleTag" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CZNCTagHandler_HandleTag" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNCTagHandler_HandleTag" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj4, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg5 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 5 sOutput");
    }
  }
  result = (bool)(arg1)->HandleTag(*arg2,(CString const &)*arg3,(CString const &)*arg4,*arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *CZNCTagHandler_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CZNCTagHandler, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CWebSession(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  CString *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CWebSession *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_CWebSession",&obj0,&obj1)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CWebSession" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CWebSession" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CWebSession" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CWebSession" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (CWebSession *)new CWebSession((CString const &)*arg1,(CString const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CWebSession, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CWebSession(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSession *arg1 = (CWebSession *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CWebSession",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSession, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CWebSession" "', argument " "1"" of type '" "CWebSession *""'"); 
  }
  arg1 = reinterpret_cast< CWebSession * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CWebSession_GetId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSession *arg1 = (CWebSession *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CWebSession_GetId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSession, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSession_GetId" "', argument " "1"" of type '" "CWebSession const *""'"); 
  }
  arg1 = reinterpret_cast< CWebSession * >(argp1);
  result = (CString *) &((CWebSession const *)arg1)->GetId();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CWebSession_GetIP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSession *arg1 = (CWebSession *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CWebSession_GetIP",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSession, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSession_GetIP" "', argument " "1"" of type '" "CWebSession const *""'"); 
  }
  arg1 = reinterpret_cast< CWebSession * >(argp1);
  result = (CString *) &((CWebSession const *)arg1)->GetIP();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CWebSession_GetUser(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSession *arg1 = (CWebSession *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CUser *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CWebSession_GetUser",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSession, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSession_GetUser" "', argument " "1"" of type '" "CWebSession const *""'"); 
  }
  arg1 = reinterpret_cast< CWebSession * >(argp1);
  result = (CUser *)((CWebSession const *)arg1)->GetUser();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CUser, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CWebSession_IsLoggedIn(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSession *arg1 = (CWebSession *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CWebSession_IsLoggedIn",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSession, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSession_IsLoggedIn" "', argument " "1"" of type '" "CWebSession const *""'"); 
  }
  arg1 = reinterpret_cast< CWebSession * >(argp1);
  result = (bool)((CWebSession const *)arg1)->IsLoggedIn();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CWebSession_IsAdmin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSession *arg1 = (CWebSession *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CWebSession_IsAdmin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSession, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSession_IsAdmin" "', argument " "1"" of type '" "CWebSession const *""'"); 
  }
  arg1 = reinterpret_cast< CWebSession * >(argp1);
  result = (bool)((CWebSession const *)arg1)->IsAdmin();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CWebSession_SetUser(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSession *arg1 = (CWebSession *) 0 ;
  CUser *arg2 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CUser *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CWebSession_SetUser",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSession, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSession_SetUser" "', argument " "1"" of type '" "CWebSession *""'"); 
  }
  arg1 = reinterpret_cast< CWebSession * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSession_SetUser" "', argument " "2"" of type '" "CUser *""'"); 
  }
  arg2 = reinterpret_cast< CUser * >(argp2);
  result = (CUser *)(arg1)->SetUser(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CUser, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CWebSession_ClearMessageLoops(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSession *arg1 = (CWebSession *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CWebSession_ClearMessageLoops",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSession, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSession_ClearMessageLoops" "', argument " "1"" of type '" "CWebSession *""'"); 
  }
  arg1 = reinterpret_cast< CWebSession * >(argp1);
  (arg1)->ClearMessageLoops();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CWebSession_FillMessageLoops(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSession *arg1 = (CWebSession *) 0 ;
  CTemplate *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CWebSession_FillMessageLoops",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSession, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSession_FillMessageLoops" "', argument " "1"" of type '" "CWebSession *""'"); 
  }
  arg1 = reinterpret_cast< CWebSession * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CTemplate,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSession_FillMessageLoops" "', argument " "2"" of type '" "CTemplate &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSession_FillMessageLoops" "', argument " "2"" of type '" "CTemplate &""'"); 
  }
  arg2 = reinterpret_cast< CTemplate * >(argp2);
  (arg1)->FillMessageLoops(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CWebSession_AddError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSession *arg1 = (CWebSession *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  size_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CWebSession_AddError",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSession, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSession_AddError" "', argument " "1"" of type '" "CWebSession *""'"); 
  }
  arg1 = reinterpret_cast< CWebSession * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSession_AddError" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSession_AddError" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (arg1)->AddError((CString const &)*arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CWebSession_AddSuccess(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSession *arg1 = (CWebSession *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  size_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CWebSession_AddSuccess",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSession, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSession_AddSuccess" "', argument " "1"" of type '" "CWebSession *""'"); 
  }
  arg1 = reinterpret_cast< CWebSession * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSession_AddSuccess" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSession_AddSuccess" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (arg1)->AddSuccess((CString const &)*arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *CWebSession_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CWebSession, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CWebSubPage__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  CString *arg2 = 0 ;
  unsigned int arg3 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CWebSubPage *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_CWebSubPage",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CWebSubPage" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CWebSubPage" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CWebSubPage" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CWebSubPage" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CWebSubPage" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (CWebSubPage *)new CWebSubPage((CString const &)*arg1,(CString const &)*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CWebSubPage, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CWebSubPage__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  CString *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CWebSubPage *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_CWebSubPage",&obj0,&obj1)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CWebSubPage" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CWebSubPage" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CWebSubPage" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CWebSubPage" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (CWebSubPage *)new CWebSubPage((CString const &)*arg1,(CString const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CWebSubPage, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CWebSubPage__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  CWebSubPage *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_CWebSubPage",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CWebSubPage" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CWebSubPage" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  result = (CWebSubPage *)new CWebSubPage((CString const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CWebSubPage, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CWebSubPage__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  CString *arg2 = 0 ;
  VPair *arg3 = 0 ;
  unsigned int arg4 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CWebSubPage *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_CWebSubPage",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CWebSubPage" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CWebSubPage" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CWebSubPage" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CWebSubPage" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CWebSubPage" "', argument " "3"" of type '" "VPair const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CWebSubPage" "', argument " "3"" of type '" "VPair const &""'"); 
  }
  arg3 = reinterpret_cast< VPair * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_CWebSubPage" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (CWebSubPage *)new CWebSubPage((CString const &)*arg1,(CString const &)*arg2,(VPair const &)*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CWebSubPage, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CWebSubPage__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  CString *arg2 = 0 ;
  VPair *arg3 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CWebSubPage *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_CWebSubPage",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CWebSubPage" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CWebSubPage" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CWebSubPage" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CWebSubPage" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CWebSubPage" "', argument " "3"" of type '" "VPair const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CWebSubPage" "', argument " "3"" of type '" "VPair const &""'"); 
  }
  arg3 = reinterpret_cast< VPair * >(argp3);
  result = (CWebSubPage *)new CWebSubPage((CString const &)*arg1,(CString const &)*arg2,(VPair const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CWebSubPage, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CWebSubPage(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_CWebSubPage__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_CWebSubPage__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_CWebSubPage__SWIG_4(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_CWebSubPage__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_CWebSubPage__SWIG_3(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_CWebSubPage'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CWebSubPage::CWebSubPage(CString const &,CString const &,unsigned int)\n"
    "    CWebSubPage::CWebSubPage(CString const &,CString const &)\n"
    "    CWebSubPage::CWebSubPage(CString const &)\n"
    "    CWebSubPage::CWebSubPage(CString const &,CString const &,VPair const &,unsigned int)\n"
    "    CWebSubPage::CWebSubPage(CString const &,CString const &,VPair const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_CWebSubPage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSubPage *arg1 = (CWebSubPage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CWebSubPage",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSubPage, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CWebSubPage" "', argument " "1"" of type '" "CWebSubPage *""'"); 
  }
  arg1 = reinterpret_cast< CWebSubPage * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CWebSubPage_SetName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSubPage *arg1 = (CWebSubPage *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CWebSubPage_SetName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSubPage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSubPage_SetName" "', argument " "1"" of type '" "CWebSubPage *""'"); 
  }
  arg1 = reinterpret_cast< CWebSubPage * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSubPage_SetName" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSubPage_SetName" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetName((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CWebSubPage_SetTitle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSubPage *arg1 = (CWebSubPage *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CWebSubPage_SetTitle",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSubPage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSubPage_SetTitle" "', argument " "1"" of type '" "CWebSubPage *""'"); 
  }
  arg1 = reinterpret_cast< CWebSubPage * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSubPage_SetTitle" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSubPage_SetTitle" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetTitle((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CWebSubPage_AddParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSubPage *arg1 = (CWebSubPage *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CWebSubPage_AddParam",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSubPage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSubPage_AddParam" "', argument " "1"" of type '" "CWebSubPage *""'"); 
  }
  arg1 = reinterpret_cast< CWebSubPage * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSubPage_AddParam" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSubPage_AddParam" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CWebSubPage_AddParam" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSubPage_AddParam" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->AddParam((CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CWebSubPage_RequiresAdmin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSubPage *arg1 = (CWebSubPage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CWebSubPage_RequiresAdmin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSubPage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSubPage_RequiresAdmin" "', argument " "1"" of type '" "CWebSubPage const *""'"); 
  }
  arg1 = reinterpret_cast< CWebSubPage * >(argp1);
  result = (bool)((CWebSubPage const *)arg1)->RequiresAdmin();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CWebSubPage_GetName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSubPage *arg1 = (CWebSubPage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CWebSubPage_GetName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSubPage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSubPage_GetName" "', argument " "1"" of type '" "CWebSubPage const *""'"); 
  }
  arg1 = reinterpret_cast< CWebSubPage * >(argp1);
  result = (CString *) &((CWebSubPage const *)arg1)->GetName();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CWebSubPage_GetTitle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSubPage *arg1 = (CWebSubPage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CWebSubPage_GetTitle",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSubPage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSubPage_GetTitle" "', argument " "1"" of type '" "CWebSubPage const *""'"); 
  }
  arg1 = reinterpret_cast< CWebSubPage * >(argp1);
  result = (CString *) &((CWebSubPage const *)arg1)->GetTitle();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CWebSubPage_GetParams(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSubPage *arg1 = (CWebSubPage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  VPair *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CWebSubPage_GetParams",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSubPage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSubPage_GetParams" "', argument " "1"" of type '" "CWebSubPage const *""'"); 
  }
  arg1 = reinterpret_cast< CWebSubPage * >(argp1);
  result = (VPair *) &((CWebSubPage const *)arg1)->GetParams();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CWebSubPage_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CWebSubPage, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CWebSessionMap__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  CWebSessionMap *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_CWebSessionMap",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CWebSessionMap" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (CWebSessionMap *)new CWebSessionMap(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CWebSessionMap, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CWebSessionMap__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSessionMap *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CWebSessionMap")) SWIG_fail;
  result = (CWebSessionMap *)new CWebSessionMap();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CWebSessionMap, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CWebSessionMap(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_CWebSessionMap__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_CWebSessionMap__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_CWebSessionMap'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CWebSessionMap::CWebSessionMap(unsigned int)\n"
    "    CWebSessionMap::CWebSessionMap()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CWebSessionMap_FinishUserSessions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSessionMap *arg1 = (CWebSessionMap *) 0 ;
  CUser *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CWebSessionMap_FinishUserSessions",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSessionMap, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSessionMap_FinishUserSessions" "', argument " "1"" of type '" "CWebSessionMap *""'"); 
  }
  arg1 = reinterpret_cast< CWebSessionMap * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CUser,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSessionMap_FinishUserSessions" "', argument " "2"" of type '" "CUser const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSessionMap_FinishUserSessions" "', argument " "2"" of type '" "CUser const &""'"); 
  }
  arg2 = reinterpret_cast< CUser * >(argp2);
  (arg1)->FinishUserSessions((CUser const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CWebSessionMap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSessionMap *arg1 = (CWebSessionMap *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CWebSessionMap",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSessionMap, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CWebSessionMap" "', argument " "1"" of type '" "CWebSessionMap *""'"); 
  }
  arg1 = reinterpret_cast< CWebSessionMap * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CWebSessionMap_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CWebSessionMap, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CWebSock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CWebSock")) SWIG_fail;
  result = (CWebSock *)new CWebSock();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CWebSock, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CWebSock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSock *arg1 = (CWebSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CWebSock",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSock, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CWebSock" "', argument " "1"" of type '" "CWebSock *""'"); 
  }
  arg1 = reinterpret_cast< CWebSock * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CWebSock_ForceLogin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSock *arg1 = (CWebSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CWebSock_ForceLogin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSock_ForceLogin" "', argument " "1"" of type '" "CWebSock *""'"); 
  }
  arg1 = reinterpret_cast< CWebSock * >(argp1);
  result = (bool)(arg1)->ForceLogin();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CWebSock_OnLogin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSock *arg1 = (CWebSock *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CWebSock_OnLogin",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSock_OnLogin" "', argument " "1"" of type '" "CWebSock *""'"); 
  }
  arg1 = reinterpret_cast< CWebSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSock_OnLogin" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSock_OnLogin" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CWebSock_OnLogin" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSock_OnLogin" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = (bool)(arg1)->OnLogin((CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CWebSock_OnPageRequest(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSock *arg1 = (CWebSock *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CWebSock_OnPageRequest",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSock_OnPageRequest" "', argument " "1"" of type '" "CWebSock *""'"); 
  }
  arg1 = reinterpret_cast< CWebSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSock_OnPageRequest" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSock_OnPageRequest" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->OnPageRequest((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CWebSock_PrintTemplate__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSock *arg1 = (CWebSock *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  CModule *arg4 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CWebSock::EPageReqResult result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CWebSock_PrintTemplate",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSock_PrintTemplate" "', argument " "1"" of type '" "CWebSock *""'"); 
  }
  arg1 = reinterpret_cast< CWebSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSock_PrintTemplate" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSock_PrintTemplate" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sPageRet");
    }
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CWebSock_PrintTemplate" "', argument " "4"" of type '" "CModule *""'"); 
  }
  arg4 = reinterpret_cast< CModule * >(argp4);
  result = (CWebSock::EPageReqResult)(arg1)->PrintTemplate((CString const &)*arg2,*arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CWebSock_PrintTemplate__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSock *arg1 = (CWebSock *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CWebSock::EPageReqResult result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CWebSock_PrintTemplate",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSock_PrintTemplate" "', argument " "1"" of type '" "CWebSock *""'"); 
  }
  arg1 = reinterpret_cast< CWebSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSock_PrintTemplate" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSock_PrintTemplate" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sPageRet");
    }
  }
  result = (CWebSock::EPageReqResult)(arg1)->PrintTemplate((CString const &)*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CWebSock_PrintTemplate(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CWebSock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CWebSock_PrintTemplate__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CWebSock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CModule, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CWebSock_PrintTemplate__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CWebSock_PrintTemplate'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CWebSock::PrintTemplate(CString const &,CString &,CModule *)\n"
    "    CWebSock::PrintTemplate(CString const &,CString &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CWebSock_PrintStaticFile__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSock *arg1 = (CWebSock *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  CModule *arg4 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CWebSock::EPageReqResult result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CWebSock_PrintStaticFile",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSock_PrintStaticFile" "', argument " "1"" of type '" "CWebSock *""'"); 
  }
  arg1 = reinterpret_cast< CWebSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSock_PrintStaticFile" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSock_PrintStaticFile" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sPageRet");
    }
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CWebSock_PrintStaticFile" "', argument " "4"" of type '" "CModule *""'"); 
  }
  arg4 = reinterpret_cast< CModule * >(argp4);
  result = (CWebSock::EPageReqResult)(arg1)->PrintStaticFile((CString const &)*arg2,*arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CWebSock_PrintStaticFile__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSock *arg1 = (CWebSock *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CWebSock::EPageReqResult result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CWebSock_PrintStaticFile",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSock_PrintStaticFile" "', argument " "1"" of type '" "CWebSock *""'"); 
  }
  arg1 = reinterpret_cast< CWebSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSock_PrintStaticFile" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSock_PrintStaticFile" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sPageRet");
    }
  }
  result = (CWebSock::EPageReqResult)(arg1)->PrintStaticFile((CString const &)*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CWebSock_PrintStaticFile(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CWebSock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CWebSock_PrintStaticFile__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CWebSock, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CModule, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CWebSock_PrintStaticFile__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CWebSock_PrintStaticFile'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CWebSock::PrintStaticFile(CString const &,CString &,CModule *)\n"
    "    CWebSock::PrintStaticFile(CString const &,CString &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CWebSock_FindTmpl(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSock *arg1 = (CWebSock *) 0 ;
  CModule *arg2 = (CModule *) 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CWebSock_FindTmpl",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSock_FindTmpl" "', argument " "1"" of type '" "CWebSock *""'"); 
  }
  arg1 = reinterpret_cast< CWebSock * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSock_FindTmpl" "', argument " "2"" of type '" "CModule *""'"); 
  }
  arg2 = reinterpret_cast< CModule * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CWebSock_FindTmpl" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSock_FindTmpl" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = (arg1)->FindTmpl(arg2,(CString const &)*arg3);
  resultobj = SWIG_From_std_string((CString)(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CWebSock_PrintErrorPage__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSock *arg1 = (CWebSock *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CWebSock_PrintErrorPage",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSock_PrintErrorPage" "', argument " "1"" of type '" "CWebSock *""'"); 
  }
  arg1 = reinterpret_cast< CWebSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSock_PrintErrorPage" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSock_PrintErrorPage" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->PrintErrorPage((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CWebSock_GetSession(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSock *arg1 = (CWebSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< CSmartPtr< CWebSession > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CWebSock_GetSession",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSock_GetSession" "', argument " "1"" of type '" "CWebSock *""'"); 
  }
  arg1 = reinterpret_cast< CWebSock * >(argp1);
  result = (arg1)->GetSession();
  resultobj = SWIG_NewPointerObj((new CSmartPtr< CWebSession >(static_cast< const CSmartPtr< CWebSession >& >(result))), SWIGTYPE_p_CSmartPtrT_CWebSession_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CWebSock_GetSockObj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSock *arg1 = (CWebSock *) 0 ;
  CString *arg2 = 0 ;
  unsigned short arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned short val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Csock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CWebSock_GetSockObj",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSock_GetSockObj" "', argument " "1"" of type '" "CWebSock *""'"); 
  }
  arg1 = reinterpret_cast< CWebSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSock_GetSockObj" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSock_GetSockObj" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_short(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CWebSock_GetSockObj" "', argument " "3"" of type '" "unsigned short""'");
  } 
  arg3 = static_cast< unsigned short >(val3);
  result = (Csock *)(arg1)->GetSockObj((CString const &)*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CWebSock_GetSkinPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CWebSock_GetSkinPath",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSock_GetSkinPath" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSock_GetSkinPath" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  result = CWebSock::GetSkinPath((CString const &)*arg1);
  resultobj = SWIG_From_std_string((CString)(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CWebSock_GetModule(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSock *arg1 = (CWebSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CModule *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CWebSock_GetModule",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSock_GetModule" "', argument " "1"" of type '" "CWebSock const *""'"); 
  }
  arg1 = reinterpret_cast< CWebSock * >(argp1);
  result = (CModule *)((CWebSock const *)arg1)->GetModule();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModule, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CWebSock_GetAvailSkins(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSock *arg1 = (CWebSock *) 0 ;
  VCString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CWebSock_GetAvailSkins",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSock_GetAvailSkins" "', argument " "1"" of type '" "CWebSock const *""'"); 
  }
  arg1 = reinterpret_cast< CWebSock * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_VCString,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSock_GetAvailSkins" "', argument " "2"" of type '" "VCString &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSock_GetAvailSkins" "', argument " "2"" of type '" "VCString &""'"); 
  }
  arg2 = reinterpret_cast< VCString * >(argp2);
  ((CWebSock const *)arg1)->GetAvailSkins(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CWebSock_GetSkinName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSock *arg1 = (CWebSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CWebSock_GetSkinName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSock_GetSkinName" "', argument " "1"" of type '" "CWebSock *""'"); 
  }
  arg1 = reinterpret_cast< CWebSock * >(argp1);
  result = (arg1)->GetSkinName();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CWebSock_GetRequestCookie(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSock *arg1 = (CWebSock *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CWebSock_GetRequestCookie",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSock_GetRequestCookie" "', argument " "1"" of type '" "CWebSock *""'"); 
  }
  arg1 = reinterpret_cast< CWebSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSock_GetRequestCookie" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSock_GetRequestCookie" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (arg1)->GetRequestCookie((CString const &)*arg2);
  resultobj = SWIG_From_std_string((CString)(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CWebSock_SendCookie(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CWebSock *arg1 = (CWebSock *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CWebSock_SendCookie",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CWebSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSock_SendCookie" "', argument " "1"" of type '" "CWebSock *""'"); 
  }
  arg1 = reinterpret_cast< CWebSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSock_SendCookie" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSock_SendCookie" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CWebSock_SendCookie" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSock_SendCookie" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = (bool)(arg1)->SendCookie((CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CWebSock_FinishUserSessions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CWebSock_FinishUserSessions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_CUser,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSock_FinishUserSessions" "', argument " "1"" of type '" "CUser const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSock_FinishUserSessions" "', argument " "1"" of type '" "CUser const &""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  CWebSock::FinishUserSessions((CUser const &)*arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CWebSock_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CWebSock, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CZNC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CZNC")) SWIG_fail;
  result = (CZNC *)new CZNC();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CZNC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CZNC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CZNC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CZNC" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_DeleteUsers(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_DeleteUsers",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_DeleteUsers" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  (arg1)->DeleteUsers();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_Loop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_Loop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_Loop" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  (arg1)->Loop();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_WritePidFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CZNC_WritePidFile",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_WritePidFile" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CZNC_WritePidFile" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (bool)(arg1)->WritePidFile(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_DeletePidFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_DeletePidFile",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_DeletePidFile" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  result = (bool)(arg1)->DeletePidFile();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_WaitForChildLock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_WaitForChildLock",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_WaitForChildLock" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  result = (bool)(arg1)->WaitForChildLock();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_IsHostAllowed(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CZNC_IsHostAllowed",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_IsHostAllowed" "', argument " "1"" of type '" "CZNC const *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_IsHostAllowed" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_IsHostAllowed" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)((CZNC const *)arg1)->IsHostAllowed((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_AllowConnectionFrom(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CZNC_AllowConnectionFrom",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_AllowConnectionFrom" "', argument " "1"" of type '" "CZNC const *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_AllowConnectionFrom" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_AllowConnectionFrom" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)((CZNC const *)arg1)->AllowConnectionFrom((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_InitDirs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CZNC_InitDirs",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_InitDirs" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_InitDirs" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_InitDirs" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CZNC_InitDirs" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_InitDirs" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->InitDirs((CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_OnBoot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_OnBoot",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_OnBoot" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  result = (bool)(arg1)->OnBoot();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_ExpandConfigPath__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  CString *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CZNC_ExpandConfigPath",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_ExpandConfigPath" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_ExpandConfigPath" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_ExpandConfigPath" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CZNC_ExpandConfigPath" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (arg1)->ExpandConfigPath((CString const &)*arg2,arg3);
  resultobj = SWIG_From_std_string((CString)(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_ExpandConfigPath__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CZNC_ExpandConfigPath",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_ExpandConfigPath" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_ExpandConfigPath" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_ExpandConfigPath" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (arg1)->ExpandConfigPath((CString const &)*arg2);
  resultobj = SWIG_From_std_string((CString)(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_ExpandConfigPath(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CZNC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CZNC_ExpandConfigPath__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CZNC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CZNC_ExpandConfigPath__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CZNC_ExpandConfigPath'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CZNC::ExpandConfigPath(CString const &,bool)\n"
    "    CZNC::ExpandConfigPath(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CZNC_WriteNewConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CZNC_WriteNewConfig",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_WriteNewConfig" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_WriteNewConfig" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_WriteNewConfig" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->WriteNewConfig((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_WriteConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_WriteConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_WriteConfig" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  result = (bool)(arg1)->WriteConfig();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_ParseConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CZNC_ParseConfig",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_ParseConfig" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_ParseConfig" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_ParseConfig" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->ParseConfig((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_RehashConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CZNC_RehashConfig",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_RehashConfig" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sError");
    }
  }
  result = (bool)(arg1)->RehashConfig(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_BackupConfigOnce(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CZNC_BackupConfigOnce",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_BackupConfigOnce" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_BackupConfigOnce" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_BackupConfigOnce" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->BackupConfigOnce((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_GetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)":CZNC_GetVersion")) SWIG_fail;
  result = CZNC::GetVersion();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_GetTag__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  bool arg2 ;
  bool val1 ;
  int ecode1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CZNC_GetTag",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CZNC_GetTag" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CZNC_GetTag" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = CZNC::GetTag(arg1,arg2);
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_GetTag__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  bool val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_GetTag",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CZNC_GetTag" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  result = CZNC::GetTag(arg1);
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_GetTag__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)":CZNC_GetTag")) SWIG_fail;
  result = CZNC::GetTag();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_GetTag(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_CZNC_GetTag__SWIG_2(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_bool(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_CZNC_GetTag__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_bool(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CZNC_GetTag__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CZNC_GetTag'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CZNC::GetTag(bool,bool)\n"
    "    CZNC::GetTag(bool)\n"
    "    CZNC::GetTag()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CZNC_GetCompileOptionsString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)":CZNC_GetCompileOptionsString")) SWIG_fail;
  result = CZNC::GetCompileOptionsString();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_GetUptime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_GetUptime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetUptime" "', argument " "1"" of type '" "CZNC const *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  result = ((CZNC const *)arg1)->GetUptime();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_ClearBindHosts(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_ClearBindHosts",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_ClearBindHosts" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  (arg1)->ClearBindHosts();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_AddBindHost(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CZNC_AddBindHost",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_AddBindHost" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_AddBindHost" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_AddBindHost" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->AddBindHost((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_RemBindHost(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CZNC_RemBindHost",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_RemBindHost" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_RemBindHost" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_RemBindHost" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->RemBindHost((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_Broadcast__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  CString *arg2 = 0 ;
  bool arg3 ;
  CUser *arg4 = (CUser *) 0 ;
  CClient *arg5 = (CClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CZNC_Broadcast",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_Broadcast" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_Broadcast" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_Broadcast" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CZNC_Broadcast" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CZNC_Broadcast" "', argument " "4"" of type '" "CUser *""'"); 
  }
  arg4 = reinterpret_cast< CUser * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CZNC_Broadcast" "', argument " "5"" of type '" "CClient *""'"); 
  }
  arg5 = reinterpret_cast< CClient * >(argp5);
  (arg1)->Broadcast((CString const &)*arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_Broadcast__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  CString *arg2 = 0 ;
  bool arg3 ;
  CUser *arg4 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CZNC_Broadcast",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_Broadcast" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_Broadcast" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_Broadcast" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CZNC_Broadcast" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CZNC_Broadcast" "', argument " "4"" of type '" "CUser *""'"); 
  }
  arg4 = reinterpret_cast< CUser * >(argp4);
  (arg1)->Broadcast((CString const &)*arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_Broadcast__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  CString *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CZNC_Broadcast",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_Broadcast" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_Broadcast" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_Broadcast" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CZNC_Broadcast" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  (arg1)->Broadcast((CString const &)*arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_Broadcast__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CZNC_Broadcast",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_Broadcast" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_Broadcast" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_Broadcast" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->Broadcast((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_Broadcast(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CZNC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CZNC_Broadcast__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CZNC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CZNC_Broadcast__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CZNC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CUser, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CZNC_Broadcast__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CZNC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_CUser, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_CClient, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_CZNC_Broadcast__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CZNC_Broadcast'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CZNC::Broadcast(CString const &,bool,CUser *,CClient *)\n"
    "    CZNC::Broadcast(CString const &,bool,CUser *)\n"
    "    CZNC::Broadcast(CString const &,bool)\n"
    "    CZNC::Broadcast(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CZNC_AddBytesRead(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  unsigned long long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CZNC_AddBytesRead",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_AddBytesRead" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CZNC_AddBytesRead" "', argument " "2"" of type '" "unsigned long long""'");
  } 
  arg2 = static_cast< unsigned long long >(val2);
  (arg1)->AddBytesRead(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_AddBytesWritten(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  unsigned long long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CZNC_AddBytesWritten",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_AddBytesWritten" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CZNC_AddBytesWritten" "', argument " "2"" of type '" "unsigned long long""'");
  } 
  arg2 = static_cast< unsigned long long >(val2);
  (arg1)->AddBytesWritten(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_BytesRead(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned long long result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_BytesRead",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_BytesRead" "', argument " "1"" of type '" "CZNC const *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  result = (unsigned long long)((CZNC const *)arg1)->BytesRead();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_BytesWritten(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned long long result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_BytesWritten",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_BytesWritten" "', argument " "1"" of type '" "CZNC const *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  result = (unsigned long long)((CZNC const *)arg1)->BytesWritten();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_GetTrafficStats(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  CZNC::TrafficStatsPair *arg2 = 0 ;
  CZNC::TrafficStatsPair *arg3 = 0 ;
  CZNC::TrafficStatsPair *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  SwigValueWrapper< std::map< CString,std::pair< unsigned long long,unsigned long long >,std::less< CString >,std::allocator< std::pair< CString const,std::pair< unsigned long long,unsigned long long > > > > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CZNC_GetTrafficStats",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetTrafficStats" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__pairT_unsigned_long_long_unsigned_long_long_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_GetTrafficStats" "', argument " "2"" of type '" "CZNC::TrafficStatsPair &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_GetTrafficStats" "', argument " "2"" of type '" "CZNC::TrafficStatsPair &""'"); 
  }
  arg2 = reinterpret_cast< CZNC::TrafficStatsPair * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_std__pairT_unsigned_long_long_unsigned_long_long_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CZNC_GetTrafficStats" "', argument " "3"" of type '" "CZNC::TrafficStatsPair &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_GetTrafficStats" "', argument " "3"" of type '" "CZNC::TrafficStatsPair &""'"); 
  }
  arg3 = reinterpret_cast< CZNC::TrafficStatsPair * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_std__pairT_unsigned_long_long_unsigned_long_long_t,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CZNC_GetTrafficStats" "', argument " "4"" of type '" "CZNC::TrafficStatsPair &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_GetTrafficStats" "', argument " "4"" of type '" "CZNC::TrafficStatsPair &""'"); 
  }
  arg4 = reinterpret_cast< CZNC::TrafficStatsPair * >(argp4);
  result = (arg1)->GetTrafficStats(*arg2,*arg3,*arg4);
  resultobj = SWIG_NewPointerObj((new CZNC::TrafficStatsMap(static_cast< const CZNC::TrafficStatsMap& >(result))), SWIGTYPE_p_std__mapT_CString_std__pairT_unsigned_long_long_unsigned_long_long_t_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_std__pairT_unsigned_long_long_unsigned_long_long_t_t_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_AuthUser(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  SwigValueWrapper< CSmartPtr< CAuthBase > > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CZNC_AuthUser",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_AuthUser" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CSmartPtrT_CAuthBase_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_AuthUser" "', argument " "2"" of type '" "CSmartPtr< CAuthBase >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_AuthUser" "', argument " "2"" of type '" "CSmartPtr< CAuthBase >""'");
    } else {
      CSmartPtr< CAuthBase > * temp = reinterpret_cast< CSmartPtr< CAuthBase > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->AuthUser(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_SetConfigState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  enum CZNC::ConfigState arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CZNC_SetConfigState",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_SetConfigState" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CZNC_SetConfigState" "', argument " "2"" of type '" "enum CZNC::ConfigState""'");
  } 
  arg2 = static_cast< enum CZNC::ConfigState >(val2);
  (arg1)->SetConfigState(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_SetSkinName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CZNC_SetSkinName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_SetSkinName" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_SetSkinName" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_SetSkinName" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetSkinName((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_SetStatusPrefix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CZNC_SetStatusPrefix",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_SetStatusPrefix" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_SetStatusPrefix" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_SetStatusPrefix" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetStatusPrefix((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_SetMaxBufferSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CZNC_SetMaxBufferSize",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_SetMaxBufferSize" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CZNC_SetMaxBufferSize" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  (arg1)->SetMaxBufferSize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_SetAnonIPLimit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CZNC_SetAnonIPLimit",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_SetAnonIPLimit" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CZNC_SetAnonIPLimit" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  (arg1)->SetAnonIPLimit(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_SetServerThrottle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CZNC_SetServerThrottle",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_SetServerThrottle" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CZNC_SetServerThrottle" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  (arg1)->SetServerThrottle(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_SetProtectWebSessions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CZNC_SetProtectWebSessions",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_SetProtectWebSessions" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CZNC_SetProtectWebSessions" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetProtectWebSessions(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_SetConnectDelay(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CZNC_SetConnectDelay",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_SetConnectDelay" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CZNC_SetConnectDelay" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  (arg1)->SetConnectDelay(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_GetConfigState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  enum CZNC::ConfigState result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_GetConfigState",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetConfigState" "', argument " "1"" of type '" "CZNC const *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  result = (enum CZNC::ConfigState)((CZNC const *)arg1)->GetConfigState();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_GetManager__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CSockManager *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_GetManager",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetManager" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  result = (CSockManager *) &(arg1)->GetManager();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSockManager, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_GetManager__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CSockManager *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_GetManager",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetManager" "', argument " "1"" of type '" "CZNC const *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  result = (CSockManager *) &((CZNC const *)arg1)->GetManager();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSockManager, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_GetManager(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CZNC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CZNC_GetManager__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CZNC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CZNC_GetManager__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CZNC_GetManager'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CZNC::GetManager()\n"
    "    CZNC::GetManager() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CZNC_GetModules(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CModules *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_GetModules",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetModules" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  result = (CModules *) &(arg1)->GetModules();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModules, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_FilterUncommonModules(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  set< CModInfo > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  size_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CZNC_FilterUncommonModules",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_FilterUncommonModules" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_setT_CModInfo_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_FilterUncommonModules" "', argument " "2"" of type '" "set< CModInfo > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_FilterUncommonModules" "', argument " "2"" of type '" "set< CModInfo > &""'"); 
  }
  arg2 = reinterpret_cast< set< CModInfo > * >(argp2);
  result = (arg1)->FilterUncommonModules(*arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_GetSkinName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_GetSkinName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetSkinName" "', argument " "1"" of type '" "CZNC const *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  result = ((CZNC const *)arg1)->GetSkinName();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_GetStatusPrefix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_GetStatusPrefix",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetStatusPrefix" "', argument " "1"" of type '" "CZNC const *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  result = (CString *) &((CZNC const *)arg1)->GetStatusPrefix();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_GetCurPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_GetCurPath",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetCurPath" "', argument " "1"" of type '" "CZNC const *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  result = (CString *) &((CZNC const *)arg1)->GetCurPath();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_GetHomePath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_GetHomePath",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetHomePath" "', argument " "1"" of type '" "CZNC const *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  result = (CString *) &((CZNC const *)arg1)->GetHomePath();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_GetZNCPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_GetZNCPath",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetZNCPath" "', argument " "1"" of type '" "CZNC const *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  result = (CString *) &((CZNC const *)arg1)->GetZNCPath();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_GetConfPath__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CZNC_GetConfPath",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetConfPath" "', argument " "1"" of type '" "CZNC const *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CZNC_GetConfPath" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = ((CZNC const *)arg1)->GetConfPath(arg2);
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_GetConfPath__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_GetConfPath",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetConfPath" "', argument " "1"" of type '" "CZNC const *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  result = ((CZNC const *)arg1)->GetConfPath();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_GetConfPath(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CZNC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CZNC_GetConfPath__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CZNC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CZNC_GetConfPath__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CZNC_GetConfPath'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CZNC::GetConfPath(bool) const\n"
    "    CZNC::GetConfPath() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CZNC_GetUserPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_GetUserPath",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetUserPath" "', argument " "1"" of type '" "CZNC const *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  result = ((CZNC const *)arg1)->GetUserPath();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_GetModPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_GetModPath",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetModPath" "', argument " "1"" of type '" "CZNC const *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  result = ((CZNC const *)arg1)->GetModPath();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_GetPemLocation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_GetPemLocation",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetPemLocation" "', argument " "1"" of type '" "CZNC const *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  result = ((CZNC const *)arg1)->GetPemLocation();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_GetConfigFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_GetConfigFile",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetConfigFile" "', argument " "1"" of type '" "CZNC const *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  result = (CString *) &((CZNC const *)arg1)->GetConfigFile();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_WritePemFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_WritePemFile",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_WritePemFile" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  result = (bool)(arg1)->WritePemFile();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_GetBindHosts(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  VCString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_GetBindHosts",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetBindHosts" "', argument " "1"" of type '" "CZNC const *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  result = (VCString *) &((CZNC const *)arg1)->GetBindHosts();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_VCString, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_GetListeners(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  vector< CListener * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_GetListeners",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetListeners" "', argument " "1"" of type '" "CZNC const *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  result = (vector< CListener * > *) &((CZNC const *)arg1)->GetListeners();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_vectorT_CListener_p_std__allocatorT_CListener_p_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_TimeStarted(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  time_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_TimeStarted",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_TimeStarted" "', argument " "1"" of type '" "CZNC const *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  result = ((CZNC const *)arg1)->TimeStarted();
  resultobj = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_GetMaxBufferSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_GetMaxBufferSize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetMaxBufferSize" "', argument " "1"" of type '" "CZNC const *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  result = (unsigned int)((CZNC const *)arg1)->GetMaxBufferSize();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_GetAnonIPLimit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_GetAnonIPLimit",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetAnonIPLimit" "', argument " "1"" of type '" "CZNC const *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  result = (unsigned int)((CZNC const *)arg1)->GetAnonIPLimit();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_GetServerThrottle__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_GetServerThrottle",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetServerThrottle" "', argument " "1"" of type '" "CZNC const *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  result = (unsigned int)((CZNC const *)arg1)->GetServerThrottle();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_GetConnectDelay(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_GetConnectDelay",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetConnectDelay" "', argument " "1"" of type '" "CZNC const *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  result = (unsigned int)((CZNC const *)arg1)->GetConnectDelay();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_GetProtectWebSessions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_GetProtectWebSessions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetProtectWebSessions" "', argument " "1"" of type '" "CZNC const *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  result = (bool)((CZNC const *)arg1)->GetProtectWebSessions();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_Get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":CZNC_Get")) SWIG_fail;
  result = (CZNC *) &CZNC::Get();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CZNC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_FindUser(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CUser *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CZNC_FindUser",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_FindUser" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_FindUser" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_FindUser" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (CUser *)(arg1)->FindUser((CString const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CUser, 0 |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_FindModule__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CZNC_FindModule",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_FindModule" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_FindModule" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_FindModule" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CZNC_FindModule" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_FindModule" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = (CModule *)(arg1)->FindModule((CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModule, 0 |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_FindModule__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  CString *arg2 = 0 ;
  CUser *arg3 = (CUser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CZNC_FindModule",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_FindModule" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_FindModule" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_FindModule" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CZNC_FindModule" "', argument " "3"" of type '" "CUser *""'"); 
  }
  arg3 = reinterpret_cast< CUser * >(argp3);
  result = (CModule *)(arg1)->FindModule((CString const &)*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModule, 0 |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_FindModule(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CZNC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CZNC_FindModule__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CZNC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CZNC_FindModule__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CZNC_FindModule'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CZNC::FindModule(CString const &,CString const &)\n"
    "    CZNC::FindModule(CString const &,CUser *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CZNC_UpdateModule(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CZNC_UpdateModule",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_UpdateModule" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_UpdateModule" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_UpdateModule" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->UpdateModule((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_DeleteUser(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CZNC_DeleteUser",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_DeleteUser" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_DeleteUser" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_DeleteUser" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->DeleteUser((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_AddUser(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  CUser *arg2 = (CUser *) 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CZNC_AddUser",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_AddUser" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_AddUser" "', argument " "2"" of type '" "CUser *""'"); 
  }
  arg2 = reinterpret_cast< CUser * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sErrorRet");
    }
  }
  result = (bool)(arg1)->AddUser(arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_GetUserMap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  map< CString,CUser * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_GetUserMap",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetUserMap" "', argument " "1"" of type '" "CZNC const *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  result = (map< CString,CUser * > *) &((CZNC const *)arg1)->GetUserMap();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mapT_CString_CUser_p_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CUser_p_t_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_FindListener(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  unsigned short arg2 ;
  CString *arg3 = 0 ;
  EAddrType arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CListener *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CZNC_FindListener",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_FindListener" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CZNC_FindListener" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CZNC_FindListener" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_FindListener" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CZNC_FindListener" "', argument " "4"" of type '" "EAddrType""'");
  } 
  arg4 = static_cast< EAddrType >(val4);
  result = (CListener *)(arg1)->FindListener(arg2,(CString const &)*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CListener, 0 |  0 );
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_AddListener__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  CListener *arg2 = (CListener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CZNC_AddListener",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_AddListener" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CListener, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_AddListener" "', argument " "2"" of type '" "CListener *""'"); 
  }
  arg2 = reinterpret_cast< CListener * >(argp2);
  result = (bool)(arg1)->AddListener(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_AddListener__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  unsigned int arg2 ;
  CString *arg3 = 0 ;
  bool arg4 ;
  EAddrType arg5 ;
  CListener::EAcceptType arg6 ;
  CString *arg7 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  bool val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:CZNC_AddListener",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_AddListener" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CZNC_AddListener" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CZNC_AddListener" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_AddListener" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CZNC_AddListener" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CZNC_AddListener" "', argument " "5"" of type '" "EAddrType""'");
  } 
  arg5 = static_cast< EAddrType >(val5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CZNC_AddListener" "', argument " "6"" of type '" "CListener::EAcceptType""'");
  } 
  arg6 = static_cast< CListener::EAcceptType >(val6);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj6, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg7 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 7 sError");
    }
  }
  result = (bool)(arg1)->AddListener(arg2,(CString const &)*arg3,arg4,arg5,arg6,*arg7);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_AddListener(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[8];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 7) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CZNC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CListener, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CZNC_AddListener__SWIG_0(self, args);
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CZNC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_int(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_CString, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_CZNC_AddListener__SWIG_1(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CZNC_AddListener'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CZNC::AddListener(CListener *)\n"
    "    CZNC::AddListener(unsigned int,CString const &,bool,EAddrType,CListener::EAcceptType,CString &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CZNC_DelListener(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  CListener *arg2 = (CListener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CZNC_DelListener",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_DelListener" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CListener, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_DelListener" "', argument " "2"" of type '" "CListener *""'"); 
  }
  arg2 = reinterpret_cast< CListener * >(argp2);
  result = (bool)(arg1)->DelListener(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_SetMotd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CZNC_SetMotd",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_SetMotd" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_SetMotd" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_SetMotd" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetMotd((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_AddMotd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CZNC_AddMotd",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_AddMotd" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_AddMotd" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_AddMotd" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->AddMotd((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_ClearMotd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_ClearMotd",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_ClearMotd" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  (arg1)->ClearMotd();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_GetMotd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  VCString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_GetMotd",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetMotd" "', argument " "1"" of type '" "CZNC const *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  result = (VCString *) &((CZNC const *)arg1)->GetMotd();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_VCString, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_AddServerThrottle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  CString arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CZNC_AddServerThrottle",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_AddServerThrottle" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  {
    CString *ptr = (CString *)0;
    int res = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "CZNC_AddServerThrottle" "', argument " "2"" of type '" "CString""'");
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) free((char*)ptr);
  }
  (arg1)->AddServerThrottle(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_GetServerThrottle__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  CString arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CZNC_GetServerThrottle",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetServerThrottle" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  {
    CString *ptr = (CString *)0;
    int res = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "CZNC_GetServerThrottle" "', argument " "2"" of type '" "CString""'");
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) free((char*)ptr);
  }
  result = (bool)(arg1)->GetServerThrottle(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_GetServerThrottle(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CZNC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CZNC_GetServerThrottle__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CZNC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CZNC_GetServerThrottle__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CZNC_GetServerThrottle'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CZNC::GetServerThrottle() const\n"
    "    CZNC::GetServerThrottle(CString)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CZNC_AddNetworkToQueue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  CIRCNetwork *arg2 = (CIRCNetwork *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CZNC_AddNetworkToQueue",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_AddNetworkToQueue" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_AddNetworkToQueue" "', argument " "2"" of type '" "CIRCNetwork *""'"); 
  }
  arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
  (arg1)->AddNetworkToQueue(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_GetConnectionQueue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  list< CIRCNetwork * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_GetConnectionQueue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetConnectionQueue" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  result = (list< CIRCNetwork * > *) &(arg1)->GetConnectionQueue();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_listT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_EnableConnectQueue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_EnableConnectQueue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_EnableConnectQueue" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  (arg1)->EnableConnectQueue();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_DisableConnectQueue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_DisableConnectQueue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_DisableConnectQueue" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  (arg1)->DisableConnectQueue();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_PauseConnectQueue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_PauseConnectQueue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_PauseConnectQueue" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  (arg1)->PauseConnectQueue();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_ResumeConnectQueue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_ResumeConnectQueue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_ResumeConnectQueue" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  (arg1)->ResumeConnectQueue();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_LeakConnectQueueTimer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CZNC *arg1 = (CZNC *) 0 ;
  CConnectQueueTimer *arg2 = (CConnectQueueTimer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CZNC_LeakConnectQueueTimer",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_LeakConnectQueueTimer" "', argument " "1"" of type '" "CZNC *""'"); 
  }
  arg1 = reinterpret_cast< CZNC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CConnectQueueTimer, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_LeakConnectQueueTimer" "', argument " "2"" of type '" "CConnectQueueTimer *""'"); 
  }
  arg2 = reinterpret_cast< CConnectQueueTimer * >(argp2);
  (arg1)->LeakConnectQueueTimer(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CZNC_DumpConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CConfig *arg1 = (CConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CZNC_DumpConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_DumpConfig" "', argument " "1"" of type '" "CConfig const *""'"); 
  }
  arg1 = reinterpret_cast< CConfig * >(argp1);
  CZNC::DumpConfig((CConfig const *)arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CZNC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CZNC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CServer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  unsigned short arg2 ;
  CString *arg3 = 0 ;
  bool arg4 ;
  int res1 = SWIG_OLDOBJ ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CServer *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_CServer",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CServer" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CServer" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CServer" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CServer" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CServer" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_CServer" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (CServer *)new CServer((CString const &)*arg1,arg2,(CString const &)*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CServer, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CServer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  unsigned short arg2 ;
  CString *arg3 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CServer *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_CServer",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CServer" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CServer" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CServer" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CServer" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CServer" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = (CServer *)new CServer((CString const &)*arg1,arg2,(CString const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CServer, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CServer__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  unsigned short arg2 ;
  int res1 = SWIG_OLDOBJ ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CServer *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_CServer",&obj0,&obj1)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CServer" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CServer" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CServer" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  result = (CServer *)new CServer((CString const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CServer, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CServer__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  CServer *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_CServer",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CServer" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CServer" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  result = (CServer *)new CServer((CString const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CServer, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CServer(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_CServer__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_CServer__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_CServer__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_CServer__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_CServer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CServer::CServer(CString const &,unsigned short,CString const &,bool)\n"
    "    CServer::CServer(CString const &,unsigned short,CString const &)\n"
    "    CServer::CServer(CString const &,unsigned short)\n"
    "    CServer::CServer(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_CServer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CServer *arg1 = (CServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CServer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CServer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CServer" "', argument " "1"" of type '" "CServer *""'"); 
  }
  arg1 = reinterpret_cast< CServer * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CServer_GetName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CServer *arg1 = (CServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CServer_GetName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CServer_GetName" "', argument " "1"" of type '" "CServer const *""'"); 
  }
  arg1 = reinterpret_cast< CServer * >(argp1);
  result = (CString *) &((CServer const *)arg1)->GetName();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CServer_GetPort(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CServer *arg1 = (CServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned short result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CServer_GetPort",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CServer_GetPort" "', argument " "1"" of type '" "CServer const *""'"); 
  }
  arg1 = reinterpret_cast< CServer * >(argp1);
  result = (unsigned short)((CServer const *)arg1)->GetPort();
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CServer_GetPass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CServer *arg1 = (CServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CServer_GetPass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CServer_GetPass" "', argument " "1"" of type '" "CServer const *""'"); 
  }
  arg1 = reinterpret_cast< CServer * >(argp1);
  result = (CString *) &((CServer const *)arg1)->GetPass();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CServer_IsSSL(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CServer *arg1 = (CServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CServer_IsSSL",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CServer_IsSSL" "', argument " "1"" of type '" "CServer const *""'"); 
  }
  arg1 = reinterpret_cast< CServer * >(argp1);
  result = (bool)((CServer const *)arg1)->IsSSL();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CServer_GetString__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CServer *arg1 = (CServer *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CServer_GetString",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CServer_GetString" "', argument " "1"" of type '" "CServer const *""'"); 
  }
  arg1 = reinterpret_cast< CServer * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CServer_GetString" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = ((CServer const *)arg1)->GetString(arg2);
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CServer_GetString__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CServer *arg1 = (CServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CServer_GetString",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CServer_GetString" "', argument " "1"" of type '" "CServer const *""'"); 
  }
  arg1 = reinterpret_cast< CServer * >(argp1);
  result = ((CServer const *)arg1)->GetString();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CServer_GetString(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CServer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_CServer_GetString__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CServer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CServer_GetString__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CServer_GetString'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CServer::GetString(bool) const\n"
    "    CServer::GetString() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CServer_IsValidHostName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CServer_IsValidHostName",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CServer_IsValidHostName" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CServer_IsValidHostName" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  result = (bool)CServer::IsValidHostName((CString const &)*arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *CServer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CServer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_CDebug_SetStdoutIsTTY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  bool val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CDebug_SetStdoutIsTTY",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CDebug_SetStdoutIsTTY" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  CDebug::SetStdoutIsTTY(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CDebug_StdoutIsTTY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)":CDebug_StdoutIsTTY")) SWIG_fail;
  result = (bool)CDebug::StdoutIsTTY();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CDebug_SetDebug(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  bool val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CDebug_SetDebug",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CDebug_SetDebug" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  CDebug::SetDebug(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CDebug_Debug(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)":CDebug_Debug")) SWIG_fail;
  result = (bool)CDebug::Debug();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CDebug_GetTimestamp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)":CDebug_GetTimestamp")) SWIG_fail;
  result = CDebug::GetTimestamp();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CDebug(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CDebug *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CDebug")) SWIG_fail;
  result = (CDebug *)new CDebug();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CDebug, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CDebug(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CDebug *arg1 = (CDebug *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CDebug",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CDebug, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CDebug" "', argument " "1"" of type '" "CDebug *""'"); 
  }
  arg1 = reinterpret_cast< CDebug * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CDebug_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CDebug, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CExecSock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CExecSock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CExecSock")) SWIG_fail;
  result = (CExecSock *)new CExecSock();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CExecSock, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CExecSock_Execute(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CExecSock *arg1 = (CExecSock *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CExecSock_Execute",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CExecSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CExecSock_Execute" "', argument " "1"" of type '" "CExecSock *""'"); 
  }
  arg1 = reinterpret_cast< CExecSock * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CExecSock_Execute" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CExecSock_Execute" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (int)(arg1)->Execute((CString const &)*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CExecSock_Kill(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CExecSock *arg1 = (CExecSock *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CExecSock_Kill",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CExecSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CExecSock_Kill" "', argument " "1"" of type '" "CExecSock *""'"); 
  }
  arg1 = reinterpret_cast< CExecSock * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CExecSock_Kill" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Kill(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CExecSock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CExecSock *arg1 = (CExecSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CExecSock",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CExecSock, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CExecSock" "', argument " "1"" of type '" "CExecSock *""'"); 
  }
  arg1 = reinterpret_cast< CExecSock * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CExecSock_popen2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CExecSock *arg1 = (CExecSock *) 0 ;
  int *arg2 = 0 ;
  int *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CExecSock_popen2",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CExecSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CExecSock_popen2" "', argument " "1"" of type '" "CExecSock *""'"); 
  }
  arg1 = reinterpret_cast< CExecSock * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CExecSock_popen2" "', argument " "2"" of type '" "int &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CExecSock_popen2" "', argument " "2"" of type '" "int &""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CExecSock_popen2" "', argument " "3"" of type '" "int &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CExecSock_popen2" "', argument " "3"" of type '" "int &""'"); 
  }
  arg3 = reinterpret_cast< int * >(argp3);
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CExecSock_popen2" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CExecSock_popen2" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  result = (int)(arg1)->popen2(*arg2,*arg3,(CString const &)*arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CExecSock_close2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CExecSock *arg1 = (CExecSock *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CExecSock_close2",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CExecSock, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CExecSock_close2" "', argument " "1"" of type '" "CExecSock *""'"); 
  }
  arg1 = reinterpret_cast< CExecSock * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CExecSock_close2" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CExecSock_close2" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CExecSock_close2" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  (arg1)->close2(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CExecSock_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CExecSock, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CBufLine__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  CString *arg2 = 0 ;
  time_t arg3 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CBufLine *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_CBufLine",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CBufLine" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CBufLine" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CBufLine" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CBufLine" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_time_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CBufLine" "', argument " "3"" of type '" "time_t""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CBufLine" "', argument " "3"" of type '" "time_t""'");
    } else {
      time_t * temp = reinterpret_cast< time_t * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = (CBufLine *)new CBufLine((CString const &)*arg1,(CString const &)*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CBufLine, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CBufLine__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  CString *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CBufLine *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_CBufLine",&obj0,&obj1)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CBufLine" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CBufLine" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CBufLine" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CBufLine" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (CBufLine *)new CBufLine((CString const &)*arg1,(CString const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CBufLine, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CBufLine__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  CBufLine *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_CBufLine",&obj0)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CBufLine" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CBufLine" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  result = (CBufLine *)new CBufLine((CString const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CBufLine, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CBufLine(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_CBufLine__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_CBufLine__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_time_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_CBufLine__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_CBufLine'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CBufLine::CBufLine(CString const &,CString const &,time_t)\n"
    "    CBufLine::CBufLine(CString const &,CString const &)\n"
    "    CBufLine::CBufLine(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_CBufLine(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CBufLine *arg1 = (CBufLine *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CBufLine",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CBufLine, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CBufLine" "', argument " "1"" of type '" "CBufLine *""'"); 
  }
  arg1 = reinterpret_cast< CBufLine * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CBufLine_GetLine(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CBufLine *arg1 = (CBufLine *) 0 ;
  CClient *arg2 = 0 ;
  MCString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CBufLine_GetLine",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CBufLine, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBufLine_GetLine" "', argument " "1"" of type '" "CBufLine const *""'"); 
  }
  arg1 = reinterpret_cast< CBufLine * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CClient,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CBufLine_GetLine" "', argument " "2"" of type '" "CClient const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBufLine_GetLine" "', argument " "2"" of type '" "CClient const &""'"); 
  }
  arg2 = reinterpret_cast< CClient * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_MCString,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CBufLine_GetLine" "', argument " "3"" of type '" "MCString const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBufLine_GetLine" "', argument " "3"" of type '" "MCString const &""'"); 
  }
  arg3 = reinterpret_cast< MCString * >(argp3);
  result = ((CBufLine const *)arg1)->GetLine((CClient const &)*arg2,(MCString const &)*arg3);
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CBufLine_UpdateTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CBufLine *arg1 = (CBufLine *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CBufLine_UpdateTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CBufLine, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBufLine_UpdateTime" "', argument " "1"" of type '" "CBufLine *""'"); 
  }
  arg1 = reinterpret_cast< CBufLine * >(argp1);
  (arg1)->UpdateTime();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CBufLine_SetFormat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CBufLine *arg1 = (CBufLine *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CBufLine_SetFormat",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CBufLine, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBufLine_SetFormat" "', argument " "1"" of type '" "CBufLine *""'"); 
  }
  arg1 = reinterpret_cast< CBufLine * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CBufLine_SetFormat" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBufLine_SetFormat" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetFormat((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CBufLine_SetText(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CBufLine *arg1 = (CBufLine *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CBufLine_SetText",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CBufLine, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBufLine_SetText" "', argument " "1"" of type '" "CBufLine *""'"); 
  }
  arg1 = reinterpret_cast< CBufLine * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CBufLine_SetText" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBufLine_SetText" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->SetText((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CBufLine_SetTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CBufLine *arg1 = (CBufLine *) 0 ;
  time_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CBufLine_SetTime",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CBufLine, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBufLine_SetTime" "', argument " "1"" of type '" "CBufLine *""'"); 
  }
  arg1 = reinterpret_cast< CBufLine * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_time_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CBufLine_SetTime" "', argument " "2"" of type '" "time_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBufLine_SetTime" "', argument " "2"" of type '" "time_t""'");
    } else {
      time_t * temp = reinterpret_cast< time_t * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SetTime(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CBufLine_GetFormat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CBufLine *arg1 = (CBufLine *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CBufLine_GetFormat",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CBufLine, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBufLine_GetFormat" "', argument " "1"" of type '" "CBufLine const *""'"); 
  }
  arg1 = reinterpret_cast< CBufLine * >(argp1);
  result = (CString *) &((CBufLine const *)arg1)->GetFormat();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CBufLine_GetText(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CBufLine *arg1 = (CBufLine *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CBufLine_GetText",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CBufLine, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBufLine_GetText" "', argument " "1"" of type '" "CBufLine const *""'"); 
  }
  arg1 = reinterpret_cast< CBufLine * >(argp1);
  result = (CString *) &((CBufLine const *)arg1)->GetText();
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CBufLine_GetTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CBufLine *arg1 = (CBufLine *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  time_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CBufLine_GetTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CBufLine, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBufLine_GetTime" "', argument " "1"" of type '" "CBufLine const *""'"); 
  }
  arg1 = reinterpret_cast< CBufLine * >(argp1);
  result = ((CBufLine const *)arg1)->GetTime();
  resultobj = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CBufLine_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CBufLine, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CBuffer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  CBuffer *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_CBuffer",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CBuffer" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (CBuffer *)new CBuffer(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CBuffer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CBuffer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CBuffer *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CBuffer")) SWIG_fail;
  result = (CBuffer *)new CBuffer();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CBuffer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CBuffer(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_CBuffer__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_CBuffer__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_CBuffer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CBuffer::CBuffer(unsigned int)\n"
    "    CBuffer::CBuffer()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_CBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CBuffer *arg1 = (CBuffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CBuffer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CBuffer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CBuffer" "', argument " "1"" of type '" "CBuffer *""'"); 
  }
  arg1 = reinterpret_cast< CBuffer * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CBuffer_AddLine__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CBuffer *arg1 = (CBuffer *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  time_t arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CBuffer_AddLine",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBuffer_AddLine" "', argument " "1"" of type '" "CBuffer *""'"); 
  }
  arg1 = reinterpret_cast< CBuffer * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CBuffer_AddLine" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBuffer_AddLine" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CBuffer_AddLine" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBuffer_AddLine" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_time_t,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CBuffer_AddLine" "', argument " "4"" of type '" "time_t""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBuffer_AddLine" "', argument " "4"" of type '" "time_t""'");
    } else {
      time_t * temp = reinterpret_cast< time_t * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  result = (int)(arg1)->AddLine((CString const &)*arg2,(CString const &)*arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CBuffer_AddLine__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CBuffer *arg1 = (CBuffer *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CBuffer_AddLine",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBuffer_AddLine" "', argument " "1"" of type '" "CBuffer *""'"); 
  }
  arg1 = reinterpret_cast< CBuffer * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CBuffer_AddLine" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBuffer_AddLine" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CBuffer_AddLine" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBuffer_AddLine" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = (int)(arg1)->AddLine((CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CBuffer_AddLine__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CBuffer *arg1 = (CBuffer *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CBuffer_AddLine",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBuffer_AddLine" "', argument " "1"" of type '" "CBuffer *""'"); 
  }
  arg1 = reinterpret_cast< CBuffer * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CBuffer_AddLine" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBuffer_AddLine" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (int)(arg1)->AddLine((CString const &)*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CBuffer_AddLine(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CBuffer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CBuffer_AddLine__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CBuffer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CBuffer_AddLine__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CBuffer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_time_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CBuffer_AddLine__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CBuffer_AddLine'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CBuffer::AddLine(CString const &,CString const &,time_t)\n"
    "    CBuffer::AddLine(CString const &,CString const &)\n"
    "    CBuffer::AddLine(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CBuffer_UpdateLine__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CBuffer *arg1 = (CBuffer *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CBuffer_UpdateLine",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBuffer_UpdateLine" "', argument " "1"" of type '" "CBuffer *""'"); 
  }
  arg1 = reinterpret_cast< CBuffer * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CBuffer_UpdateLine" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBuffer_UpdateLine" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CBuffer_UpdateLine" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBuffer_UpdateLine" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CBuffer_UpdateLine" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBuffer_UpdateLine" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  result = (int)(arg1)->UpdateLine((CString const &)*arg2,(CString const &)*arg3,(CString const &)*arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CBuffer_UpdateLine__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CBuffer *arg1 = (CBuffer *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CBuffer_UpdateLine",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBuffer_UpdateLine" "', argument " "1"" of type '" "CBuffer *""'"); 
  }
  arg1 = reinterpret_cast< CBuffer * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CBuffer_UpdateLine" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBuffer_UpdateLine" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CBuffer_UpdateLine" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBuffer_UpdateLine" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = (int)(arg1)->UpdateLine((CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CBuffer_UpdateLine(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CBuffer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CBuffer_UpdateLine__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CBuffer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (CString**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CBuffer_UpdateLine__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CBuffer_UpdateLine'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CBuffer::UpdateLine(CString const &,CString const &,CString const &)\n"
    "    CBuffer::UpdateLine(CString const &,CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CBuffer_UpdateExactLine__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CBuffer *arg1 = (CBuffer *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CBuffer_UpdateExactLine",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBuffer_UpdateExactLine" "', argument " "1"" of type '" "CBuffer *""'"); 
  }
  arg1 = reinterpret_cast< CBuffer * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CBuffer_UpdateExactLine" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBuffer_UpdateExactLine" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CBuffer_UpdateExactLine" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBuffer_UpdateExactLine" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = (int)(arg1)->UpdateExactLine((CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CBuffer_UpdateExactLine__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CBuffer *arg1 = (CBuffer *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CBuffer_UpdateExactLine",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBuffer_UpdateExactLine" "', argument " "1"" of type '" "CBuffer *""'"); 
  }
  arg1 = reinterpret_cast< CBuffer * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CBuffer_UpdateExactLine" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBuffer_UpdateExactLine" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (int)(arg1)->UpdateExactLine((CString const &)*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CBuffer_UpdateExactLine(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CBuffer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CBuffer_UpdateExactLine__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CBuffer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (CString**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CBuffer_UpdateExactLine__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CBuffer_UpdateExactLine'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CBuffer::UpdateExactLine(CString const &,CString const &)\n"
    "    CBuffer::UpdateExactLine(CString const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CBuffer_GetBufLine(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CBuffer *arg1 = (CBuffer *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CBufLine *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CBuffer_GetBufLine",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBuffer_GetBufLine" "', argument " "1"" of type '" "CBuffer const *""'"); 
  }
  arg1 = reinterpret_cast< CBuffer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CBuffer_GetBufLine" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (CBufLine *) &((CBuffer const *)arg1)->GetBufLine(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CBufLine, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CBuffer_GetLine__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CBuffer *arg1 = (CBuffer *) 0 ;
  unsigned int arg2 ;
  CClient *arg3 = 0 ;
  MCString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CBuffer_GetLine",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBuffer_GetLine" "', argument " "1"" of type '" "CBuffer const *""'"); 
  }
  arg1 = reinterpret_cast< CBuffer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CBuffer_GetLine" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CClient,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CBuffer_GetLine" "', argument " "3"" of type '" "CClient const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBuffer_GetLine" "', argument " "3"" of type '" "CClient const &""'"); 
  }
  arg3 = reinterpret_cast< CClient * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_MCString,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CBuffer_GetLine" "', argument " "4"" of type '" "MCString const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBuffer_GetLine" "', argument " "4"" of type '" "MCString const &""'"); 
  }
  arg4 = reinterpret_cast< MCString * >(argp4);
  result = ((CBuffer const *)arg1)->GetLine(arg2,(CClient const &)*arg3,(MCString const &)*arg4);
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CBuffer_GetLine__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CBuffer *arg1 = (CBuffer *) 0 ;
  unsigned int arg2 ;
  CClient *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CBuffer_GetLine",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBuffer_GetLine" "', argument " "1"" of type '" "CBuffer const *""'"); 
  }
  arg1 = reinterpret_cast< CBuffer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CBuffer_GetLine" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CClient,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CBuffer_GetLine" "', argument " "3"" of type '" "CClient const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBuffer_GetLine" "', argument " "3"" of type '" "CClient const &""'"); 
  }
  arg3 = reinterpret_cast< CClient * >(argp3);
  result = ((CBuffer const *)arg1)->GetLine(arg2,(CClient const &)*arg3);
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CBuffer_GetLine(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CBuffer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CBuffer_GetLine__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CBuffer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_MCString, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CBuffer_GetLine__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CBuffer_GetLine'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CBuffer::GetLine(unsigned int,CClient const &,MCString const &) const\n"
    "    CBuffer::GetLine(unsigned int,CClient const &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CBuffer_Size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CBuffer *arg1 = (CBuffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CBuffer_Size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBuffer_Size" "', argument " "1"" of type '" "CBuffer const *""'"); 
  }
  arg1 = reinterpret_cast< CBuffer * >(argp1);
  result = (unsigned int)((CBuffer const *)arg1)->Size();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CBuffer_IsEmpty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CBuffer *arg1 = (CBuffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CBuffer_IsEmpty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBuffer_IsEmpty" "', argument " "1"" of type '" "CBuffer const *""'"); 
  }
  arg1 = reinterpret_cast< CBuffer * >(argp1);
  result = (bool)((CBuffer const *)arg1)->IsEmpty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CBuffer_Clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CBuffer *arg1 = (CBuffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CBuffer_Clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBuffer_Clear" "', argument " "1"" of type '" "CBuffer *""'"); 
  }
  arg1 = reinterpret_cast< CBuffer * >(argp1);
  (arg1)->Clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CBuffer_SetLineCount__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CBuffer *arg1 = (CBuffer *) 0 ;
  unsigned int arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CBuffer_SetLineCount",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBuffer_SetLineCount" "', argument " "1"" of type '" "CBuffer *""'"); 
  }
  arg1 = reinterpret_cast< CBuffer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CBuffer_SetLineCount" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CBuffer_SetLineCount" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (bool)(arg1)->SetLineCount(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CBuffer_SetLineCount__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CBuffer *arg1 = (CBuffer *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CBuffer_SetLineCount",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBuffer_SetLineCount" "', argument " "1"" of type '" "CBuffer *""'"); 
  }
  arg1 = reinterpret_cast< CBuffer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CBuffer_SetLineCount" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (bool)(arg1)->SetLineCount(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CBuffer_SetLineCount(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CBuffer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CBuffer_SetLineCount__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CBuffer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CBuffer_SetLineCount__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CBuffer_SetLineCount'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CBuffer::SetLineCount(unsigned int,bool)\n"
    "    CBuffer::SetLineCount(unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CBuffer_GetLineCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CBuffer *arg1 = (CBuffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CBuffer_GetLineCount",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBuffer_GetLineCount" "', argument " "1"" of type '" "CBuffer const *""'"); 
  }
  arg1 = reinterpret_cast< CBuffer * >(argp1);
  result = (unsigned int)((CBuffer const *)arg1)->GetLineCount();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CBuffer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CBuffer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_String_s_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  String *arg1 = (String *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:String_s_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_String, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "String_s_set" "', argument " "1"" of type '" "String *""'"); 
  }
  arg1 = reinterpret_cast< String * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "String_s_set" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "String_s_set" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->s = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_String_s_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  String *arg1 = (String *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:String_s_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_String, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "String_s_get" "', argument " "1"" of type '" "String *""'"); 
  }
  arg1 = reinterpret_cast< String * >(argp1);
  result = (CString *) & ((arg1)->s);
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_String___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  String *arg1 = (String *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:String___str__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_String, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "String___str__" "', argument " "1"" of type '" "String *""'"); 
  }
  arg1 = reinterpret_cast< String * >(argp1);
  result = String___str__(arg1);
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_String(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  String *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_String")) SWIG_fail;
  result = (String *)new String();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_String, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_String(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  String *arg1 = (String *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_String",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_String, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_String" "', argument " "1"" of type '" "String *""'"); 
  }
  arg1 = reinterpret_cast< String * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *String_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_String, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CPyModule(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CIRCNetwork *arg2 = (CIRCNetwork *) 0 ;
  CString *arg3 = 0 ;
  CString *arg4 = 0 ;
  PyObject *arg5 = (PyObject *) 0 ;
  CModule *arg6 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  CPyModule *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:new_CPyModule",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CPyModule" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CPyModule" "', argument " "2"" of type '" "CIRCNetwork *""'"); 
  }
  arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CPyModule" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CPyModule" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CPyModule" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CPyModule" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  arg5 = obj4;
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_CPyModule" "', argument " "6"" of type '" "CModule *""'"); 
  }
  arg6 = reinterpret_cast< CModule * >(argp6);
  result = (CPyModule *)new CPyModule(arg1,arg2,(CString const &)*arg3,(CString const &)*arg4,arg5,arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CPyModule, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_GetPyObj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CPyModule_GetPyObj",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_GetPyObj" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  result = (PyObject *)(arg1)->GetPyObj();
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_GetNewPyObj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CPyModule_GetNewPyObj",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_GetNewPyObj" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  result = (PyObject *)(arg1)->GetNewPyObj();
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_DeletePyModule(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CPyModule_DeletePyModule",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_DeletePyModule" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  (arg1)->DeletePyModule();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_GetPyExceptionStr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CPyModule_GetPyExceptionStr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_GetPyExceptionStr" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  result = (arg1)->GetPyExceptionStr();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_GetModPython(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CModPython *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CPyModule_GetModPython",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_GetModPython" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  result = (CModPython *)(arg1)->GetModPython();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModPython, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnBoot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CPyModule_OnBoot",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnBoot" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  result = (bool)(arg1)->OnBoot();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_WebRequiresLogin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CPyModule_WebRequiresLogin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_WebRequiresLogin" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  result = (bool)(arg1)->WebRequiresLogin();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_WebRequiresAdmin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CPyModule_WebRequiresAdmin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_WebRequiresAdmin" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  result = (bool)(arg1)->WebRequiresAdmin();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_GetWebMenuTitle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CPyModule_GetWebMenuTitle",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_GetWebMenuTitle" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  result = (arg1)->GetWebMenuTitle();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnWebPreRequest(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CWebSock *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CPyModule_OnWebPreRequest",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnWebPreRequest" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CWebSock,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnWebPreRequest" "', argument " "2"" of type '" "CWebSock &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnWebPreRequest" "', argument " "2"" of type '" "CWebSock &""'"); 
  }
  arg2 = reinterpret_cast< CWebSock * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPyModule_OnWebPreRequest" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnWebPreRequest" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  result = (bool)(arg1)->OnWebPreRequest(*arg2,(CString const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnWebRequest(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CWebSock *arg2 = 0 ;
  CString *arg3 = 0 ;
  CTemplate *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CPyModule_OnWebRequest",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnWebRequest" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CWebSock,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnWebRequest" "', argument " "2"" of type '" "CWebSock &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnWebRequest" "', argument " "2"" of type '" "CWebSock &""'"); 
  }
  arg2 = reinterpret_cast< CWebSock * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPyModule_OnWebRequest" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnWebRequest" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_CTemplate,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CPyModule_OnWebRequest" "', argument " "4"" of type '" "CTemplate &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnWebRequest" "', argument " "4"" of type '" "CTemplate &""'"); 
  }
  arg4 = reinterpret_cast< CTemplate * >(argp4);
  result = (bool)(arg1)->OnWebRequest(*arg2,(CString const &)*arg3,*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_GetSubPages(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  VWebSubPages *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CPyModule_GetSubPages",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_GetSubPages" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  result = (VWebSubPages *) &(arg1)->GetSubPages();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnPreRehash(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CPyModule_OnPreRehash",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnPreRehash" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  (arg1)->OnPreRehash();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnPostRehash(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CPyModule_OnPostRehash",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnPostRehash" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  (arg1)->OnPostRehash();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnIRCDisconnected(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CPyModule_OnIRCDisconnected",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnIRCDisconnected" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  (arg1)->OnIRCDisconnected();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnIRCConnected(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CPyModule_OnIRCConnected",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnIRCConnected" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  (arg1)->OnIRCConnected();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnIRCConnecting(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CIRCSock *arg2 = (CIRCSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CPyModule_OnIRCConnecting",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnIRCConnecting" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnIRCConnecting" "', argument " "2"" of type '" "CIRCSock *""'"); 
  }
  arg2 = reinterpret_cast< CIRCSock * >(argp2);
  result = (CModule::EModRet)(arg1)->OnIRCConnecting(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnIRCConnectionError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CIRCSock *arg2 = (CIRCSock *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CPyModule_OnIRCConnectionError",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnIRCConnectionError" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CIRCSock, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnIRCConnectionError" "', argument " "2"" of type '" "CIRCSock *""'"); 
  }
  arg2 = reinterpret_cast< CIRCSock * >(argp2);
  (arg1)->OnIRCConnectionError(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnIRCRegistration(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  CString *arg4 = 0 ;
  CString *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CPyModule_OnIRCRegistration",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnIRCRegistration" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sPass");
    }
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sNick");
    }
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj3, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg4 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 4 sIdent");
    }
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj4, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg5 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 5 sRealName");
    }
  }
  result = (CModule::EModRet)(arg1)->OnIRCRegistration(*arg2,*arg3,*arg4,*arg5);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnBroadcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CPyModule_OnBroadcast",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnBroadcast" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sMessage");
    }
  }
  result = (CModule::EModRet)(arg1)->OnBroadcast(*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnChanPermission(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CNick *arg2 = 0 ;
  CNick *arg3 = 0 ;
  CChan *arg4 = 0 ;
  unsigned char arg5 ;
  bool arg6 ;
  bool arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  unsigned char val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:CPyModule_OnChanPermission",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnChanPermission" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnChanPermission" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnChanPermission" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPyModule_OnChanPermission" "', argument " "3"" of type '" "CNick const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnChanPermission" "', argument " "3"" of type '" "CNick const &""'"); 
  }
  arg3 = reinterpret_cast< CNick * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CPyModule_OnChanPermission" "', argument " "4"" of type '" "CChan &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnChanPermission" "', argument " "4"" of type '" "CChan &""'"); 
  }
  arg4 = reinterpret_cast< CChan * >(argp4);
  ecode5 = SWIG_AsVal_unsigned_SS_char(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CPyModule_OnChanPermission" "', argument " "5"" of type '" "unsigned char""'");
  } 
  arg5 = static_cast< unsigned char >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CPyModule_OnChanPermission" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  ecode7 = SWIG_AsVal_bool(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "CPyModule_OnChanPermission" "', argument " "7"" of type '" "bool""'");
  } 
  arg7 = static_cast< bool >(val7);
  (arg1)->OnChanPermission((CNick const &)*arg2,(CNick const &)*arg3,*arg4,arg5,arg6,arg7);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnOp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CNick *arg2 = 0 ;
  CNick *arg3 = 0 ;
  CChan *arg4 = 0 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CPyModule_OnOp",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnOp" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnOp" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnOp" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPyModule_OnOp" "', argument " "3"" of type '" "CNick const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnOp" "', argument " "3"" of type '" "CNick const &""'"); 
  }
  arg3 = reinterpret_cast< CNick * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CPyModule_OnOp" "', argument " "4"" of type '" "CChan &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnOp" "', argument " "4"" of type '" "CChan &""'"); 
  }
  arg4 = reinterpret_cast< CChan * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CPyModule_OnOp" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  (arg1)->OnOp((CNick const &)*arg2,(CNick const &)*arg3,*arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnDeop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CNick *arg2 = 0 ;
  CNick *arg3 = 0 ;
  CChan *arg4 = 0 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CPyModule_OnDeop",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnDeop" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnDeop" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnDeop" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPyModule_OnDeop" "', argument " "3"" of type '" "CNick const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnDeop" "', argument " "3"" of type '" "CNick const &""'"); 
  }
  arg3 = reinterpret_cast< CNick * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CPyModule_OnDeop" "', argument " "4"" of type '" "CChan &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnDeop" "', argument " "4"" of type '" "CChan &""'"); 
  }
  arg4 = reinterpret_cast< CChan * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CPyModule_OnDeop" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  (arg1)->OnDeop((CNick const &)*arg2,(CNick const &)*arg3,*arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnVoice(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CNick *arg2 = 0 ;
  CNick *arg3 = 0 ;
  CChan *arg4 = 0 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CPyModule_OnVoice",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnVoice" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnVoice" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnVoice" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPyModule_OnVoice" "', argument " "3"" of type '" "CNick const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnVoice" "', argument " "3"" of type '" "CNick const &""'"); 
  }
  arg3 = reinterpret_cast< CNick * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CPyModule_OnVoice" "', argument " "4"" of type '" "CChan &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnVoice" "', argument " "4"" of type '" "CChan &""'"); 
  }
  arg4 = reinterpret_cast< CChan * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CPyModule_OnVoice" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  (arg1)->OnVoice((CNick const &)*arg2,(CNick const &)*arg3,*arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnDevoice(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CNick *arg2 = 0 ;
  CNick *arg3 = 0 ;
  CChan *arg4 = 0 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CPyModule_OnDevoice",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnDevoice" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnDevoice" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnDevoice" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPyModule_OnDevoice" "', argument " "3"" of type '" "CNick const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnDevoice" "', argument " "3"" of type '" "CNick const &""'"); 
  }
  arg3 = reinterpret_cast< CNick * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CPyModule_OnDevoice" "', argument " "4"" of type '" "CChan &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnDevoice" "', argument " "4"" of type '" "CChan &""'"); 
  }
  arg4 = reinterpret_cast< CChan * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CPyModule_OnDevoice" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  (arg1)->OnDevoice((CNick const &)*arg2,(CNick const &)*arg3,*arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnMode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CNick *arg2 = 0 ;
  CChan *arg3 = 0 ;
  char arg4 ;
  CString *arg5 = 0 ;
  bool arg6 ;
  bool arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  char val4 ;
  int ecode4 = 0 ;
  int res5 = SWIG_OLDOBJ ;
  bool val6 ;
  int ecode6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:CPyModule_OnMode",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnMode" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnMode" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnMode" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPyModule_OnMode" "', argument " "3"" of type '" "CChan &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnMode" "', argument " "3"" of type '" "CChan &""'"); 
  }
  arg3 = reinterpret_cast< CChan * >(argp3);
  ecode4 = SWIG_AsVal_char(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CPyModule_OnMode" "', argument " "4"" of type '" "char""'");
  } 
  arg4 = static_cast< char >(val4);
  {
    CString *ptr = (CString *)0;
    res5 = SWIG_AsPtr_std_string(obj4, &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CPyModule_OnMode" "', argument " "5"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnMode" "', argument " "5"" of type '" "CString const &""'"); 
    }
    arg5 = ptr;
  }
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CPyModule_OnMode" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  ecode7 = SWIG_AsVal_bool(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "CPyModule_OnMode" "', argument " "7"" of type '" "bool""'");
  } 
  arg7 = static_cast< bool >(val7);
  (arg1)->OnMode((CNick const &)*arg2,*arg3,arg4,(CString const &)*arg5,arg6,arg7);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res5)) free((char*)arg5);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res5)) free((char*)arg5);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnRawMode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CNick *arg2 = 0 ;
  CChan *arg3 = 0 ;
  CString *arg4 = 0 ;
  CString *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CPyModule_OnRawMode",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnRawMode" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnRawMode" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnRawMode" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPyModule_OnRawMode" "', argument " "3"" of type '" "CChan &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnRawMode" "', argument " "3"" of type '" "CChan &""'"); 
  }
  arg3 = reinterpret_cast< CChan * >(argp3);
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CPyModule_OnRawMode" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnRawMode" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res5 = SWIG_AsPtr_std_string(obj4, &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CPyModule_OnRawMode" "', argument " "5"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnRawMode" "', argument " "5"" of type '" "CString const &""'"); 
    }
    arg5 = ptr;
  }
  (arg1)->OnRawMode((CNick const &)*arg2,*arg3,(CString const &)*arg4,(CString const &)*arg5);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  if (SWIG_IsNewObj(res5)) free((char*)arg5);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  if (SWIG_IsNewObj(res5)) free((char*)arg5);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnRaw(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CPyModule_OnRaw",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnRaw" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sLine");
    }
  }
  result = (CModule::EModRet)(arg1)->OnRaw(*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnStatusCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CPyModule_OnStatusCommand",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnStatusCommand" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sCommand");
    }
  }
  result = (CModule::EModRet)(arg1)->OnStatusCommand(*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnModCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CPyModule_OnModCommand",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnModCommand" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnModCommand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnModCommand" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->OnModCommand((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnModNotice(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CPyModule_OnModNotice",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnModNotice" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnModNotice" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnModNotice" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->OnModNotice((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnModCTCP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CPyModule_OnModCTCP",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnModCTCP" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnModCTCP" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnModCTCP" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->OnModCTCP((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnQuit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CNick *arg2 = 0 ;
  CString *arg3 = 0 ;
  vector< CChan * > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CPyModule_OnQuit",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnQuit" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnQuit" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnQuit" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPyModule_OnQuit" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnQuit" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_vectorT_CChan_p_std__allocatorT_CChan_p_t_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CPyModule_OnQuit" "', argument " "4"" of type '" "vector< CChan * > const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnQuit" "', argument " "4"" of type '" "vector< CChan * > const &""'"); 
  }
  arg4 = reinterpret_cast< vector< CChan * > * >(argp4);
  (arg1)->OnQuit((CNick const &)*arg2,(CString const &)*arg3,(vector< CChan * > const &)*arg4);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnNick(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CNick *arg2 = 0 ;
  CString *arg3 = 0 ;
  vector< CChan * > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CPyModule_OnNick",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnNick" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnNick" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnNick" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPyModule_OnNick" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnNick" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_vectorT_CChan_p_std__allocatorT_CChan_p_t_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CPyModule_OnNick" "', argument " "4"" of type '" "vector< CChan * > const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnNick" "', argument " "4"" of type '" "vector< CChan * > const &""'"); 
  }
  arg4 = reinterpret_cast< vector< CChan * > * >(argp4);
  (arg1)->OnNick((CNick const &)*arg2,(CString const &)*arg3,(vector< CChan * > const &)*arg4);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnKick(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CNick *arg2 = 0 ;
  CString *arg3 = 0 ;
  CChan *arg4 = 0 ;
  CString *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int res5 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CPyModule_OnKick",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnKick" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnKick" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnKick" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPyModule_OnKick" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnKick" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CPyModule_OnKick" "', argument " "4"" of type '" "CChan &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnKick" "', argument " "4"" of type '" "CChan &""'"); 
  }
  arg4 = reinterpret_cast< CChan * >(argp4);
  {
    CString *ptr = (CString *)0;
    res5 = SWIG_AsPtr_std_string(obj4, &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CPyModule_OnKick" "', argument " "5"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnKick" "', argument " "5"" of type '" "CString const &""'"); 
    }
    arg5 = ptr;
  }
  (arg1)->OnKick((CNick const &)*arg2,(CString const &)*arg3,*arg4,(CString const &)*arg5);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res5)) free((char*)arg5);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res5)) free((char*)arg5);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnJoin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CNick *arg2 = 0 ;
  CChan *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CPyModule_OnJoin",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnJoin" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnJoin" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnJoin" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPyModule_OnJoin" "', argument " "3"" of type '" "CChan &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnJoin" "', argument " "3"" of type '" "CChan &""'"); 
  }
  arg3 = reinterpret_cast< CChan * >(argp3);
  (arg1)->OnJoin((CNick const &)*arg2,*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnPart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CNick *arg2 = 0 ;
  CChan *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CPyModule_OnPart",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnPart" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnPart" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnPart" "', argument " "2"" of type '" "CNick const &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPyModule_OnPart" "', argument " "3"" of type '" "CChan &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnPart" "', argument " "3"" of type '" "CChan &""'"); 
  }
  arg3 = reinterpret_cast< CChan * >(argp3);
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CPyModule_OnPart" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnPart" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  (arg1)->OnPart((CNick const &)*arg2,*arg3,(CString const &)*arg4);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnChanBufferStarting(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CChan *arg2 = 0 ;
  CClient *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CPyModule_OnChanBufferStarting",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnChanBufferStarting" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnChanBufferStarting" "', argument " "2"" of type '" "CChan &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnChanBufferStarting" "', argument " "2"" of type '" "CChan &""'"); 
  }
  arg2 = reinterpret_cast< CChan * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CClient,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPyModule_OnChanBufferStarting" "', argument " "3"" of type '" "CClient &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnChanBufferStarting" "', argument " "3"" of type '" "CClient &""'"); 
  }
  arg3 = reinterpret_cast< CClient * >(argp3);
  result = (CModule::EModRet)(arg1)->OnChanBufferStarting(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnChanBufferEnding(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CChan *arg2 = 0 ;
  CClient *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CPyModule_OnChanBufferEnding",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnChanBufferEnding" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnChanBufferEnding" "', argument " "2"" of type '" "CChan &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnChanBufferEnding" "', argument " "2"" of type '" "CChan &""'"); 
  }
  arg2 = reinterpret_cast< CChan * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CClient,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPyModule_OnChanBufferEnding" "', argument " "3"" of type '" "CClient &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnChanBufferEnding" "', argument " "3"" of type '" "CClient &""'"); 
  }
  arg3 = reinterpret_cast< CClient * >(argp3);
  result = (CModule::EModRet)(arg1)->OnChanBufferEnding(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnChanBufferPlayLine(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CChan *arg2 = 0 ;
  CClient *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CPyModule_OnChanBufferPlayLine",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnChanBufferPlayLine" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnChanBufferPlayLine" "', argument " "2"" of type '" "CChan &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnChanBufferPlayLine" "', argument " "2"" of type '" "CChan &""'"); 
  }
  arg2 = reinterpret_cast< CChan * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CClient,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPyModule_OnChanBufferPlayLine" "', argument " "3"" of type '" "CClient &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnChanBufferPlayLine" "', argument " "3"" of type '" "CClient &""'"); 
  }
  arg3 = reinterpret_cast< CClient * >(argp3);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj3, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg4 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 4 sLine");
    }
  }
  result = (CModule::EModRet)(arg1)->OnChanBufferPlayLine(*arg2,*arg3,*arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnPrivBufferPlayLine(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CClient *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CPyModule_OnPrivBufferPlayLine",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnPrivBufferPlayLine" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CClient,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnPrivBufferPlayLine" "', argument " "2"" of type '" "CClient &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnPrivBufferPlayLine" "', argument " "2"" of type '" "CClient &""'"); 
  }
  arg2 = reinterpret_cast< CClient * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sLine");
    }
  }
  result = (CModule::EModRet)(arg1)->OnPrivBufferPlayLine(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnClientLogin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CPyModule_OnClientLogin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnClientLogin" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  (arg1)->OnClientLogin();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnClientDisconnect(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CPyModule_OnClientDisconnect",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnClientDisconnect" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  (arg1)->OnClientDisconnect();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnUserRaw(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CPyModule_OnUserRaw",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnUserRaw" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sLine");
    }
  }
  result = (CModule::EModRet)(arg1)->OnUserRaw(*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnUserCTCPReply(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CPyModule_OnUserCTCPReply",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnUserCTCPReply" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sTarget");
    }
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (CModule::EModRet)(arg1)->OnUserCTCPReply(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnUserCTCP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CPyModule_OnUserCTCP",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnUserCTCP" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sTarget");
    }
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (CModule::EModRet)(arg1)->OnUserCTCP(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnUserAction(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CPyModule_OnUserAction",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnUserAction" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sTarget");
    }
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (CModule::EModRet)(arg1)->OnUserAction(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnUserMsg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CPyModule_OnUserMsg",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnUserMsg" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sTarget");
    }
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (CModule::EModRet)(arg1)->OnUserMsg(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnUserNotice(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CPyModule_OnUserNotice",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnUserNotice" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sTarget");
    }
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (CModule::EModRet)(arg1)->OnUserNotice(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnUserJoin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CPyModule_OnUserJoin",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnUserJoin" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sChannel");
    }
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sKey");
    }
  }
  result = (CModule::EModRet)(arg1)->OnUserJoin(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnUserPart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CPyModule_OnUserPart",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnUserPart" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sChannel");
    }
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (CModule::EModRet)(arg1)->OnUserPart(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnUserTopic(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CPyModule_OnUserTopic",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnUserTopic" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sChannel");
    }
  }
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sTopic");
    }
  }
  result = (CModule::EModRet)(arg1)->OnUserTopic(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnUserTopicRequest(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CPyModule_OnUserTopicRequest",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnUserTopicRequest" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj1, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg2 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 2 sChannel");
    }
  }
  result = (CModule::EModRet)(arg1)->OnUserTopicRequest(*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnCTCPReply(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CNick *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CPyModule_OnCTCPReply",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnCTCPReply" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnCTCPReply" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnCTCPReply" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (CModule::EModRet)(arg1)->OnCTCPReply(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnPrivCTCP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CNick *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CPyModule_OnPrivCTCP",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnPrivCTCP" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnPrivCTCP" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnPrivCTCP" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (CModule::EModRet)(arg1)->OnPrivCTCP(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnChanCTCP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CNick *arg2 = 0 ;
  CChan *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CPyModule_OnChanCTCP",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnChanCTCP" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnChanCTCP" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnChanCTCP" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPyModule_OnChanCTCP" "', argument " "3"" of type '" "CChan &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnChanCTCP" "', argument " "3"" of type '" "CChan &""'"); 
  }
  arg3 = reinterpret_cast< CChan * >(argp3);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj3, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg4 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 4 sMessage");
    }
  }
  result = (CModule::EModRet)(arg1)->OnChanCTCP(*arg2,*arg3,*arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnPrivAction(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CNick *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CPyModule_OnPrivAction",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnPrivAction" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnPrivAction" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnPrivAction" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (CModule::EModRet)(arg1)->OnPrivAction(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnChanAction(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CNick *arg2 = 0 ;
  CChan *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CPyModule_OnChanAction",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnChanAction" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnChanAction" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnChanAction" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPyModule_OnChanAction" "', argument " "3"" of type '" "CChan &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnChanAction" "', argument " "3"" of type '" "CChan &""'"); 
  }
  arg3 = reinterpret_cast< CChan * >(argp3);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj3, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg4 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 4 sMessage");
    }
  }
  result = (CModule::EModRet)(arg1)->OnChanAction(*arg2,*arg3,*arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnPrivMsg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CNick *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CPyModule_OnPrivMsg",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnPrivMsg" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnPrivMsg" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnPrivMsg" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (CModule::EModRet)(arg1)->OnPrivMsg(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnChanMsg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CNick *arg2 = 0 ;
  CChan *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CPyModule_OnChanMsg",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnChanMsg" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnChanMsg" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnChanMsg" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPyModule_OnChanMsg" "', argument " "3"" of type '" "CChan &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnChanMsg" "', argument " "3"" of type '" "CChan &""'"); 
  }
  arg3 = reinterpret_cast< CChan * >(argp3);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj3, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg4 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 4 sMessage");
    }
  }
  result = (CModule::EModRet)(arg1)->OnChanMsg(*arg2,*arg3,*arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnPrivNotice(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CNick *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CPyModule_OnPrivNotice",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnPrivNotice" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnPrivNotice" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnPrivNotice" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sMessage");
    }
  }
  result = (CModule::EModRet)(arg1)->OnPrivNotice(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnChanNotice(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CNick *arg2 = 0 ;
  CChan *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CPyModule_OnChanNotice",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnChanNotice" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnChanNotice" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnChanNotice" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPyModule_OnChanNotice" "', argument " "3"" of type '" "CChan &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnChanNotice" "', argument " "3"" of type '" "CChan &""'"); 
  }
  arg3 = reinterpret_cast< CChan * >(argp3);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj3, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg4 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 4 sMessage");
    }
  }
  result = (CModule::EModRet)(arg1)->OnChanNotice(*arg2,*arg3,*arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnTopic(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CNick *arg2 = 0 ;
  CChan *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CPyModule_OnTopic",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnTopic" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CNick,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnTopic" "', argument " "2"" of type '" "CNick &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnTopic" "', argument " "2"" of type '" "CNick &""'"); 
  }
  arg2 = reinterpret_cast< CNick * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPyModule_OnTopic" "', argument " "3"" of type '" "CChan &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnTopic" "', argument " "3"" of type '" "CChan &""'"); 
  }
  arg3 = reinterpret_cast< CChan * >(argp3);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj3, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg4 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 4 sTopic");
    }
  }
  result = (CModule::EModRet)(arg1)->OnTopic(*arg2,*arg3,*arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnServerCapAvailable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CPyModule_OnServerCapAvailable",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnServerCapAvailable" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnServerCapAvailable" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnServerCapAvailable" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  result = (bool)(arg1)->OnServerCapAvailable((CString const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnServerCapResult(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CString *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CPyModule_OnServerCapResult",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnServerCapResult" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnServerCapResult" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnServerCapResult" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CPyModule_OnServerCapResult" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  (arg1)->OnServerCapResult((CString const &)*arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnTimerAutoJoin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CChan *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CPyModule_OnTimerAutoJoin",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnTimerAutoJoin" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CChan,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnTimerAutoJoin" "', argument " "2"" of type '" "CChan &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnTimerAutoJoin" "', argument " "2"" of type '" "CChan &""'"); 
  }
  arg2 = reinterpret_cast< CChan * >(argp2);
  result = (CModule::EModRet)(arg1)->OnTimerAutoJoin(*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnEmbeddedWebRequest(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CWebSock *arg2 = 0 ;
  CString *arg3 = 0 ;
  CTemplate *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CPyModule_OnEmbeddedWebRequest",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnEmbeddedWebRequest" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CWebSock,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnEmbeddedWebRequest" "', argument " "2"" of type '" "CWebSock &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnEmbeddedWebRequest" "', argument " "2"" of type '" "CWebSock &""'"); 
  }
  arg2 = reinterpret_cast< CWebSock * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPyModule_OnEmbeddedWebRequest" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnEmbeddedWebRequest" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_CTemplate,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CPyModule_OnEmbeddedWebRequest" "', argument " "4"" of type '" "CTemplate &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnEmbeddedWebRequest" "', argument " "4"" of type '" "CTemplate &""'"); 
  }
  arg4 = reinterpret_cast< CTemplate * >(argp4);
  result = (bool)(arg1)->OnEmbeddedWebRequest(*arg2,(CString const &)*arg3,*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnAddUser(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CUser *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CPyModule_OnAddUser",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnAddUser" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CUser,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnAddUser" "', argument " "2"" of type '" "CUser &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnAddUser" "', argument " "2"" of type '" "CUser &""'"); 
  }
  arg2 = reinterpret_cast< CUser * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sErrorRet");
    }
  }
  result = (CModule::EModRet)(arg1)->OnAddUser(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnDeleteUser(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CUser *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CPyModule_OnDeleteUser",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnDeleteUser" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CUser,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnDeleteUser" "', argument " "2"" of type '" "CUser &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnDeleteUser" "', argument " "2"" of type '" "CUser &""'"); 
  }
  arg2 = reinterpret_cast< CUser * >(argp2);
  result = (CModule::EModRet)(arg1)->OnDeleteUser(*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnClientConnect(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CZNCSock *arg2 = (CZNCSock *) 0 ;
  CString *arg3 = 0 ;
  unsigned short arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  unsigned short val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CPyModule_OnClientConnect",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnClientConnect" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CZNCSock, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnClientConnect" "', argument " "2"" of type '" "CZNCSock *""'"); 
  }
  arg2 = reinterpret_cast< CZNCSock * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPyModule_OnClientConnect" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnClientConnect" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_unsigned_SS_short(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CPyModule_OnClientConnect" "', argument " "4"" of type '" "unsigned short""'");
  } 
  arg4 = static_cast< unsigned short >(val4);
  (arg1)->OnClientConnect(arg2,(CString const &)*arg3,arg4);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnFailedLogin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CPyModule_OnFailedLogin",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnFailedLogin" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnFailedLogin" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnFailedLogin" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPyModule_OnFailedLogin" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnFailedLogin" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->OnFailedLogin((CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnUnknownUserRaw(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CClient *arg2 = (CClient *) 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CPyModule_OnUnknownUserRaw",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnUnknownUserRaw" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnUnknownUserRaw" "', argument " "2"" of type '" "CClient *""'"); 
  }
  arg2 = reinterpret_cast< CClient * >(argp2);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj2, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg3 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 3 sLine");
    }
  }
  result = (CModule::EModRet)(arg1)->OnUnknownUserRaw(arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_IsClientCapSupported(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CClient *arg2 = (CClient *) 0 ;
  CString *arg3 = 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CPyModule_IsClientCapSupported",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_IsClientCapSupported" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_IsClientCapSupported" "', argument " "2"" of type '" "CClient *""'"); 
  }
  arg2 = reinterpret_cast< CClient * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPyModule_IsClientCapSupported" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_IsClientCapSupported" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CPyModule_IsClientCapSupported" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (bool)(arg1)->IsClientCapSupported(arg2,(CString const &)*arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnClientCapRequest(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CClient *arg2 = (CClient *) 0 ;
  CString *arg3 = 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CPyModule_OnClientCapRequest",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnClientCapRequest" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CClient, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnClientCapRequest" "', argument " "2"" of type '" "CClient *""'"); 
  }
  arg2 = reinterpret_cast< CClient * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPyModule_OnClientCapRequest" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnClientCapRequest" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CPyModule_OnClientCapRequest" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  (arg1)->OnClientCapRequest(arg2,(CString const &)*arg3,arg4);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnModuleLoading(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  CModInfo::EModuleType arg4 ;
  bool *arg5 = 0 ;
  CString *arg6 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:CPyModule_OnModuleLoading",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnModuleLoading" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnModuleLoading" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnModuleLoading" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPyModule_OnModuleLoading" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnModuleLoading" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CPyModule_OnModuleLoading" "', argument " "4"" of type '" "CModInfo::EModuleType""'");
  } 
  arg4 = static_cast< CModInfo::EModuleType >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_bool,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CPyModule_OnModuleLoading" "', argument " "5"" of type '" "bool &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnModuleLoading" "', argument " "5"" of type '" "bool &""'"); 
  }
  arg5 = reinterpret_cast< bool * >(argp5);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj5, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg6 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 6 sRetMsg");
    }
  }
  result = (CModule::EModRet)(arg1)->OnModuleLoading((CString const &)*arg2,(CString const &)*arg3,arg4,*arg5,*arg6);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnModuleUnloading(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CModule *arg2 = (CModule *) 0 ;
  bool *arg3 = 0 ;
  CString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CPyModule_OnModuleUnloading",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnModuleUnloading" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnModuleUnloading" "', argument " "2"" of type '" "CModule *""'"); 
  }
  arg2 = reinterpret_cast< CModule * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_bool,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPyModule_OnModuleUnloading" "', argument " "3"" of type '" "bool &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnModuleUnloading" "', argument " "3"" of type '" "bool &""'"); 
  }
  arg3 = reinterpret_cast< bool * >(argp3);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj3, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg4 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 4 sRetMsg");
    }
  }
  result = (CModule::EModRet)(arg1)->OnModuleUnloading(arg2,*arg3,*arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyModule_OnGetModInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  CModInfo *arg2 = 0 ;
  CString *arg3 = 0 ;
  bool *arg4 = 0 ;
  CString *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  CModule::EModRet result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:CPyModule_OnGetModInfo",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyModule_OnGetModInfo" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CModInfo,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyModule_OnGetModInfo" "', argument " "2"" of type '" "CModInfo &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnGetModInfo" "', argument " "2"" of type '" "CModInfo &""'"); 
  }
  arg2 = reinterpret_cast< CModInfo * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPyModule_OnGetModInfo" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnGetModInfo" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_bool,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CPyModule_OnGetModInfo" "', argument " "4"" of type '" "bool &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyModule_OnGetModInfo" "', argument " "4"" of type '" "bool &""'"); 
  }
  arg4 = reinterpret_cast< bool * >(argp4);
  {
    String* p;
    int res = SWIG_IsOK(SWIG_ConvertPtr(obj4, (void**)&p, SWIG_TypeQuery("String*"), 0));
    if (SWIG_IsOK(res)) {
      arg5 = &p->s;
    } else {
      SWIG_exception_fail(SWIG_ArgError(res), "need znc.String object as argument 5 sRetMsg");
    }
  }
  result = (CModule::EModRet)(arg1)->OnGetModInfo(*arg2,(CString const &)*arg3,*arg4,*arg5);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CPyModule(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CPyModule",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CPyModule" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CPyModule_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CPyModule, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_AsPyModule(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModule *arg1 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CPyModule *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsPyModule",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsPyModule" "', argument " "1"" of type '" "CModule *""'"); 
  }
  arg1 = reinterpret_cast< CModule * >(argp1);
  result = (CPyModule *)AsPyModule(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CPyModule, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CreatePyModule(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CUser *arg1 = (CUser *) 0 ;
  CIRCNetwork *arg2 = (CIRCNetwork *) 0 ;
  CString *arg3 = 0 ;
  CString *arg4 = 0 ;
  PyObject *arg5 = (PyObject *) 0 ;
  CModule *arg6 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  CPyModule *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:CreatePyModule",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CUser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CreatePyModule" "', argument " "1"" of type '" "CUser *""'"); 
  }
  arg1 = reinterpret_cast< CUser * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CreatePyModule" "', argument " "2"" of type '" "CIRCNetwork *""'"); 
  }
  arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CreatePyModule" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CreatePyModule" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CreatePyModule" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CreatePyModule" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  arg5 = obj4;
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CreatePyModule" "', argument " "6"" of type '" "CModule *""'"); 
  }
  arg6 = reinterpret_cast< CModule * >(argp6);
  result = (CPyModule *)CreatePyModule(arg1,arg2,(CString const &)*arg3,(CString const &)*arg4,arg5,arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CPyModule, 0 |  0 );
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CPyTimer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  CString *arg4 = 0 ;
  CString *arg5 = 0 ;
  PyObject *arg6 = (PyObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  CPyTimer *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:new_CPyTimer",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CPyTimer" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CPyTimer" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CPyTimer" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CPyTimer" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CPyTimer" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res5 = SWIG_AsPtr_std_string(obj4, &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_CPyTimer" "', argument " "5"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CPyTimer" "', argument " "5"" of type '" "CString const &""'"); 
    }
    arg5 = ptr;
  }
  arg6 = obj5;
  result = (CPyTimer *)new CPyTimer(arg1,arg2,arg3,(CString const &)*arg4,(CString const &)*arg5,arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CPyTimer, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  if (SWIG_IsNewObj(res5)) free((char*)arg5);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  if (SWIG_IsNewObj(res5)) free((char*)arg5);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyTimer_RunJob(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyTimer *arg1 = (CPyTimer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CPyTimer_RunJob",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyTimer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyTimer_RunJob" "', argument " "1"" of type '" "CPyTimer *""'"); 
  }
  arg1 = reinterpret_cast< CPyTimer * >(argp1);
  (arg1)->RunJob();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyTimer_GetPyObj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyTimer *arg1 = (CPyTimer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CPyTimer_GetPyObj",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyTimer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyTimer_GetPyObj" "', argument " "1"" of type '" "CPyTimer *""'"); 
  }
  arg1 = reinterpret_cast< CPyTimer * >(argp1);
  result = (PyObject *)(arg1)->GetPyObj();
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyTimer_GetNewPyObj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyTimer *arg1 = (CPyTimer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CPyTimer_GetNewPyObj",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyTimer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyTimer_GetNewPyObj" "', argument " "1"" of type '" "CPyTimer *""'"); 
  }
  arg1 = reinterpret_cast< CPyTimer * >(argp1);
  result = (PyObject *)(arg1)->GetNewPyObj();
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CPyTimer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyTimer *arg1 = (CPyTimer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CPyTimer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyTimer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CPyTimer" "', argument " "1"" of type '" "CPyTimer *""'"); 
  }
  arg1 = reinterpret_cast< CPyTimer * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CPyTimer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CPyTimer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_CreatePyTimer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  CString *arg4 = 0 ;
  CString *arg5 = 0 ;
  PyObject *arg6 = (PyObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  CPyTimer *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:CreatePyTimer",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CreatePyTimer" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CreatePyTimer" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CreatePyTimer" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    CString *ptr = (CString *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CreatePyTimer" "', argument " "4"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CreatePyTimer" "', argument " "4"" of type '" "CString const &""'"); 
    }
    arg4 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res5 = SWIG_AsPtr_std_string(obj4, &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CreatePyTimer" "', argument " "5"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CreatePyTimer" "', argument " "5"" of type '" "CString const &""'"); 
    }
    arg5 = ptr;
  }
  arg6 = obj5;
  result = (CPyTimer *)CreatePyTimer(arg1,arg2,arg3,(CString const &)*arg4,(CString const &)*arg5,arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CPyTimer, 0 |  0 );
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  if (SWIG_IsNewObj(res5)) free((char*)arg5);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) free((char*)arg4);
  if (SWIG_IsNewObj(res5)) free((char*)arg5);
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CPySocket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CPySocket *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_CPySocket",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CPySocket" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  arg2 = obj1;
  result = (CPySocket *)new CPySocket(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CPySocket, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPySocket_GetPyObj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPySocket *arg1 = (CPySocket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CPySocket_GetPyObj",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPySocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPySocket_GetPyObj" "', argument " "1"" of type '" "CPySocket *""'"); 
  }
  arg1 = reinterpret_cast< CPySocket * >(argp1);
  result = (PyObject *)(arg1)->GetPyObj();
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPySocket_GetNewPyObj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPySocket *arg1 = (CPySocket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CPySocket_GetNewPyObj",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPySocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPySocket_GetNewPyObj" "', argument " "1"" of type '" "CPySocket *""'"); 
  }
  arg1 = reinterpret_cast< CPySocket * >(argp1);
  result = (PyObject *)(arg1)->GetNewPyObj();
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CPySocket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPySocket *arg1 = (CPySocket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CPySocket",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPySocket, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CPySocket" "', argument " "1"" of type '" "CPySocket *""'"); 
  }
  arg1 = reinterpret_cast< CPySocket * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPySocket_Connected(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPySocket *arg1 = (CPySocket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CPySocket_Connected",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPySocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPySocket_Connected" "', argument " "1"" of type '" "CPySocket *""'"); 
  }
  arg1 = reinterpret_cast< CPySocket * >(argp1);
  (arg1)->Connected();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPySocket_Disconnected(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPySocket *arg1 = (CPySocket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CPySocket_Disconnected",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPySocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPySocket_Disconnected" "', argument " "1"" of type '" "CPySocket *""'"); 
  }
  arg1 = reinterpret_cast< CPySocket * >(argp1);
  (arg1)->Disconnected();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPySocket_Timeout(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPySocket *arg1 = (CPySocket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CPySocket_Timeout",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPySocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPySocket_Timeout" "', argument " "1"" of type '" "CPySocket *""'"); 
  }
  arg1 = reinterpret_cast< CPySocket * >(argp1);
  (arg1)->Timeout();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPySocket_ConnectionRefused(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPySocket *arg1 = (CPySocket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CPySocket_ConnectionRefused",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPySocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPySocket_ConnectionRefused" "', argument " "1"" of type '" "CPySocket *""'"); 
  }
  arg1 = reinterpret_cast< CPySocket * >(argp1);
  (arg1)->ConnectionRefused();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPySocket_ReadData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPySocket *arg1 = (CPySocket *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CPySocket_ReadData",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPySocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPySocket_ReadData" "', argument " "1"" of type '" "CPySocket *""'"); 
  }
  arg1 = reinterpret_cast< CPySocket * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPySocket_ReadData" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CPySocket_ReadData" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  (arg1)->ReadData((char const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPySocket_ReadLine(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPySocket *arg1 = (CPySocket *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CPySocket_ReadLine",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPySocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPySocket_ReadLine" "', argument " "1"" of type '" "CPySocket *""'"); 
  }
  arg1 = reinterpret_cast< CPySocket * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPySocket_ReadLine" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPySocket_ReadLine" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->ReadLine((CString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPySocket_GetSockObj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPySocket *arg1 = (CPySocket *) 0 ;
  CString *arg2 = 0 ;
  unsigned short arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned short val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Csock *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CPySocket_GetSockObj",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPySocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPySocket_GetSockObj" "', argument " "1"" of type '" "CPySocket *""'"); 
  }
  arg1 = reinterpret_cast< CPySocket * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPySocket_GetSockObj" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPySocket_GetSockObj" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_short(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CPySocket_GetSockObj" "', argument " "3"" of type '" "unsigned short""'");
  } 
  arg3 = static_cast< unsigned short >(val3);
  result = (Csock *)(arg1)->GetSockObj((CString const &)*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 |  0 );
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPySocket_WriteBytes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPySocket *arg1 = (CPySocket *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CPySocket_WriteBytes",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPySocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPySocket_WriteBytes" "', argument " "1"" of type '" "CPySocket *""'"); 
  }
  arg1 = reinterpret_cast< CPySocket * >(argp1);
  arg2 = obj1;
  result = (PyObject *)(arg1)->WriteBytes(arg2);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CPySocket_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CPySocket, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_CreatePySocket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyModule *arg1 = (CPyModule *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CPySocket *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CreatePySocket",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyModule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CreatePySocket" "', argument " "1"" of type '" "CPyModule *""'"); 
  }
  arg1 = reinterpret_cast< CPyModule * >(argp1);
  arg2 = obj1;
  result = (CPySocket *)CreatePySocket(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CPySocket, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HaveIPv6_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)":HaveIPv6_")) SWIG_fail;
  result = (bool)HaveIPv6_();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HaveSSL_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)":HaveSSL_")) SWIG_fail;
  result = (bool)HaveSSL_();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GetSOMAXCONN(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)":GetSOMAXCONN")) SWIG_fail;
  result = (int)GetSOMAXCONN();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GetVersionMajor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)":GetVersionMajor")) SWIG_fail;
  result = (int)GetVersionMajor();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GetVersionMinor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)":GetVersionMinor")) SWIG_fail;
  result = (int)GetVersionMinor();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)":GetVersion")) SWIG_fail;
  result = (double)GetVersion();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GetVersionExtra(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)":GetVersionExtra")) SWIG_fail;
  result = GetVersionExtra();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MCString_iter__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MCString_iter *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_MCString_iter")) SWIG_fail;
  result = (MCString_iter *)new MCString_iter();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_MCString_iter, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MCString_iter_x_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MCString_iter *arg1 = (MCString_iter *) 0 ;
  MCString::iterator arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MCString_iter_x_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MCString_iter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MCString_iter_x_set" "', argument " "1"" of type '" "MCString_iter *""'"); 
  }
  arg1 = reinterpret_cast< MCString_iter * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_MCString__iterator,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MCString_iter_x_set" "', argument " "2"" of type '" "MCString::iterator""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MCString_iter_x_set" "', argument " "2"" of type '" "MCString::iterator""'");
    } else {
      MCString::iterator * temp = reinterpret_cast< MCString::iterator * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  if (arg1) (arg1)->x = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MCString_iter_x_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MCString_iter *arg1 = (MCString_iter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  MCString::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MCString_iter_x_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MCString_iter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MCString_iter_x_get" "', argument " "1"" of type '" "MCString_iter *""'"); 
  }
  arg1 = reinterpret_cast< MCString_iter * >(argp1);
  result =  ((arg1)->x);
  resultobj = SWIG_NewPointerObj((new MCString::iterator(static_cast< const MCString::iterator& >(result))), SWIGTYPE_p_MCString__iterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MCString_iter__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MCString::iterator arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  MCString_iter *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_MCString_iter",&obj0)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_MCString__iterator,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MCString_iter" "', argument " "1"" of type '" "MCString::iterator""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MCString_iter" "', argument " "1"" of type '" "MCString::iterator""'");
    } else {
      MCString::iterator * temp = reinterpret_cast< MCString::iterator * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  result = (MCString_iter *)new MCString_iter(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_MCString_iter, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MCString_iter(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_MCString_iter__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_MCString__iterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MCString_iter__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_MCString_iter'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    MCString_iter::MCString_iter()\n"
    "    MCString_iter::MCString_iter(MCString::iterator)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_MCString_iter_plusplus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MCString_iter *arg1 = (MCString_iter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MCString_iter_plusplus",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MCString_iter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MCString_iter_plusplus" "', argument " "1"" of type '" "MCString_iter *""'"); 
  }
  arg1 = reinterpret_cast< MCString_iter * >(argp1);
  (arg1)->plusplus();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MCString_iter_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MCString_iter *arg1 = (MCString_iter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MCString_iter_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MCString_iter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MCString_iter_get" "', argument " "1"" of type '" "MCString_iter *""'"); 
  }
  arg1 = reinterpret_cast< MCString_iter * >(argp1);
  result = (arg1)->get();
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MCString_iter_is_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MCString_iter *arg1 = (MCString_iter *) 0 ;
  CModule *arg2 = (CModule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MCString_iter_is_end",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MCString_iter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MCString_iter_is_end" "', argument " "1"" of type '" "MCString_iter *""'"); 
  }
  arg1 = reinterpret_cast< MCString_iter * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CModule, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MCString_iter_is_end" "', argument " "2"" of type '" "CModule *""'"); 
  }
  arg2 = reinterpret_cast< CModule * >(argp2);
  result = (bool)(arg1)->is_end(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MCString_iter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MCString_iter *arg1 = (MCString_iter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_MCString_iter",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MCString_iter, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MCString_iter" "', argument " "1"" of type '" "MCString_iter *""'"); 
  }
  arg1 = reinterpret_cast< MCString_iter * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MCString_iter_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_MCString_iter, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CModulesIter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModules *arg1 = (CModules *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CModulesIter *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_CModulesIter",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModules, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CModulesIter" "', argument " "1"" of type '" "CModules *""'"); 
  }
  arg1 = reinterpret_cast< CModules * >(argp1);
  result = (CModulesIter *)new CModulesIter(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModulesIter, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModulesIter_plusplus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModulesIter *arg1 = (CModulesIter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModulesIter_plusplus",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModulesIter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModulesIter_plusplus" "', argument " "1"" of type '" "CModulesIter *""'"); 
  }
  arg1 = reinterpret_cast< CModulesIter * >(argp1);
  (arg1)->plusplus();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModulesIter_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModulesIter *arg1 = (CModulesIter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CModule *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModulesIter_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModulesIter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModulesIter_get" "', argument " "1"" of type '" "CModulesIter const *""'"); 
  }
  arg1 = reinterpret_cast< CModulesIter * >(argp1);
  result = (CModule *)((CModulesIter const *)arg1)->get();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModule, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModulesIter_is_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModulesIter *arg1 = (CModulesIter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModulesIter_is_end",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModulesIter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModulesIter_is_end" "', argument " "1"" of type '" "CModulesIter const *""'"); 
  }
  arg1 = reinterpret_cast< CModulesIter * >(argp1);
  result = (bool)((CModulesIter const *)arg1)->is_end();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModulesIter_m_pModules_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModulesIter *arg1 = (CModulesIter *) 0 ;
  CModules *arg2 = (CModules *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModulesIter_m_pModules_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModulesIter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModulesIter_m_pModules_set" "', argument " "1"" of type '" "CModulesIter *""'"); 
  }
  arg1 = reinterpret_cast< CModulesIter * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CModules, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModulesIter_m_pModules_set" "', argument " "2"" of type '" "CModules *""'"); 
  }
  arg2 = reinterpret_cast< CModules * >(argp2);
  if (arg1) (arg1)->m_pModules = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModulesIter_m_pModules_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModulesIter *arg1 = (CModulesIter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CModules *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModulesIter_m_pModules_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModulesIter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModulesIter_m_pModules_get" "', argument " "1"" of type '" "CModulesIter *""'"); 
  }
  arg1 = reinterpret_cast< CModulesIter * >(argp1);
  result = (CModules *) ((arg1)->m_pModules);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModules, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModulesIter_m_it_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModulesIter *arg1 = (CModulesIter *) 0 ;
  CModules::const_iterator arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CModulesIter_m_it_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModulesIter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModulesIter_m_it_set" "', argument " "1"" of type '" "CModulesIter *""'"); 
  }
  arg1 = reinterpret_cast< CModulesIter * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CModules__const_iterator,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModulesIter_m_it_set" "', argument " "2"" of type '" "CModules::const_iterator""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModulesIter_m_it_set" "', argument " "2"" of type '" "CModules::const_iterator""'");
    } else {
      CModules::const_iterator * temp = reinterpret_cast< CModules::const_iterator * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  if (arg1) (arg1)->m_it = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CModulesIter_m_it_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModulesIter *arg1 = (CModulesIter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CModules::const_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CModulesIter_m_it_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModulesIter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModulesIter_m_it_get" "', argument " "1"" of type '" "CModulesIter *""'"); 
  }
  arg1 = reinterpret_cast< CModulesIter * >(argp1);
  result =  ((arg1)->m_it);
  resultobj = SWIG_NewPointerObj((new CModules::const_iterator(static_cast< const CModules::const_iterator& >(result))), SWIGTYPE_p_CModules__const_iterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CModulesIter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CModulesIter *arg1 = (CModulesIter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CModulesIter",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CModulesIter, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CModulesIter" "', argument " "1"" of type '" "CModulesIter *""'"); 
  }
  arg1 = reinterpret_cast< CModulesIter * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CModulesIter_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CModulesIter, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_CPyRetString_s_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyRetString *arg1 = (CPyRetString *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CPyRetString_s_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyRetString, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyRetString_s_set" "', argument " "1"" of type '" "CPyRetString *""'"); 
  }
  arg1 = reinterpret_cast< CPyRetString * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPyRetString_s_set" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPyRetString_s_set" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->s = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyRetString_s_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyRetString *arg1 = (CPyRetString *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CPyRetString_s_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyRetString, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyRetString_s_get" "', argument " "1"" of type '" "CPyRetString *""'"); 
  }
  arg1 = reinterpret_cast< CPyRetString * >(argp1);
  result = (CString *) & ((arg1)->s);
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPyRetString___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyRetString *arg1 = (CPyRetString *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CPyRetString___str__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyRetString, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPyRetString___str__" "', argument " "1"" of type '" "CPyRetString *""'"); 
  }
  arg1 = reinterpret_cast< CPyRetString * >(argp1);
  result = CPyRetString___str__(arg1);
  resultobj = SWIG_From_std_string((CString)(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CPyRetString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CPyRetString *arg1 = (CPyRetString *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CPyRetString",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CPyRetString, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CPyRetString" "', argument " "1"" of type '" "CPyRetString *""'"); 
  }
  arg1 = reinterpret_cast< CPyRetString * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CPyRetString_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CPyRetString, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_StrPair__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::pair< CString,CString > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_StrPair")) SWIG_fail;
  result = (std::pair< CString,CString > *)new std::pair< CString,CString >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__pairT_CString_CString_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_StrPair__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString arg1 ;
  CString arg2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::pair< CString,CString > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_StrPair",&obj0,&obj1)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    int res = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "new_StrPair" "', argument " "1"" of type '" "CString""'");
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) free((char*)ptr);
  }
  {
    CString *ptr = (CString *)0;
    int res = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "new_StrPair" "', argument " "2"" of type '" "CString""'");
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) free((char*)ptr);
  }
  result = (std::pair< CString,CString > *)new std::pair< CString,CString >(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__pairT_CString_CString_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_StrPair__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::pair< CString,CString > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  std::pair< CString,CString > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_StrPair",&obj0)) SWIG_fail;
  {
    std::pair<CString,CString > *ptr = (std::pair<CString,CString > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_StrPair" "', argument " "1"" of type '" "std::pair< CString,CString > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_StrPair" "', argument " "1"" of type '" "std::pair< CString,CString > const &""'"); 
    }
    arg1 = ptr;
  }
  result = (std::pair< CString,CString > *)new std::pair< CString,CString >((std::pair< CString,CString > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__pairT_CString_CString_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_StrPair(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_StrPair__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::pair<CString,CString >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_StrPair__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (CString**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (CString**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_StrPair__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_StrPair'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::pair< CString,CString >::pair()\n"
    "    std::pair< CString,CString >::pair(CString,CString)\n"
    "    std::pair< CString,CString >::pair(std::pair< CString,CString > const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_StrPair_first_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::pair< CString,CString > *arg1 = (std::pair< CString,CString > *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:StrPair_first_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__pairT_CString_CString_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrPair_first_set" "', argument " "1"" of type '" "std::pair< CString,CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::pair< CString,CString > * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrPair_first_set" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StrPair_first_set" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->first = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrPair_first_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::pair< CString,CString > *arg1 = (std::pair< CString,CString > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StrPair_first_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__pairT_CString_CString_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrPair_first_get" "', argument " "1"" of type '" "std::pair< CString,CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::pair< CString,CString > * >(argp1);
  result = (CString *) & ((arg1)->first);
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrPair_second_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::pair< CString,CString > *arg1 = (std::pair< CString,CString > *) 0 ;
  CString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:StrPair_second_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__pairT_CString_CString_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrPair_second_set" "', argument " "1"" of type '" "std::pair< CString,CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::pair< CString,CString > * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrPair_second_set" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StrPair_second_set" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->second = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  return NULL;
}


SWIGINTERN PyObject *_wrap_StrPair_second_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::pair< CString,CString > *arg1 = (std::pair< CString,CString > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StrPair_second_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__pairT_CString_CString_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrPair_second_get" "', argument " "1"" of type '" "std::pair< CString,CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::pair< CString,CString > * >(argp1);
  result = (CString *) & ((arg1)->second);
  resultobj = SWIG_From_std_string((CString)(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_StrPair(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::pair< CString,CString > *arg1 = (std::pair< CString,CString > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_StrPair",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__pairT_CString_CString_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_StrPair" "', argument " "1"" of type '" "std::pair< CString,CString > *""'"); 
  }
  arg1 = reinterpret_cast< std::pair< CString,CString > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *StrPair_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__pairT_CString_CString_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_VPair_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  arg2 = &obj0;
  if (!PyArg_ParseTuple(args,(char *)"O:VPair_iterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair_iterator" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  result = (swig::SwigPyIterator *)std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg__iterator(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VPair___nonzero__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair___nonzero__" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  result = (bool)std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg____nonzero__((std::vector< std::pair< CString,CString > > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair___bool__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VPair___bool__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair___bool__" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  result = (bool)std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg____bool__((std::vector< std::pair< CString,CString > > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< std::pair< CString,CString > >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VPair___len__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair___len__" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  result = std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg____len__((std::vector< std::pair< CString,CString > > const *)arg1);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair_pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< std::pair< CString,CString > >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VPair_pop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair_pop" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  try {
    result = std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg__pop(arg1);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = swig::from(static_cast< std::pair<CString,CString > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair___getslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  std::vector< std::pair< CString,CString > >::difference_type arg2 ;
  std::vector< std::pair< CString,CString > >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VPair___getslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair___getslice__" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VPair___getslice__" "', argument " "2"" of type '" "std::vector< std::pair< CString,CString > >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::pair< CString,CString > >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VPair___getslice__" "', argument " "3"" of type '" "std::vector< std::pair< CString,CString > >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< std::pair< CString,CString > >::difference_type >(val3);
  try {
    result = (std::vector< std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > > *)std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg____getslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair___setslice____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  std::vector< std::pair< CString,CString > >::difference_type arg2 ;
  std::vector< std::pair< CString,CString > >::difference_type arg3 ;
  std::vector< std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:VPair___setslice__",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair___setslice__" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VPair___setslice__" "', argument " "2"" of type '" "std::vector< std::pair< CString,CString > >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::pair< CString,CString > >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VPair___setslice__" "', argument " "3"" of type '" "std::vector< std::pair< CString,CString > >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< std::pair< CString,CString > >::difference_type >(val3);
  {
    std::vector<std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > > *ptr = (std::vector<std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > > *)0;
    res4 = swig::asptr(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "VPair___setslice__" "', argument " "4"" of type '" "std::vector< std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VPair___setslice__" "', argument " "4"" of type '" "std::vector< std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > > const &""'"); 
    }
    arg4 = ptr;
  }
  try {
    std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg____setslice____SWIG_0(arg1,arg2,arg3,(std::vector< std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > > const &)*arg4);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair___setslice____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  std::vector< std::pair< CString,CString > >::difference_type arg2 ;
  std::vector< std::pair< CString,CString > >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VPair___setslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair___setslice__" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VPair___setslice__" "', argument " "2"" of type '" "std::vector< std::pair< CString,CString > >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::pair< CString,CString > >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VPair___setslice__" "', argument " "3"" of type '" "std::vector< std::pair< CString,CString > >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< std::pair< CString,CString > >::difference_type >(val3);
  try {
    std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg____setslice____SWIG_0(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair___setslice__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_VPair___setslice____SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = swig::asptr(argv[3], (std::vector<std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > >**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_VPair___setslice____SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'VPair___setslice__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::pair< CString,CString > >::__setslice__(std::vector< std::pair< CString,CString > >::difference_type,std::vector< std::pair< CString,CString > >::difference_type,std::vector< std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > > const &)\n"
    "    std::vector< std::pair< CString,CString > >::__setslice__(std::vector< std::pair< CString,CString > >::difference_type,std::vector< std::pair< CString,CString > >::difference_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VPair___delslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  std::vector< std::pair< CString,CString > >::difference_type arg2 ;
  std::vector< std::pair< CString,CString > >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VPair___delslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair___delslice__" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VPair___delslice__" "', argument " "2"" of type '" "std::vector< std::pair< CString,CString > >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::pair< CString,CString > >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VPair___delslice__" "', argument " "3"" of type '" "std::vector< std::pair< CString,CString > >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< std::pair< CString,CString > >::difference_type >(val3);
  try {
    std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg____delslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair___delitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  std::vector< std::pair< CString,CString > >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VPair___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair___delitem__" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VPair___delitem__" "', argument " "2"" of type '" "std::vector< std::pair< CString,CString > >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::pair< CString,CString > >::difference_type >(val2);
  try {
    std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg____delitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair___getitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VPair___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair___getitem__" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VPair___getitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    result = (std::vector< std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > > *)std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg____getitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  std::vector< std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VPair___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair___setitem__" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VPair___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  {
    std::vector<std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > > *ptr = (std::vector<std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > > *)0;
    res3 = swig::asptr(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VPair___setitem__" "', argument " "3"" of type '" "std::vector< std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VPair___setitem__" "', argument " "3"" of type '" "std::vector< std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > > const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg____setitem____SWIG_0(arg1,arg2,(std::vector< std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > > const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VPair___setitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair___setitem__" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VPair___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg____setitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair___delitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VPair___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair___delitem__" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VPair___delitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg____delitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair___delitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_VPair___delitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_VPair___delitem____SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'VPair___delitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::pair< CString,CString > >::__delitem__(std::vector< std::pair< CString,CString > >::difference_type)\n"
    "    std::vector< std::pair< CString,CString > >::__delitem__(PySliceObject *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VPair___getitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  std::vector< std::pair< CString,CString > >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< std::pair< CString,CString > >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VPair___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair___getitem__" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VPair___getitem__" "', argument " "2"" of type '" "std::vector< std::pair< CString,CString > >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::pair< CString,CString > >::difference_type >(val2);
  try {
    result = (std::vector< std::pair< CString,CString > >::value_type *) &std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg____getitem____SWIG_1((std::vector< std::pair< CString,CString > > const *)arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = swig::from(static_cast< std::pair<CString,CString > >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair___getitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_VPair___getitem____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_VPair___getitem____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'VPair___getitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::pair< CString,CString > >::__getitem__(PySliceObject *)\n"
    "    std::vector< std::pair< CString,CString > >::__getitem__(std::vector< std::pair< CString,CString > >::difference_type) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VPair___setitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  std::vector< std::pair< CString,CString > >::difference_type arg2 ;
  std::vector< std::pair< CString,CString > >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VPair___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair___setitem__" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VPair___setitem__" "', argument " "2"" of type '" "std::vector< std::pair< CString,CString > >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::pair< CString,CString > >::difference_type >(val2);
  {
    std::pair<CString,CString > *ptr = (std::pair<CString,CString > *)0;
    res3 = swig::asptr(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VPair___setitem__" "', argument " "3"" of type '" "std::vector< std::pair< CString,CString > >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VPair___setitem__" "', argument " "3"" of type '" "std::vector< std::pair< CString,CString > >::value_type const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg____setitem____SWIG_2(arg1,arg2,(std::pair< CString,CString > const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair___setitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_VPair___setitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector<std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_VPair___setitem____SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::pair<CString,CString >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_VPair___setitem____SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'VPair___setitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::pair< CString,CString > >::__setitem__(PySliceObject *,std::vector< std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > > const &)\n"
    "    std::vector< std::pair< CString,CString > >::__setitem__(PySliceObject *)\n"
    "    std::vector< std::pair< CString,CString > >::__setitem__(std::vector< std::pair< CString,CString > >::difference_type,std::vector< std::pair< CString,CString > >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VPair_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  std::vector< std::pair< CString,CString > >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VPair_append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair_append" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  {
    std::pair<CString,CString > *ptr = (std::pair<CString,CString > *)0;
    res2 = swig::asptr(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VPair_append" "', argument " "2"" of type '" "std::vector< std::pair< CString,CString > >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VPair_append" "', argument " "2"" of type '" "std::vector< std::pair< CString,CString > >::value_type const &""'"); 
    }
    arg2 = ptr;
  }
  std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg__append(arg1,(std::pair< CString,CString > const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VPair__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_VPair")) SWIG_fail;
  result = (std::vector< std::pair< CString,CString > > *)new std::vector< std::pair< CString,CString > >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VPair__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  std::vector< std::pair< CString,CString > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_VPair",&obj0)) SWIG_fail;
  {
    std::vector<std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > > *ptr = (std::vector<std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VPair" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_VPair" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > const &""'"); 
    }
    arg1 = ptr;
  }
  result = (std::vector< std::pair< CString,CString > > *)new std::vector< std::pair< CString,CString > >((std::vector< std::pair< CString,CString > > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VPair_empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair_empty" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  result = (bool)((std::vector< std::pair< CString,CString > > const *)arg1)->empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< std::pair< CString,CString > >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VPair_size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair_size" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  result = ((std::vector< std::pair< CString,CString > > const *)arg1)->size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VPair_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair_clear" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair_swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  std::vector< std::pair< CString,CString > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VPair_swap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair_swap" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VPair_swap" "', argument " "2"" of type '" "std::vector< std::pair< CString,CString > > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VPair_swap" "', argument " "2"" of type '" "std::vector< std::pair< CString,CString > > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp2);
  (arg1)->swap(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair_get_allocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::allocator< std::pair< CString,CString > > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VPair_get_allocator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair_get_allocator" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  result = ((std::vector< std::pair< CString,CString > > const *)arg1)->get_allocator();
  resultobj = SWIG_NewPointerObj((new std::vector< std::pair< CString,CString > >::allocator_type(static_cast< const std::vector< std::pair< CString,CString > >::allocator_type& >(result))), SWIGTYPE_p_std__allocatorT_std__pairT_CString_CString_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< std::pair< CString,CString > >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VPair_begin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair_begin" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  result = (arg1)->begin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::pair< CString,CString > >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< std::pair< CString,CString > >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VPair_end",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair_end" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  result = (arg1)->end();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::pair< CString,CString > >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair_rbegin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< std::pair< CString,CString > >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VPair_rbegin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair_rbegin" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  result = (arg1)->rbegin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::pair< CString,CString > >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair_rend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< std::pair< CString,CString > >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VPair_rend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair_rend" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  result = (arg1)->rend();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::pair< CString,CString > >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VPair__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > >::size_type arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< std::pair< CString,CString > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_VPair",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_VPair" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > >::size_type""'");
  } 
  arg1 = static_cast< std::vector< std::pair< CString,CString > >::size_type >(val1);
  result = (std::vector< std::pair< CString,CString > > *)new std::vector< std::pair< CString,CString > >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair_pop_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VPair_pop_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair_pop_back" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  (arg1)->pop_back();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair_resize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  std::vector< std::pair< CString,CString > >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VPair_resize",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair_resize" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VPair_resize" "', argument " "2"" of type '" "std::vector< std::pair< CString,CString > >::size_type""'");
  } 
  arg2 = static_cast< std::vector< std::pair< CString,CString > >::size_type >(val2);
  (arg1)->resize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair_erase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  std::vector< std::pair< CString,CString > >::iterator arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< std::pair< CString,CString > >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VPair_erase",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair_erase" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VPair_erase" "', argument " "2"" of type '" "std::vector< std::pair< CString,CString > >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< std::pair< CString,CString > >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< std::pair< CString,CString > >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VPair_erase" "', argument " "2"" of type '" "std::vector< std::pair< CString,CString > >::iterator""'");
    }
  }
  result = (arg1)->erase(arg2);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::pair< CString,CString > >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair_erase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  std::vector< std::pair< CString,CString > >::iterator arg2 ;
  std::vector< std::pair< CString,CString > >::iterator arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  swig::SwigPyIterator *iter3 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< std::pair< CString,CString > >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VPair_erase",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair_erase" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VPair_erase" "', argument " "2"" of type '" "std::vector< std::pair< CString,CString > >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< std::pair< CString,CString > >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< std::pair< CString,CString > >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VPair_erase" "', argument " "2"" of type '" "std::vector< std::pair< CString,CString > >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, SWIG_as_voidptrptr(&iter3), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res3) || !iter3) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VPair_erase" "', argument " "3"" of type '" "std::vector< std::pair< CString,CString > >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< std::pair< CString,CString > >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< std::pair< CString,CString > >::iterator > *>(iter3);
    if (iter_t) {
      arg3 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VPair_erase" "', argument " "3"" of type '" "std::vector< std::pair< CString,CString > >::iterator""'");
    }
  }
  result = (arg1)->erase(arg2,arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::pair< CString,CString > >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair_erase(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< std::pair< CString,CString > >::iterator > *>(iter) != 0));
      if (_v) {
        return _wrap_VPair_erase__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< std::pair< CString,CString > >::iterator > *>(iter) != 0));
      if (_v) {
        swig::SwigPyIterator *iter = 0;
        int res = SWIG_ConvertPtr(argv[2], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
        _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< std::pair< CString,CString > >::iterator > *>(iter) != 0));
        if (_v) {
          return _wrap_VPair_erase__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'VPair_erase'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::pair< CString,CString > >::erase(std::vector< std::pair< CString,CString > >::iterator)\n"
    "    std::vector< std::pair< CString,CString > >::erase(std::vector< std::pair< CString,CString > >::iterator,std::vector< std::pair< CString,CString > >::iterator)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_VPair__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > >::size_type arg1 ;
  std::vector< std::pair< CString,CString > >::value_type *arg2 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< std::pair< CString,CString > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_VPair",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_VPair" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > >::size_type""'");
  } 
  arg1 = static_cast< std::vector< std::pair< CString,CString > >::size_type >(val1);
  {
    std::pair<CString,CString > *ptr = (std::pair<CString,CString > *)0;
    res2 = swig::asptr(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_VPair" "', argument " "2"" of type '" "std::vector< std::pair< CString,CString > >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_VPair" "', argument " "2"" of type '" "std::vector< std::pair< CString,CString > >::value_type const &""'"); 
    }
    arg2 = ptr;
  }
  result = (std::vector< std::pair< CString,CString > > *)new std::vector< std::pair< CString,CString > >(arg1,(std::vector< std::pair< CString,CString > >::value_type const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VPair(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_VPair__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_VPair__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_VPair__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = swig::asptr(argv[1], (std::pair<CString,CString >**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_VPair__SWIG_3(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_VPair'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::pair< CString,CString > >::vector()\n"
    "    std::vector< std::pair< CString,CString > >::vector(std::vector< std::pair< CString,CString > > const &)\n"
    "    std::vector< std::pair< CString,CString > >::vector(std::vector< std::pair< CString,CString > >::size_type)\n"
    "    std::vector< std::pair< CString,CString > >::vector(std::vector< std::pair< CString,CString > >::size_type,std::vector< std::pair< CString,CString > >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VPair_push_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  std::vector< std::pair< CString,CString > >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VPair_push_back",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair_push_back" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  {
    std::pair<CString,CString > *ptr = (std::pair<CString,CString > *)0;
    res2 = swig::asptr(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VPair_push_back" "', argument " "2"" of type '" "std::vector< std::pair< CString,CString > >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VPair_push_back" "', argument " "2"" of type '" "std::vector< std::pair< CString,CString > >::value_type const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->push_back((std::vector< std::pair< CString,CString > >::value_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair_front(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< std::pair< CString,CString > >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VPair_front",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair_front" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  result = (std::vector< std::pair< CString,CString > >::value_type *) &((std::vector< std::pair< CString,CString > > const *)arg1)->front();
  resultobj = swig::from(static_cast< std::pair<CString,CString > >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< std::pair< CString,CString > >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VPair_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair_back" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  result = (std::vector< std::pair< CString,CString > >::value_type *) &((std::vector< std::pair< CString,CString > > const *)arg1)->back();
  resultobj = swig::from(static_cast< std::pair<CString,CString > >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  std::vector< std::pair< CString,CString > >::size_type arg2 ;
  std::vector< std::pair< CString,CString > >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VPair_assign",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair_assign" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VPair_assign" "', argument " "2"" of type '" "std::vector< std::pair< CString,CString > >::size_type""'");
  } 
  arg2 = static_cast< std::vector< std::pair< CString,CString > >::size_type >(val2);
  {
    std::pair<CString,CString > *ptr = (std::pair<CString,CString > *)0;
    res3 = swig::asptr(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VPair_assign" "', argument " "3"" of type '" "std::vector< std::pair< CString,CString > >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VPair_assign" "', argument " "3"" of type '" "std::vector< std::pair< CString,CString > >::value_type const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->assign(arg2,(std::vector< std::pair< CString,CString > >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair_resize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  std::vector< std::pair< CString,CString > >::size_type arg2 ;
  std::vector< std::pair< CString,CString > >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VPair_resize",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair_resize" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VPair_resize" "', argument " "2"" of type '" "std::vector< std::pair< CString,CString > >::size_type""'");
  } 
  arg2 = static_cast< std::vector< std::pair< CString,CString > >::size_type >(val2);
  {
    std::pair<CString,CString > *ptr = (std::pair<CString,CString > *)0;
    res3 = swig::asptr(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VPair_resize" "', argument " "3"" of type '" "std::vector< std::pair< CString,CString > >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VPair_resize" "', argument " "3"" of type '" "std::vector< std::pair< CString,CString > >::value_type const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->resize(arg2,(std::vector< std::pair< CString,CString > >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair_resize(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_VPair_resize__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::pair<CString,CString >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_VPair_resize__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'VPair_resize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::pair< CString,CString > >::resize(std::vector< std::pair< CString,CString > >::size_type)\n"
    "    std::vector< std::pair< CString,CString > >::resize(std::vector< std::pair< CString,CString > >::size_type,std::vector< std::pair< CString,CString > >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VPair_insert__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  std::vector< std::pair< CString,CString > >::iterator arg2 ;
  std::vector< std::pair< CString,CString > >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< std::pair< CString,CString > >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VPair_insert",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair_insert" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VPair_insert" "', argument " "2"" of type '" "std::vector< std::pair< CString,CString > >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< std::pair< CString,CString > >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< std::pair< CString,CString > >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VPair_insert" "', argument " "2"" of type '" "std::vector< std::pair< CString,CString > >::iterator""'");
    }
  }
  {
    std::pair<CString,CString > *ptr = (std::pair<CString,CString > *)0;
    res3 = swig::asptr(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VPair_insert" "', argument " "3"" of type '" "std::vector< std::pair< CString,CString > >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VPair_insert" "', argument " "3"" of type '" "std::vector< std::pair< CString,CString > >::value_type const &""'"); 
    }
    arg3 = ptr;
  }
  result = (arg1)->insert(arg2,(std::vector< std::pair< CString,CString > >::value_type const &)*arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::pair< CString,CString > >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair_insert__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  std::vector< std::pair< CString,CString > >::iterator arg2 ;
  std::vector< std::pair< CString,CString > >::size_type arg3 ;
  std::vector< std::pair< CString,CString > >::value_type *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  size_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:VPair_insert",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair_insert" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VPair_insert" "', argument " "2"" of type '" "std::vector< std::pair< CString,CString > >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< std::pair< CString,CString > >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< std::pair< CString,CString > >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VPair_insert" "', argument " "2"" of type '" "std::vector< std::pair< CString,CString > >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VPair_insert" "', argument " "3"" of type '" "std::vector< std::pair< CString,CString > >::size_type""'");
  } 
  arg3 = static_cast< std::vector< std::pair< CString,CString > >::size_type >(val3);
  {
    std::pair<CString,CString > *ptr = (std::pair<CString,CString > *)0;
    res4 = swig::asptr(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "VPair_insert" "', argument " "4"" of type '" "std::vector< std::pair< CString,CString > >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VPair_insert" "', argument " "4"" of type '" "std::vector< std::pair< CString,CString > >::value_type const &""'"); 
    }
    arg4 = ptr;
  }
  (arg1)->insert(arg2,arg3,(std::vector< std::pair< CString,CString > >::value_type const &)*arg4);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair_insert(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< std::pair< CString,CString > >::iterator > *>(iter) != 0));
      if (_v) {
        int res = swig::asptr(argv[2], (std::pair<CString,CString >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_VPair_insert__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< std::pair< CString,CString > >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = swig::asptr(argv[3], (std::pair<CString,CString >**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_VPair_insert__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'VPair_insert'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::pair< CString,CString > >::insert(std::vector< std::pair< CString,CString > >::iterator,std::vector< std::pair< CString,CString > >::value_type const &)\n"
    "    std::vector< std::pair< CString,CString > >::insert(std::vector< std::pair< CString,CString > >::iterator,std::vector< std::pair< CString,CString > >::size_type,std::vector< std::pair< CString,CString > >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VPair_reserve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  std::vector< std::pair< CString,CString > >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VPair_reserve",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair_reserve" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VPair_reserve" "', argument " "2"" of type '" "std::vector< std::pair< CString,CString > >::size_type""'");
  } 
  arg2 = static_cast< std::vector< std::pair< CString,CString > >::size_type >(val2);
  (arg1)->reserve(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VPair_capacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< std::pair< CString,CString > >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VPair_capacity",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair_capacity" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  result = ((std::vector< std::pair< CString,CString > > const *)arg1)->capacity();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_VPair(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_VPair",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_VPair" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *VPair_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_VWebSubPages_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  arg2 = &obj0;
  if (!PyArg_ParseTuple(args,(char *)"O:VWebSubPages_iterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages_iterator" "', argument " "1"" of type '" "std::vector< TWebSubPage > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  result = (swig::SwigPyIterator *)std_vector_Sl_TWebSubPage_Sg__iterator(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VWebSubPages___nonzero__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages___nonzero__" "', argument " "1"" of type '" "std::vector< TWebSubPage > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  result = (bool)std_vector_Sl_TWebSubPage_Sg____nonzero__((std::vector< CSmartPtr< CWebSubPage > > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages___bool__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VWebSubPages___bool__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages___bool__" "', argument " "1"" of type '" "std::vector< TWebSubPage > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  result = (bool)std_vector_Sl_TWebSubPage_Sg____bool__((std::vector< CSmartPtr< CWebSubPage > > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< CSmartPtr< CWebSubPage > >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VWebSubPages___len__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages___len__" "', argument " "1"" of type '" "std::vector< TWebSubPage > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  result = std_vector_Sl_TWebSubPage_Sg____len__((std::vector< CSmartPtr< CWebSubPage > > const *)arg1);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages_pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< CSmartPtr< CWebSubPage > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VWebSubPages_pop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages_pop" "', argument " "1"" of type '" "std::vector< TWebSubPage > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  try {
    result = std_vector_Sl_TWebSubPage_Sg__pop(arg1);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj((new std::vector< CSmartPtr< CWebSubPage > >::value_type(static_cast< const std::vector< CSmartPtr< CWebSubPage > >::value_type& >(result))), SWIGTYPE_p_CSmartPtrT_CWebSubPage_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages___getslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  std::vector< CSmartPtr< CWebSubPage > >::difference_type arg2 ;
  std::vector< CSmartPtr< CWebSubPage > >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VWebSubPages___getslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages___getslice__" "', argument " "1"" of type '" "std::vector< TWebSubPage > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VWebSubPages___getslice__" "', argument " "2"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< CSmartPtr< CWebSubPage > >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VWebSubPages___getslice__" "', argument " "3"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< CSmartPtr< CWebSubPage > >::difference_type >(val3);
  try {
    result = (std::vector< CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > > *)std_vector_Sl_TWebSubPage_Sg____getslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages___setslice____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  std::vector< CSmartPtr< CWebSubPage > >::difference_type arg2 ;
  std::vector< CSmartPtr< CWebSubPage > >::difference_type arg3 ;
  std::vector< CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:VWebSubPages___setslice__",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages___setslice__" "', argument " "1"" of type '" "std::vector< TWebSubPage > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VWebSubPages___setslice__" "', argument " "2"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< CSmartPtr< CWebSubPage > >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VWebSubPages___setslice__" "', argument " "3"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< CSmartPtr< CWebSubPage > >::difference_type >(val3);
  {
    std::vector<CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > > *ptr = (std::vector<CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > > *)0;
    res4 = swig::asptr(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "VWebSubPages___setslice__" "', argument " "4"" of type '" "std::vector< CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VWebSubPages___setslice__" "', argument " "4"" of type '" "std::vector< CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > > const &""'"); 
    }
    arg4 = ptr;
  }
  try {
    std_vector_Sl_TWebSubPage_Sg____setslice____SWIG_0(arg1,arg2,arg3,(std::vector< CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > > const &)*arg4);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages___setslice____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  std::vector< CSmartPtr< CWebSubPage > >::difference_type arg2 ;
  std::vector< CSmartPtr< CWebSubPage > >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VWebSubPages___setslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages___setslice__" "', argument " "1"" of type '" "std::vector< TWebSubPage > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VWebSubPages___setslice__" "', argument " "2"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< CSmartPtr< CWebSubPage > >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VWebSubPages___setslice__" "', argument " "3"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< CSmartPtr< CWebSubPage > >::difference_type >(val3);
  try {
    std_vector_Sl_TWebSubPage_Sg____setslice____SWIG_0(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages___setslice__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_VWebSubPages___setslice____SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = swig::asptr(argv[3], (std::vector<CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > >**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_VWebSubPages___setslice____SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'VWebSubPages___setslice__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< TWebSubPage >::__setslice__(std::vector< CSmartPtr< CWebSubPage > >::difference_type,std::vector< CSmartPtr< CWebSubPage > >::difference_type,std::vector< CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > > const &)\n"
    "    std::vector< TWebSubPage >::__setslice__(std::vector< CSmartPtr< CWebSubPage > >::difference_type,std::vector< CSmartPtr< CWebSubPage > >::difference_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VWebSubPages___delslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  std::vector< CSmartPtr< CWebSubPage > >::difference_type arg2 ;
  std::vector< CSmartPtr< CWebSubPage > >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VWebSubPages___delslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages___delslice__" "', argument " "1"" of type '" "std::vector< TWebSubPage > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VWebSubPages___delslice__" "', argument " "2"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< CSmartPtr< CWebSubPage > >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VWebSubPages___delslice__" "', argument " "3"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< CSmartPtr< CWebSubPage > >::difference_type >(val3);
  try {
    std_vector_Sl_TWebSubPage_Sg____delslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages___delitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  std::vector< CSmartPtr< CWebSubPage > >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VWebSubPages___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages___delitem__" "', argument " "1"" of type '" "std::vector< TWebSubPage > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VWebSubPages___delitem__" "', argument " "2"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< CSmartPtr< CWebSubPage > >::difference_type >(val2);
  try {
    std_vector_Sl_TWebSubPage_Sg____delitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages___getitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VWebSubPages___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages___getitem__" "', argument " "1"" of type '" "std::vector< TWebSubPage > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VWebSubPages___getitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    result = (std::vector< CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > > *)std_vector_Sl_TWebSubPage_Sg____getitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  std::vector< CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VWebSubPages___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages___setitem__" "', argument " "1"" of type '" "std::vector< TWebSubPage > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VWebSubPages___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  {
    std::vector<CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > > *ptr = (std::vector<CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > > *)0;
    res3 = swig::asptr(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VWebSubPages___setitem__" "', argument " "3"" of type '" "std::vector< CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VWebSubPages___setitem__" "', argument " "3"" of type '" "std::vector< CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > > const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    std_vector_Sl_TWebSubPage_Sg____setitem____SWIG_0(arg1,arg2,(std::vector< CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > > const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VWebSubPages___setitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages___setitem__" "', argument " "1"" of type '" "std::vector< TWebSubPage > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VWebSubPages___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_vector_Sl_TWebSubPage_Sg____setitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages___delitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VWebSubPages___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages___delitem__" "', argument " "1"" of type '" "std::vector< TWebSubPage > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VWebSubPages___delitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_vector_Sl_TWebSubPage_Sg____delitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages___delitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_VWebSubPages___delitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_VWebSubPages___delitem____SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'VWebSubPages___delitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< TWebSubPage >::__delitem__(std::vector< CSmartPtr< CWebSubPage > >::difference_type)\n"
    "    std::vector< TWebSubPage >::__delitem__(PySliceObject *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VWebSubPages___getitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  std::vector< CSmartPtr< CWebSubPage > >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< CSmartPtr< CWebSubPage > >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VWebSubPages___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages___getitem__" "', argument " "1"" of type '" "std::vector< TWebSubPage > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VWebSubPages___getitem__" "', argument " "2"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< CSmartPtr< CWebSubPage > >::difference_type >(val2);
  try {
    result = (std::vector< CSmartPtr< CWebSubPage > >::value_type *) &std_vector_Sl_TWebSubPage_Sg____getitem____SWIG_1((std::vector< CSmartPtr< CWebSubPage > > const *)arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSmartPtrT_CWebSubPage_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages___getitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_VWebSubPages___getitem____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_VWebSubPages___getitem____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'VWebSubPages___getitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< TWebSubPage >::__getitem__(PySliceObject *)\n"
    "    std::vector< TWebSubPage >::__getitem__(std::vector< CSmartPtr< CWebSubPage > >::difference_type) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VWebSubPages___setitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  std::vector< CSmartPtr< CWebSubPage > >::difference_type arg2 ;
  std::vector< CSmartPtr< CWebSubPage > >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VWebSubPages___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages___setitem__" "', argument " "1"" of type '" "std::vector< TWebSubPage > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VWebSubPages___setitem__" "', argument " "2"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< CSmartPtr< CWebSubPage > >::difference_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CSmartPtrT_CWebSubPage_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VWebSubPages___setitem__" "', argument " "3"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::value_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VWebSubPages___setitem__" "', argument " "3"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::value_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< CSmartPtr< CWebSubPage > >::value_type * >(argp3);
  try {
    std_vector_Sl_TWebSubPage_Sg____setitem____SWIG_2(arg1,arg2,(CSmartPtr< CWebSubPage > const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages___setitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_VWebSubPages___setitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector<CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_VWebSubPages___setitem____SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_CSmartPtrT_CWebSubPage_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_VWebSubPages___setitem____SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'VWebSubPages___setitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< TWebSubPage >::__setitem__(PySliceObject *,std::vector< CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > > const &)\n"
    "    std::vector< TWebSubPage >::__setitem__(PySliceObject *)\n"
    "    std::vector< TWebSubPage >::__setitem__(std::vector< CSmartPtr< CWebSubPage > >::difference_type,std::vector< CSmartPtr< CWebSubPage > >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VWebSubPages_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  std::vector< CSmartPtr< CWebSubPage > >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VWebSubPages_append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages_append" "', argument " "1"" of type '" "std::vector< TWebSubPage > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CSmartPtrT_CWebSubPage_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VWebSubPages_append" "', argument " "2"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::value_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VWebSubPages_append" "', argument " "2"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::value_type const &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< CSmartPtr< CWebSubPage > >::value_type * >(argp2);
  std_vector_Sl_TWebSubPage_Sg__append(arg1,(CSmartPtr< CWebSubPage > const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VWebSubPages__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_VWebSubPages")) SWIG_fail;
  result = (std::vector< TWebSubPage > *)new std::vector< TWebSubPage >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VWebSubPages__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  std::vector< TWebSubPage > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_VWebSubPages",&obj0)) SWIG_fail;
  {
    std::vector<CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > > *ptr = (std::vector<CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VWebSubPages" "', argument " "1"" of type '" "std::vector< TWebSubPage > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_VWebSubPages" "', argument " "1"" of type '" "std::vector< TWebSubPage > const &""'"); 
    }
    arg1 = ptr;
  }
  result = (std::vector< TWebSubPage > *)new std::vector< TWebSubPage >((std::vector< TWebSubPage > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VWebSubPages_empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages_empty" "', argument " "1"" of type '" "std::vector< TWebSubPage > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  result = (bool)((std::vector< TWebSubPage > const *)arg1)->empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< CSmartPtr< CWebSubPage > >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VWebSubPages_size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages_size" "', argument " "1"" of type '" "std::vector< TWebSubPage > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  result = ((std::vector< TWebSubPage > const *)arg1)->size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VWebSubPages_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages_clear" "', argument " "1"" of type '" "std::vector< TWebSubPage > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages_swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  std::vector< TWebSubPage > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VWebSubPages_swap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages_swap" "', argument " "1"" of type '" "std::vector< TWebSubPage > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VWebSubPages_swap" "', argument " "2"" of type '" "std::vector< TWebSubPage > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VWebSubPages_swap" "', argument " "2"" of type '" "std::vector< TWebSubPage > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< TWebSubPage > * >(argp2);
  (arg1)->swap(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages_get_allocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::allocator< CSmartPtr< CWebSubPage > > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VWebSubPages_get_allocator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages_get_allocator" "', argument " "1"" of type '" "std::vector< TWebSubPage > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  result = ((std::vector< TWebSubPage > const *)arg1)->get_allocator();
  resultobj = SWIG_NewPointerObj((new std::vector< CSmartPtr< CWebSubPage > >::allocator_type(static_cast< const std::vector< CSmartPtr< CWebSubPage > >::allocator_type& >(result))), SWIGTYPE_p_std__allocatorT_CSmartPtrT_CWebSubPage_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::vector< CSmartPtr< CWebSubPage > >::iterator > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VWebSubPages_begin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages_begin" "', argument " "1"" of type '" "std::vector< TWebSubPage > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  result = (arg1)->begin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< CSmartPtr< CWebSubPage > >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::vector< CSmartPtr< CWebSubPage > >::iterator > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VWebSubPages_end",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages_end" "', argument " "1"" of type '" "std::vector< TWebSubPage > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  result = (arg1)->end();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< CSmartPtr< CWebSubPage > >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages_rbegin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::vector< CSmartPtr< CWebSubPage > >::reverse_iterator > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VWebSubPages_rbegin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages_rbegin" "', argument " "1"" of type '" "std::vector< TWebSubPage > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  result = (arg1)->rbegin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< CSmartPtr< CWebSubPage > >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages_rend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::vector< CSmartPtr< CWebSubPage > >::reverse_iterator > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VWebSubPages_rend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages_rend" "', argument " "1"" of type '" "std::vector< TWebSubPage > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  result = (arg1)->rend();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< CSmartPtr< CWebSubPage > >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VWebSubPages__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CSmartPtr< CWebSubPage > >::size_type arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< TWebSubPage > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_VWebSubPages",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_VWebSubPages" "', argument " "1"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::size_type""'");
  } 
  arg1 = static_cast< std::vector< CSmartPtr< CWebSubPage > >::size_type >(val1);
  result = (std::vector< TWebSubPage > *)new std::vector< TWebSubPage >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages_pop_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VWebSubPages_pop_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages_pop_back" "', argument " "1"" of type '" "std::vector< TWebSubPage > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  (arg1)->pop_back();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages_resize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  std::vector< CSmartPtr< CWebSubPage > >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VWebSubPages_resize",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages_resize" "', argument " "1"" of type '" "std::vector< TWebSubPage > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VWebSubPages_resize" "', argument " "2"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::size_type""'");
  } 
  arg2 = static_cast< std::vector< CSmartPtr< CWebSubPage > >::size_type >(val2);
  (arg1)->resize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages_erase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  SwigValueWrapper< std::vector< CSmartPtr< CWebSubPage > >::iterator > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< std::vector< CSmartPtr< CWebSubPage > >::iterator > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VWebSubPages_erase",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages_erase" "', argument " "1"" of type '" "std::vector< TWebSubPage > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VWebSubPages_erase" "', argument " "2"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< CSmartPtr< CWebSubPage > >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< CSmartPtr< CWebSubPage > >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VWebSubPages_erase" "', argument " "2"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::iterator""'");
    }
  }
  result = (arg1)->erase(arg2);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< CSmartPtr< CWebSubPage > >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages_erase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  SwigValueWrapper< std::vector< CSmartPtr< CWebSubPage > >::iterator > arg2 ;
  SwigValueWrapper< std::vector< CSmartPtr< CWebSubPage > >::iterator > arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  swig::SwigPyIterator *iter3 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  SwigValueWrapper< std::vector< CSmartPtr< CWebSubPage > >::iterator > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VWebSubPages_erase",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages_erase" "', argument " "1"" of type '" "std::vector< TWebSubPage > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VWebSubPages_erase" "', argument " "2"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< CSmartPtr< CWebSubPage > >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< CSmartPtr< CWebSubPage > >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VWebSubPages_erase" "', argument " "2"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, SWIG_as_voidptrptr(&iter3), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res3) || !iter3) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VWebSubPages_erase" "', argument " "3"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< CSmartPtr< CWebSubPage > >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< CSmartPtr< CWebSubPage > >::iterator > *>(iter3);
    if (iter_t) {
      arg3 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VWebSubPages_erase" "', argument " "3"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::iterator""'");
    }
  }
  result = (arg1)->erase(arg2,arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< CSmartPtr< CWebSubPage > >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages_erase(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< CSmartPtr< CWebSubPage > >::iterator > *>(iter) != 0));
      if (_v) {
        return _wrap_VWebSubPages_erase__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< CSmartPtr< CWebSubPage > >::iterator > *>(iter) != 0));
      if (_v) {
        swig::SwigPyIterator *iter = 0;
        int res = SWIG_ConvertPtr(argv[2], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
        _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< CSmartPtr< CWebSubPage > >::iterator > *>(iter) != 0));
        if (_v) {
          return _wrap_VWebSubPages_erase__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'VWebSubPages_erase'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< TWebSubPage >::erase(std::vector< CSmartPtr< CWebSubPage > >::iterator)\n"
    "    std::vector< TWebSubPage >::erase(std::vector< CSmartPtr< CWebSubPage > >::iterator,std::vector< CSmartPtr< CWebSubPage > >::iterator)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_VWebSubPages__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< CSmartPtr< CWebSubPage > >::size_type arg1 ;
  std::vector< CSmartPtr< CWebSubPage > >::value_type *arg2 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< TWebSubPage > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_VWebSubPages",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_VWebSubPages" "', argument " "1"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::size_type""'");
  } 
  arg1 = static_cast< std::vector< CSmartPtr< CWebSubPage > >::size_type >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CSmartPtrT_CWebSubPage_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_VWebSubPages" "', argument " "2"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::value_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_VWebSubPages" "', argument " "2"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::value_type const &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< CSmartPtr< CWebSubPage > >::value_type * >(argp2);
  result = (std::vector< TWebSubPage > *)new std::vector< TWebSubPage >(arg1,(std::vector< CSmartPtr< CWebSubPage > >::value_type const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VWebSubPages(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_VWebSubPages__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_VWebSubPages__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_VWebSubPages__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_CSmartPtrT_CWebSubPage_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_VWebSubPages__SWIG_3(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_VWebSubPages'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< TWebSubPage >::vector()\n"
    "    std::vector< TWebSubPage >::vector(std::vector< TWebSubPage > const &)\n"
    "    std::vector< TWebSubPage >::vector(std::vector< CSmartPtr< CWebSubPage > >::size_type)\n"
    "    std::vector< TWebSubPage >::vector(std::vector< CSmartPtr< CWebSubPage > >::size_type,std::vector< CSmartPtr< CWebSubPage > >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VWebSubPages_push_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  std::vector< CSmartPtr< CWebSubPage > >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VWebSubPages_push_back",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages_push_back" "', argument " "1"" of type '" "std::vector< TWebSubPage > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CSmartPtrT_CWebSubPage_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VWebSubPages_push_back" "', argument " "2"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::value_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VWebSubPages_push_back" "', argument " "2"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::value_type const &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< CSmartPtr< CWebSubPage > >::value_type * >(argp2);
  (arg1)->push_back((std::vector< CSmartPtr< CWebSubPage > >::value_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages_front(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< CSmartPtr< CWebSubPage > >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VWebSubPages_front",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages_front" "', argument " "1"" of type '" "std::vector< TWebSubPage > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  result = (std::vector< CSmartPtr< CWebSubPage > >::value_type *) &((std::vector< TWebSubPage > const *)arg1)->front();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSmartPtrT_CWebSubPage_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< CSmartPtr< CWebSubPage > >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VWebSubPages_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages_back" "', argument " "1"" of type '" "std::vector< TWebSubPage > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  result = (std::vector< CSmartPtr< CWebSubPage > >::value_type *) &((std::vector< TWebSubPage > const *)arg1)->back();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSmartPtrT_CWebSubPage_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  std::vector< CSmartPtr< CWebSubPage > >::size_type arg2 ;
  std::vector< CSmartPtr< CWebSubPage > >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VWebSubPages_assign",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages_assign" "', argument " "1"" of type '" "std::vector< TWebSubPage > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VWebSubPages_assign" "', argument " "2"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::size_type""'");
  } 
  arg2 = static_cast< std::vector< CSmartPtr< CWebSubPage > >::size_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CSmartPtrT_CWebSubPage_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VWebSubPages_assign" "', argument " "3"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::value_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VWebSubPages_assign" "', argument " "3"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::value_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< CSmartPtr< CWebSubPage > >::value_type * >(argp3);
  (arg1)->assign(arg2,(std::vector< CSmartPtr< CWebSubPage > >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages_resize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  std::vector< CSmartPtr< CWebSubPage > >::size_type arg2 ;
  std::vector< CSmartPtr< CWebSubPage > >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VWebSubPages_resize",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages_resize" "', argument " "1"" of type '" "std::vector< TWebSubPage > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VWebSubPages_resize" "', argument " "2"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::size_type""'");
  } 
  arg2 = static_cast< std::vector< CSmartPtr< CWebSubPage > >::size_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CSmartPtrT_CWebSubPage_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VWebSubPages_resize" "', argument " "3"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::value_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VWebSubPages_resize" "', argument " "3"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::value_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< CSmartPtr< CWebSubPage > >::value_type * >(argp3);
  (arg1)->resize(arg2,(std::vector< CSmartPtr< CWebSubPage > >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages_resize(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_VWebSubPages_resize__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_CSmartPtrT_CWebSubPage_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_VWebSubPages_resize__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'VWebSubPages_resize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< TWebSubPage >::resize(std::vector< CSmartPtr< CWebSubPage > >::size_type)\n"
    "    std::vector< TWebSubPage >::resize(std::vector< CSmartPtr< CWebSubPage > >::size_type,std::vector< CSmartPtr< CWebSubPage > >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VWebSubPages_insert__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  SwigValueWrapper< std::vector< CSmartPtr< CWebSubPage > >::iterator > arg2 ;
  std::vector< CSmartPtr< CWebSubPage > >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  SwigValueWrapper< std::vector< CSmartPtr< CWebSubPage > >::iterator > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VWebSubPages_insert",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages_insert" "', argument " "1"" of type '" "std::vector< TWebSubPage > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VWebSubPages_insert" "', argument " "2"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< CSmartPtr< CWebSubPage > >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< CSmartPtr< CWebSubPage > >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VWebSubPages_insert" "', argument " "2"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_CSmartPtrT_CWebSubPage_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VWebSubPages_insert" "', argument " "3"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::value_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VWebSubPages_insert" "', argument " "3"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::value_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< CSmartPtr< CWebSubPage > >::value_type * >(argp3);
  result = (arg1)->insert(arg2,(std::vector< CSmartPtr< CWebSubPage > >::value_type const &)*arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< CSmartPtr< CWebSubPage > >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages_insert__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  SwigValueWrapper< std::vector< CSmartPtr< CWebSubPage > >::iterator > arg2 ;
  std::vector< CSmartPtr< CWebSubPage > >::size_type arg3 ;
  std::vector< CSmartPtr< CWebSubPage > >::value_type *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  size_t val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:VWebSubPages_insert",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages_insert" "', argument " "1"" of type '" "std::vector< TWebSubPage > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VWebSubPages_insert" "', argument " "2"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< CSmartPtr< CWebSubPage > >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< CSmartPtr< CWebSubPage > >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VWebSubPages_insert" "', argument " "2"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VWebSubPages_insert" "', argument " "3"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::size_type""'");
  } 
  arg3 = static_cast< std::vector< CSmartPtr< CWebSubPage > >::size_type >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_CSmartPtrT_CWebSubPage_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "VWebSubPages_insert" "', argument " "4"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::value_type const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VWebSubPages_insert" "', argument " "4"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::value_type const &""'"); 
  }
  arg4 = reinterpret_cast< std::vector< CSmartPtr< CWebSubPage > >::value_type * >(argp4);
  (arg1)->insert(arg2,arg3,(std::vector< CSmartPtr< CWebSubPage > >::value_type const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages_insert(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< CSmartPtr< CWebSubPage > >::iterator > *>(iter) != 0));
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_CSmartPtrT_CWebSubPage_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_VWebSubPages_insert__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< CSmartPtr< CWebSubPage > >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_CSmartPtrT_CWebSubPage_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_VWebSubPages_insert__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'VWebSubPages_insert'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< TWebSubPage >::insert(std::vector< CSmartPtr< CWebSubPage > >::iterator,std::vector< CSmartPtr< CWebSubPage > >::value_type const &)\n"
    "    std::vector< TWebSubPage >::insert(std::vector< CSmartPtr< CWebSubPage > >::iterator,std::vector< CSmartPtr< CWebSubPage > >::size_type,std::vector< CSmartPtr< CWebSubPage > >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VWebSubPages_reserve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  std::vector< CSmartPtr< CWebSubPage > >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VWebSubPages_reserve",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages_reserve" "', argument " "1"" of type '" "std::vector< TWebSubPage > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VWebSubPages_reserve" "', argument " "2"" of type '" "std::vector< CSmartPtr< CWebSubPage > >::size_type""'");
  } 
  arg2 = static_cast< std::vector< CSmartPtr< CWebSubPage > >::size_type >(val2);
  (arg1)->reserve(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VWebSubPages_capacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< CSmartPtr< CWebSubPage > >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VWebSubPages_capacity",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages_capacity" "', argument " "1"" of type '" "std::vector< TWebSubPage > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  result = ((std::vector< TWebSubPage > const *)arg1)->capacity();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_VWebSubPages(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_VWebSubPages",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_VWebSubPages" "', argument " "1"" of type '" "std::vector< TWebSubPage > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *VWebSubPages_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_VPair_Add2Str_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VPair *arg1 = (VPair *) 0 ;
  CString *arg2 = 0 ;
  CString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VPair_Add2Str_",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair_Add2Str_" "', argument " "1"" of type '" "VPair *""'"); 
  }
  arg1 = reinterpret_cast< VPair * >(argp1);
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VPair_Add2Str_" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VPair_Add2Str_" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VPair_Add2Str_" "', argument " "3"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VPair_Add2Str_" "', argument " "3"" of type '" "CString const &""'"); 
    }
    arg3 = ptr;
  }
  VPair_Add2Str_(arg1,(CString const &)*arg2,(CString const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) free((char*)arg3);
  return NULL;
}


SWIGINTERN PyObject *_wrap_CreateWebSubPage_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CString *arg1 = 0 ;
  CString *arg2 = 0 ;
  VPair *arg3 = 0 ;
  unsigned int arg4 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  SwigValueWrapper< CSmartPtr< CWebSubPage > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CreateWebSubPage_",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    CString *ptr = (CString *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CreateWebSubPage_" "', argument " "1"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CreateWebSubPage_" "', argument " "1"" of type '" "CString const &""'"); 
    }
    arg1 = ptr;
  }
  {
    CString *ptr = (CString *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CreateWebSubPage_" "', argument " "2"" of type '" "CString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CreateWebSubPage_" "', argument " "2"" of type '" "CString const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::vector<std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > > *ptr = (std::vector<std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > > *)0;
    res3 = swig::asptr(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CreateWebSubPage_" "', argument " "3"" of type '" "VPair const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CreateWebSubPage_" "', argument " "3"" of type '" "VPair const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CreateWebSubPage_" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = CreateWebSubPage_((CString const &)*arg1,(CString const &)*arg2,(std::vector< std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > > const &)*arg3,arg4);
  resultobj = SWIG_NewPointerObj((new TWebSubPage(static_cast< const TWebSubPage& >(result))), SWIGTYPE_p_CSmartPtrT_CWebSubPage_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) free((char*)arg1);
  if (SWIG_IsNewObj(res2)) free((char*)arg2);
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


static PyMethodDef SwigMethods[] = {
	 { (char *)"SWIG_PyInstanceMethod_New", (PyCFunction)SWIG_PyInstanceMethod_New, METH_O, NULL},
	 { (char *)"delete_SwigPyIterator", _wrap_delete_SwigPyIterator, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_value", _wrap_SwigPyIterator_value, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_incr", _wrap_SwigPyIterator_incr, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_decr", _wrap_SwigPyIterator_decr, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_distance", _wrap_SwigPyIterator_distance, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_equal", _wrap_SwigPyIterator_equal, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_copy", _wrap_SwigPyIterator_copy, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_next", _wrap_SwigPyIterator_next, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___next__", _wrap_SwigPyIterator___next__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_previous", _wrap_SwigPyIterator_previous, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_advance", _wrap_SwigPyIterator_advance, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___eq__", _wrap_SwigPyIterator___eq__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___ne__", _wrap_SwigPyIterator___ne__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___iadd__", _wrap_SwigPyIterator___iadd__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___isub__", _wrap_SwigPyIterator___isub__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___add__", _wrap_SwigPyIterator___add__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___sub__", _wrap_SwigPyIterator___sub__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_swigregister", SwigPyIterator_swigregister, METH_VARARGS, NULL},
	 { (char *)"_stringlist_iterator", _wrap__stringlist_iterator, METH_VARARGS, NULL},
	 { (char *)"_stringlist___nonzero__", _wrap__stringlist___nonzero__, METH_VARARGS, NULL},
	 { (char *)"_stringlist___bool__", _wrap__stringlist___bool__, METH_VARARGS, NULL},
	 { (char *)"_stringlist___len__", _wrap__stringlist___len__, METH_VARARGS, NULL},
	 { (char *)"_stringlist_pop", _wrap__stringlist_pop, METH_VARARGS, NULL},
	 { (char *)"_stringlist___getslice__", _wrap__stringlist___getslice__, METH_VARARGS, NULL},
	 { (char *)"_stringlist___setslice__", _wrap__stringlist___setslice__, METH_VARARGS, NULL},
	 { (char *)"_stringlist___delslice__", _wrap__stringlist___delslice__, METH_VARARGS, NULL},
	 { (char *)"_stringlist___delitem__", _wrap__stringlist___delitem__, METH_VARARGS, NULL},
	 { (char *)"_stringlist___getitem__", _wrap__stringlist___getitem__, METH_VARARGS, NULL},
	 { (char *)"_stringlist___setitem__", _wrap__stringlist___setitem__, METH_VARARGS, NULL},
	 { (char *)"_stringlist_append", _wrap__stringlist_append, METH_VARARGS, NULL},
	 { (char *)"_stringlist_empty", _wrap__stringlist_empty, METH_VARARGS, NULL},
	 { (char *)"_stringlist_size", _wrap__stringlist_size, METH_VARARGS, NULL},
	 { (char *)"_stringlist_clear", _wrap__stringlist_clear, METH_VARARGS, NULL},
	 { (char *)"_stringlist_swap", _wrap__stringlist_swap, METH_VARARGS, NULL},
	 { (char *)"_stringlist_get_allocator", _wrap__stringlist_get_allocator, METH_VARARGS, NULL},
	 { (char *)"_stringlist_begin", _wrap__stringlist_begin, METH_VARARGS, NULL},
	 { (char *)"_stringlist_end", _wrap__stringlist_end, METH_VARARGS, NULL},
	 { (char *)"_stringlist_rbegin", _wrap__stringlist_rbegin, METH_VARARGS, NULL},
	 { (char *)"_stringlist_rend", _wrap__stringlist_rend, METH_VARARGS, NULL},
	 { (char *)"_stringlist_pop_back", _wrap__stringlist_pop_back, METH_VARARGS, NULL},
	 { (char *)"_stringlist_erase", _wrap__stringlist_erase, METH_VARARGS, NULL},
	 { (char *)"new__stringlist", _wrap_new__stringlist, METH_VARARGS, NULL},
	 { (char *)"_stringlist_push_back", _wrap__stringlist_push_back, METH_VARARGS, NULL},
	 { (char *)"_stringlist_front", _wrap__stringlist_front, METH_VARARGS, NULL},
	 { (char *)"_stringlist_back", _wrap__stringlist_back, METH_VARARGS, NULL},
	 { (char *)"_stringlist_assign", _wrap__stringlist_assign, METH_VARARGS, NULL},
	 { (char *)"_stringlist_resize", _wrap__stringlist_resize, METH_VARARGS, NULL},
	 { (char *)"_stringlist_insert", _wrap__stringlist_insert, METH_VARARGS, NULL},
	 { (char *)"_stringlist_pop_front", _wrap__stringlist_pop_front, METH_VARARGS, NULL},
	 { (char *)"_stringlist_push_front", _wrap__stringlist_push_front, METH_VARARGS, NULL},
	 { (char *)"_stringlist_reverse", _wrap__stringlist_reverse, METH_VARARGS, NULL},
	 { (char *)"delete__stringlist", _wrap_delete__stringlist, METH_VARARGS, NULL},
	 { (char *)"_stringlist_swigregister", _stringlist_swigregister, METH_VARARGS, NULL},
	 { (char *)"VIRCNetworks_iterator", _wrap_VIRCNetworks_iterator, METH_VARARGS, NULL},
	 { (char *)"VIRCNetworks___nonzero__", _wrap_VIRCNetworks___nonzero__, METH_VARARGS, NULL},
	 { (char *)"VIRCNetworks___bool__", _wrap_VIRCNetworks___bool__, METH_VARARGS, NULL},
	 { (char *)"VIRCNetworks___len__", _wrap_VIRCNetworks___len__, METH_VARARGS, NULL},
	 { (char *)"VIRCNetworks_pop", _wrap_VIRCNetworks_pop, METH_VARARGS, NULL},
	 { (char *)"VIRCNetworks___getslice__", _wrap_VIRCNetworks___getslice__, METH_VARARGS, NULL},
	 { (char *)"VIRCNetworks___setslice__", _wrap_VIRCNetworks___setslice__, METH_VARARGS, NULL},
	 { (char *)"VIRCNetworks___delslice__", _wrap_VIRCNetworks___delslice__, METH_VARARGS, NULL},
	 { (char *)"VIRCNetworks___delitem__", _wrap_VIRCNetworks___delitem__, METH_VARARGS, NULL},
	 { (char *)"VIRCNetworks___getitem__", _wrap_VIRCNetworks___getitem__, METH_VARARGS, NULL},
	 { (char *)"VIRCNetworks___setitem__", _wrap_VIRCNetworks___setitem__, METH_VARARGS, NULL},
	 { (char *)"VIRCNetworks_append", _wrap_VIRCNetworks_append, METH_VARARGS, NULL},
	 { (char *)"VIRCNetworks_empty", _wrap_VIRCNetworks_empty, METH_VARARGS, NULL},
	 { (char *)"VIRCNetworks_size", _wrap_VIRCNetworks_size, METH_VARARGS, NULL},
	 { (char *)"VIRCNetworks_clear", _wrap_VIRCNetworks_clear, METH_VARARGS, NULL},
	 { (char *)"VIRCNetworks_swap", _wrap_VIRCNetworks_swap, METH_VARARGS, NULL},
	 { (char *)"VIRCNetworks_get_allocator", _wrap_VIRCNetworks_get_allocator, METH_VARARGS, NULL},
	 { (char *)"VIRCNetworks_begin", _wrap_VIRCNetworks_begin, METH_VARARGS, NULL},
	 { (char *)"VIRCNetworks_end", _wrap_VIRCNetworks_end, METH_VARARGS, NULL},
	 { (char *)"VIRCNetworks_rbegin", _wrap_VIRCNetworks_rbegin, METH_VARARGS, NULL},
	 { (char *)"VIRCNetworks_rend", _wrap_VIRCNetworks_rend, METH_VARARGS, NULL},
	 { (char *)"VIRCNetworks_pop_back", _wrap_VIRCNetworks_pop_back, METH_VARARGS, NULL},
	 { (char *)"VIRCNetworks_erase", _wrap_VIRCNetworks_erase, METH_VARARGS, NULL},
	 { (char *)"new_VIRCNetworks", _wrap_new_VIRCNetworks, METH_VARARGS, NULL},
	 { (char *)"VIRCNetworks_push_back", _wrap_VIRCNetworks_push_back, METH_VARARGS, NULL},
	 { (char *)"VIRCNetworks_front", _wrap_VIRCNetworks_front, METH_VARARGS, NULL},
	 { (char *)"VIRCNetworks_back", _wrap_VIRCNetworks_back, METH_VARARGS, NULL},
	 { (char *)"VIRCNetworks_assign", _wrap_VIRCNetworks_assign, METH_VARARGS, NULL},
	 { (char *)"VIRCNetworks_resize", _wrap_VIRCNetworks_resize, METH_VARARGS, NULL},
	 { (char *)"VIRCNetworks_insert", _wrap_VIRCNetworks_insert, METH_VARARGS, NULL},
	 { (char *)"VIRCNetworks_reserve", _wrap_VIRCNetworks_reserve, METH_VARARGS, NULL},
	 { (char *)"VIRCNetworks_capacity", _wrap_VIRCNetworks_capacity, METH_VARARGS, NULL},
	 { (char *)"delete_VIRCNetworks", _wrap_delete_VIRCNetworks, METH_VARARGS, NULL},
	 { (char *)"VIRCNetworks_swigregister", VIRCNetworks_swigregister, METH_VARARGS, NULL},
	 { (char *)"VChannels_iterator", _wrap_VChannels_iterator, METH_VARARGS, NULL},
	 { (char *)"VChannels___nonzero__", _wrap_VChannels___nonzero__, METH_VARARGS, NULL},
	 { (char *)"VChannels___bool__", _wrap_VChannels___bool__, METH_VARARGS, NULL},
	 { (char *)"VChannels___len__", _wrap_VChannels___len__, METH_VARARGS, NULL},
	 { (char *)"VChannels_pop", _wrap_VChannels_pop, METH_VARARGS, NULL},
	 { (char *)"VChannels___getslice__", _wrap_VChannels___getslice__, METH_VARARGS, NULL},
	 { (char *)"VChannels___setslice__", _wrap_VChannels___setslice__, METH_VARARGS, NULL},
	 { (char *)"VChannels___delslice__", _wrap_VChannels___delslice__, METH_VARARGS, NULL},
	 { (char *)"VChannels___delitem__", _wrap_VChannels___delitem__, METH_VARARGS, NULL},
	 { (char *)"VChannels___getitem__", _wrap_VChannels___getitem__, METH_VARARGS, NULL},
	 { (char *)"VChannels___setitem__", _wrap_VChannels___setitem__, METH_VARARGS, NULL},
	 { (char *)"VChannels_append", _wrap_VChannels_append, METH_VARARGS, NULL},
	 { (char *)"VChannels_empty", _wrap_VChannels_empty, METH_VARARGS, NULL},
	 { (char *)"VChannels_size", _wrap_VChannels_size, METH_VARARGS, NULL},
	 { (char *)"VChannels_clear", _wrap_VChannels_clear, METH_VARARGS, NULL},
	 { (char *)"VChannels_swap", _wrap_VChannels_swap, METH_VARARGS, NULL},
	 { (char *)"VChannels_get_allocator", _wrap_VChannels_get_allocator, METH_VARARGS, NULL},
	 { (char *)"VChannels_begin", _wrap_VChannels_begin, METH_VARARGS, NULL},
	 { (char *)"VChannels_end", _wrap_VChannels_end, METH_VARARGS, NULL},
	 { (char *)"VChannels_rbegin", _wrap_VChannels_rbegin, METH_VARARGS, NULL},
	 { (char *)"VChannels_rend", _wrap_VChannels_rend, METH_VARARGS, NULL},
	 { (char *)"VChannels_pop_back", _wrap_VChannels_pop_back, METH_VARARGS, NULL},
	 { (char *)"VChannels_erase", _wrap_VChannels_erase, METH_VARARGS, NULL},
	 { (char *)"new_VChannels", _wrap_new_VChannels, METH_VARARGS, NULL},
	 { (char *)"VChannels_push_back", _wrap_VChannels_push_back, METH_VARARGS, NULL},
	 { (char *)"VChannels_front", _wrap_VChannels_front, METH_VARARGS, NULL},
	 { (char *)"VChannels_back", _wrap_VChannels_back, METH_VARARGS, NULL},
	 { (char *)"VChannels_assign", _wrap_VChannels_assign, METH_VARARGS, NULL},
	 { (char *)"VChannels_resize", _wrap_VChannels_resize, METH_VARARGS, NULL},
	 { (char *)"VChannels_insert", _wrap_VChannels_insert, METH_VARARGS, NULL},
	 { (char *)"VChannels_reserve", _wrap_VChannels_reserve, METH_VARARGS, NULL},
	 { (char *)"VChannels_capacity", _wrap_VChannels_capacity, METH_VARARGS, NULL},
	 { (char *)"delete_VChannels", _wrap_delete_VChannels, METH_VARARGS, NULL},
	 { (char *)"VChannels_swigregister", VChannels_swigregister, METH_VARARGS, NULL},
	 { (char *)"MNicks_iterator", _wrap_MNicks_iterator, METH_VARARGS, NULL},
	 { (char *)"MNicks___nonzero__", _wrap_MNicks___nonzero__, METH_VARARGS, NULL},
	 { (char *)"MNicks___bool__", _wrap_MNicks___bool__, METH_VARARGS, NULL},
	 { (char *)"MNicks___len__", _wrap_MNicks___len__, METH_VARARGS, NULL},
	 { (char *)"MNicks___getitem__", _wrap_MNicks___getitem__, METH_VARARGS, NULL},
	 { (char *)"MNicks___delitem__", _wrap_MNicks___delitem__, METH_VARARGS, NULL},
	 { (char *)"MNicks_has_key", _wrap_MNicks_has_key, METH_VARARGS, NULL},
	 { (char *)"MNicks_keys", _wrap_MNicks_keys, METH_VARARGS, NULL},
	 { (char *)"MNicks_values", _wrap_MNicks_values, METH_VARARGS, NULL},
	 { (char *)"MNicks_items", _wrap_MNicks_items, METH_VARARGS, NULL},
	 { (char *)"MNicks___contains__", _wrap_MNicks___contains__, METH_VARARGS, NULL},
	 { (char *)"MNicks_key_iterator", _wrap_MNicks_key_iterator, METH_VARARGS, NULL},
	 { (char *)"MNicks_value_iterator", _wrap_MNicks_value_iterator, METH_VARARGS, NULL},
	 { (char *)"MNicks___setitem__", _wrap_MNicks___setitem__, METH_VARARGS, NULL},
	 { (char *)"MNicks_asdict", _wrap_MNicks_asdict, METH_VARARGS, NULL},
	 { (char *)"new_MNicks", _wrap_new_MNicks, METH_VARARGS, NULL},
	 { (char *)"MNicks_empty", _wrap_MNicks_empty, METH_VARARGS, NULL},
	 { (char *)"MNicks_size", _wrap_MNicks_size, METH_VARARGS, NULL},
	 { (char *)"MNicks_clear", _wrap_MNicks_clear, METH_VARARGS, NULL},
	 { (char *)"MNicks_swap", _wrap_MNicks_swap, METH_VARARGS, NULL},
	 { (char *)"MNicks_get_allocator", _wrap_MNicks_get_allocator, METH_VARARGS, NULL},
	 { (char *)"MNicks_begin", _wrap_MNicks_begin, METH_VARARGS, NULL},
	 { (char *)"MNicks_end", _wrap_MNicks_end, METH_VARARGS, NULL},
	 { (char *)"MNicks_rbegin", _wrap_MNicks_rbegin, METH_VARARGS, NULL},
	 { (char *)"MNicks_rend", _wrap_MNicks_rend, METH_VARARGS, NULL},
	 { (char *)"MNicks_count", _wrap_MNicks_count, METH_VARARGS, NULL},
	 { (char *)"MNicks_erase", _wrap_MNicks_erase, METH_VARARGS, NULL},
	 { (char *)"MNicks_find", _wrap_MNicks_find, METH_VARARGS, NULL},
	 { (char *)"MNicks_lower_bound", _wrap_MNicks_lower_bound, METH_VARARGS, NULL},
	 { (char *)"MNicks_upper_bound", _wrap_MNicks_upper_bound, METH_VARARGS, NULL},
	 { (char *)"delete_MNicks", _wrap_delete_MNicks, METH_VARARGS, NULL},
	 { (char *)"MNicks_swigregister", MNicks_swigregister, METH_VARARGS, NULL},
	 { (char *)"SetFdCloseOnExec", _wrap_SetFdCloseOnExec, METH_VARARGS, NULL},
	 { (char *)"new_CUtils", _wrap_new_CUtils, METH_VARARGS, NULL},
	 { (char *)"delete_CUtils", _wrap_delete_CUtils, METH_VARARGS, NULL},
	 { (char *)"CUtils_GetIP", _wrap_CUtils_GetIP, METH_VARARGS, NULL},
	 { (char *)"CUtils_GetLongIP", _wrap_CUtils_GetLongIP, METH_VARARGS, NULL},
	 { (char *)"CUtils_PrintError", _wrap_CUtils_PrintError, METH_VARARGS, NULL},
	 { (char *)"CUtils_PrintMessage", _wrap_CUtils_PrintMessage, METH_VARARGS, NULL},
	 { (char *)"CUtils_PrintPrompt", _wrap_CUtils_PrintPrompt, METH_VARARGS, NULL},
	 { (char *)"CUtils_PrintAction", _wrap_CUtils_PrintAction, METH_VARARGS, NULL},
	 { (char *)"CUtils_PrintStatus", _wrap_CUtils_PrintStatus, METH_VARARGS, NULL},
	 { (char *)"CUtils_GetSaltedHashPass", _wrap_CUtils_GetSaltedHashPass, METH_VARARGS, NULL},
	 { (char *)"CUtils_GetSalt", _wrap_CUtils_GetSalt, METH_VARARGS, NULL},
	 { (char *)"CUtils_SaltedMD5Hash", _wrap_CUtils_SaltedMD5Hash, METH_VARARGS, NULL},
	 { (char *)"CUtils_SaltedSHA256Hash", _wrap_CUtils_SaltedSHA256Hash, METH_VARARGS, NULL},
	 { (char *)"CUtils_GetPass", _wrap_CUtils_GetPass, METH_VARARGS, NULL},
	 { (char *)"CUtils_GetInput", _wrap_CUtils_GetInput, METH_VARARGS, NULL},
	 { (char *)"CUtils_GetBoolInput", _wrap_CUtils_GetBoolInput, METH_VARARGS, NULL},
	 { (char *)"CUtils_GetNumInput", _wrap_CUtils_GetNumInput, METH_VARARGS, NULL},
	 { (char *)"CUtils_GetMillTime", _wrap_CUtils_GetMillTime, METH_VARARGS, NULL},
	 { (char *)"CUtils_CTime", _wrap_CUtils_CTime, METH_VARARGS, NULL},
	 { (char *)"CUtils_FormatTime", _wrap_CUtils_FormatTime, METH_VARARGS, NULL},
	 { (char *)"CUtils_GetTimezones", _wrap_CUtils_GetTimezones, METH_VARARGS, NULL},
	 { (char *)"CUtils_swigregister", CUtils_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CException", _wrap_new_CException, METH_VARARGS, NULL},
	 { (char *)"delete_CException", _wrap_delete_CException, METH_VARARGS, NULL},
	 { (char *)"CException_GetType", _wrap_CException_GetType, METH_VARARGS, NULL},
	 { (char *)"CException_swigregister", CException_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CTable", _wrap_new_CTable, METH_VARARGS, NULL},
	 { (char *)"delete_CTable", _wrap_delete_CTable, METH_VARARGS, NULL},
	 { (char *)"CTable_AddColumn", _wrap_CTable_AddColumn, METH_VARARGS, NULL},
	 { (char *)"CTable_AddRow", _wrap_CTable_AddRow, METH_VARARGS, NULL},
	 { (char *)"CTable_SetCell", _wrap_CTable_SetCell, METH_VARARGS, NULL},
	 { (char *)"CTable_GetLine", _wrap_CTable_GetLine, METH_VARARGS, NULL},
	 { (char *)"CTable_GetColumnWidth", _wrap_CTable_GetColumnWidth, METH_VARARGS, NULL},
	 { (char *)"CTable_Clear", _wrap_CTable_Clear, METH_VARARGS, NULL},
	 { (char *)"CTable_swigregister", CTable_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CConfigEntry", _wrap_new_CConfigEntry, METH_VARARGS, NULL},
	 { (char *)"delete_CConfigEntry", _wrap_delete_CConfigEntry, METH_VARARGS, NULL},
	 { (char *)"CConfigEntry_m_pSubConfig_set", _wrap_CConfigEntry_m_pSubConfig_set, METH_VARARGS, NULL},
	 { (char *)"CConfigEntry_m_pSubConfig_get", _wrap_CConfigEntry_m_pSubConfig_get, METH_VARARGS, NULL},
	 { (char *)"CConfigEntry_swigregister", CConfigEntry_swigregister, METH_VARARGS, NULL},
	 { (char *)"CConfig_BeginEntries", _wrap_CConfig_BeginEntries, METH_VARARGS, NULL},
	 { (char *)"CConfig_EndEntries", _wrap_CConfig_EndEntries, METH_VARARGS, NULL},
	 { (char *)"CConfig_BeginSubConfigs", _wrap_CConfig_BeginSubConfigs, METH_VARARGS, NULL},
	 { (char *)"CConfig_EndSubConfigs", _wrap_CConfig_EndSubConfigs, METH_VARARGS, NULL},
	 { (char *)"CConfig_AddKeyValuePair", _wrap_CConfig_AddKeyValuePair, METH_VARARGS, NULL},
	 { (char *)"CConfig_AddSubConfig", _wrap_CConfig_AddSubConfig, METH_VARARGS, NULL},
	 { (char *)"CConfig_FindStringVector", _wrap_CConfig_FindStringVector, METH_VARARGS, NULL},
	 { (char *)"CConfig_FindStringEntry", _wrap_CConfig_FindStringEntry, METH_VARARGS, NULL},
	 { (char *)"CConfig_FindBoolEntry", _wrap_CConfig_FindBoolEntry, METH_VARARGS, NULL},
	 { (char *)"CConfig_FindUIntEntry", _wrap_CConfig_FindUIntEntry, METH_VARARGS, NULL},
	 { (char *)"CConfig_FindDoubleEntry", _wrap_CConfig_FindDoubleEntry, METH_VARARGS, NULL},
	 { (char *)"CConfig_FindSubConfig", _wrap_CConfig_FindSubConfig, METH_VARARGS, NULL},
	 { (char *)"CConfig_empty", _wrap_CConfig_empty, METH_VARARGS, NULL},
	 { (char *)"CConfig_Parse", _wrap_CConfig_Parse, METH_VARARGS, NULL},
	 { (char *)"CConfig_Write", _wrap_CConfig_Write, METH_VARARGS, NULL},
	 { (char *)"new_CConfig", _wrap_new_CConfig, METH_VARARGS, NULL},
	 { (char *)"delete_CConfig", _wrap_delete_CConfig, METH_VARARGS, NULL},
	 { (char *)"CConfig_swigregister", CConfig_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CSCharBuffer", _wrap_new_CSCharBuffer, METH_VARARGS, NULL},
	 { (char *)"delete_CSCharBuffer", _wrap_delete_CSCharBuffer, METH_VARARGS, NULL},
	 { (char *)"CSCharBuffer___call__", _wrap_CSCharBuffer___call__, METH_VARARGS, NULL},
	 { (char *)"CSCharBuffer_swigregister", CSCharBuffer_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CSSockAddr", _wrap_new_CSSockAddr, METH_VARARGS, NULL},
	 { (char *)"delete_CSSockAddr", _wrap_delete_CSSockAddr, METH_VARARGS, NULL},
	 { (char *)"CSSockAddr_SinFamily", _wrap_CSSockAddr_SinFamily, METH_VARARGS, NULL},
	 { (char *)"CSSockAddr_SinPort", _wrap_CSSockAddr_SinPort, METH_VARARGS, NULL},
	 { (char *)"CSSockAddr_SetIPv6", _wrap_CSSockAddr_SetIPv6, METH_VARARGS, NULL},
	 { (char *)"CSSockAddr_GetIPv6", _wrap_CSSockAddr_GetIPv6, METH_VARARGS, NULL},
	 { (char *)"CSSockAddr_GetSockAddrLen", _wrap_CSSockAddr_GetSockAddrLen, METH_VARARGS, NULL},
	 { (char *)"CSSockAddr_GetSockAddr", _wrap_CSSockAddr_GetSockAddr, METH_VARARGS, NULL},
	 { (char *)"CSSockAddr_GetAddr", _wrap_CSSockAddr_GetAddr, METH_VARARGS, NULL},
	 { (char *)"CSSockAddr_SetAFRequire", _wrap_CSSockAddr_SetAFRequire, METH_VARARGS, NULL},
	 { (char *)"CSSockAddr_GetAFRequire", _wrap_CSSockAddr_GetAFRequire, METH_VARARGS, NULL},
	 { (char *)"CSSockAddr_swigregister", CSSockAddr_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CGetAddrInfo", _wrap_new_CGetAddrInfo, METH_VARARGS, NULL},
	 { (char *)"delete_CGetAddrInfo", _wrap_delete_CGetAddrInfo, METH_VARARGS, NULL},
	 { (char *)"CGetAddrInfo_Init", _wrap_CGetAddrInfo_Init, METH_VARARGS, NULL},
	 { (char *)"CGetAddrInfo_Process", _wrap_CGetAddrInfo_Process, METH_VARARGS, NULL},
	 { (char *)"CGetAddrInfo_Finish", _wrap_CGetAddrInfo_Finish, METH_VARARGS, NULL},
	 { (char *)"CGetAddrInfo_swigregister", CGetAddrInfo_swigregister, METH_VARARGS, NULL},
	 { (char *)"GetAddrInfo", _wrap_GetAddrInfo, METH_VARARGS, NULL},
	 { (char *)"GetCsockClassIdx", _wrap_GetCsockClassIdx, METH_VARARGS, NULL},
	 { (char *)"InitCsocket", _wrap_InitCsocket, METH_VARARGS, NULL},
	 { (char *)"ShutdownCsocket", _wrap_ShutdownCsocket, METH_VARARGS, NULL},
	 { (char *)"GetSockError", _wrap_GetSockError, METH_VARARGS, NULL},
	 { (char *)"TFD_ZERO", _wrap_TFD_ZERO, METH_VARARGS, NULL},
	 { (char *)"TFD_SET", _wrap_TFD_SET, METH_VARARGS, NULL},
	 { (char *)"TFD_ISSET", _wrap_TFD_ISSET, METH_VARARGS, NULL},
	 { (char *)"TFD_CLR", _wrap_TFD_CLR, METH_VARARGS, NULL},
	 { (char *)"__Perror", _wrap___Perror, METH_VARARGS, NULL},
	 { (char *)"millitime", _wrap_millitime, METH_VARARGS, NULL},
	 { (char *)"new_CCron", _wrap_new_CCron, METH_VARARGS, NULL},
	 { (char *)"delete_CCron", _wrap_delete_CCron, METH_VARARGS, NULL},
	 { (char *)"CCron_run", _wrap_CCron_run, METH_VARARGS, NULL},
	 { (char *)"CCron_StartMaxCycles", _wrap_CCron_StartMaxCycles, METH_VARARGS, NULL},
	 { (char *)"CCron_Start", _wrap_CCron_Start, METH_VARARGS, NULL},
	 { (char *)"CCron_Stop", _wrap_CCron_Stop, METH_VARARGS, NULL},
	 { (char *)"CCron_Pause", _wrap_CCron_Pause, METH_VARARGS, NULL},
	 { (char *)"CCron_UnPause", _wrap_CCron_UnPause, METH_VARARGS, NULL},
	 { (char *)"CCron_GetInterval", _wrap_CCron_GetInterval, METH_VARARGS, NULL},
	 { (char *)"CCron_GetMaxCycles", _wrap_CCron_GetMaxCycles, METH_VARARGS, NULL},
	 { (char *)"CCron_GetCyclesLeft", _wrap_CCron_GetCyclesLeft, METH_VARARGS, NULL},
	 { (char *)"CCron_isValid", _wrap_CCron_isValid, METH_VARARGS, NULL},
	 { (char *)"CCron_GetName", _wrap_CCron_GetName, METH_VARARGS, NULL},
	 { (char *)"CCron_SetName", _wrap_CCron_SetName, METH_VARARGS, NULL},
	 { (char *)"CCron_GetNextRun", _wrap_CCron_GetNextRun, METH_VARARGS, NULL},
	 { (char *)"CCron_RunJob", _wrap_CCron_RunJob, METH_VARARGS, NULL},
	 { (char *)"CCron_swigregister", CCron_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CSMonitorFD", _wrap_new_CSMonitorFD, METH_VARARGS, NULL},
	 { (char *)"delete_CSMonitorFD", _wrap_delete_CSMonitorFD, METH_VARARGS, NULL},
	 { (char *)"CSMonitorFD_GatherFDsForSelect", _wrap_CSMonitorFD_GatherFDsForSelect, METH_VARARGS, NULL},
	 { (char *)"CSMonitorFD_FDsThatTriggered", _wrap_CSMonitorFD_FDsThatTriggered, METH_VARARGS, NULL},
	 { (char *)"CSMonitorFD_CheckFDs", _wrap_CSMonitorFD_CheckFDs, METH_VARARGS, NULL},
	 { (char *)"CSMonitorFD_Add", _wrap_CSMonitorFD_Add, METH_VARARGS, NULL},
	 { (char *)"CSMonitorFD_Remove", _wrap_CSMonitorFD_Remove, METH_VARARGS, NULL},
	 { (char *)"CSMonitorFD_DisableMonitor", _wrap_CSMonitorFD_DisableMonitor, METH_VARARGS, NULL},
	 { (char *)"CSMonitorFD_IsEnabled", _wrap_CSMonitorFD_IsEnabled, METH_VARARGS, NULL},
	 { (char *)"CSMonitorFD_swigregister", CSMonitorFD_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CSockCommon", _wrap_new_CSockCommon, METH_VARARGS, NULL},
	 { (char *)"delete_CSockCommon", _wrap_delete_CSockCommon, METH_VARARGS, NULL},
	 { (char *)"CSockCommon_CleanupCrons", _wrap_CSockCommon_CleanupCrons, METH_VARARGS, NULL},
	 { (char *)"CSockCommon_CleanupFDMonitors", _wrap_CSockCommon_CleanupFDMonitors, METH_VARARGS, NULL},
	 { (char *)"CSockCommon_GetCrons", _wrap_CSockCommon_GetCrons, METH_VARARGS, NULL},
	 { (char *)"CSockCommon_Cron", _wrap_CSockCommon_Cron, METH_VARARGS, NULL},
	 { (char *)"CSockCommon_AddCron", _wrap_CSockCommon_AddCron, METH_VARARGS, NULL},
	 { (char *)"CSockCommon_DelCron", _wrap_CSockCommon_DelCron, METH_VARARGS, NULL},
	 { (char *)"CSockCommon_DelCronByAddr", _wrap_CSockCommon_DelCronByAddr, METH_VARARGS, NULL},
	 { (char *)"CSockCommon_CheckFDs", _wrap_CSockCommon_CheckFDs, METH_VARARGS, NULL},
	 { (char *)"CSockCommon_AssignFDs", _wrap_CSockCommon_AssignFDs, METH_VARARGS, NULL},
	 { (char *)"CSockCommon_MonitorFD", _wrap_CSockCommon_MonitorFD, METH_VARARGS, NULL},
	 { (char *)"CSockCommon_swigregister", CSockCommon_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Csock", _wrap_new_Csock, METH_VARARGS, NULL},
	 { (char *)"Csock_GetSockObj", _wrap_Csock_GetSockObj, METH_VARARGS, NULL},
	 { (char *)"delete_Csock", _wrap_delete_Csock, METH_VARARGS, NULL},
	 { (char *)"Csock_Dereference", _wrap_Csock_Dereference, METH_VARARGS, NULL},
	 { (char *)"Csock_Copy", _wrap_Csock_Copy, METH_VARARGS, NULL},
	 { (char *)"Csock___lshift__", _wrap_Csock___lshift__, METH_VARARGS, NULL},
	 { (char *)"Csock_Connect", _wrap_Csock_Connect, METH_VARARGS, NULL},
	 { (char *)"Csock_Listen", _wrap_Csock_Listen, METH_VARARGS, NULL},
	 { (char *)"Csock_Accept", _wrap_Csock_Accept, METH_VARARGS, NULL},
	 { (char *)"Csock_AcceptSSL", _wrap_Csock_AcceptSSL, METH_VARARGS, NULL},
	 { (char *)"Csock_SSLClientSetup", _wrap_Csock_SSLClientSetup, METH_VARARGS, NULL},
	 { (char *)"Csock_SSLServerSetup", _wrap_Csock_SSLServerSetup, METH_VARARGS, NULL},
	 { (char *)"Csock_ConnectSSL", _wrap_Csock_ConnectSSL, METH_VARARGS, NULL},
	 { (char *)"Csock_StartTLS", _wrap_Csock_StartTLS, METH_VARARGS, NULL},
	 { (char *)"Csock_Write", _wrap_Csock_Write, METH_VARARGS, NULL},
	 { (char *)"Csock_Read", _wrap_Csock_Read, METH_VARARGS, NULL},
	 { (char *)"Csock_GetLocalIP", _wrap_Csock_GetLocalIP, METH_VARARGS, NULL},
	 { (char *)"Csock_GetRemoteIP", _wrap_Csock_GetRemoteIP, METH_VARARGS, NULL},
	 { (char *)"Csock_IsConnected", _wrap_Csock_IsConnected, METH_VARARGS, NULL},
	 { (char *)"Csock_SetIsConnected", _wrap_Csock_SetIsConnected, METH_VARARGS, NULL},
	 { (char *)"Csock_GetRSock", _wrap_Csock_GetRSock, METH_VARARGS, NULL},
	 { (char *)"Csock_SetRSock", _wrap_Csock_SetRSock, METH_VARARGS, NULL},
	 { (char *)"Csock_GetWSock", _wrap_Csock_GetWSock, METH_VARARGS, NULL},
	 { (char *)"Csock_SetWSock", _wrap_Csock_SetWSock, METH_VARARGS, NULL},
	 { (char *)"Csock_SetSock", _wrap_Csock_SetSock, METH_VARARGS, NULL},
	 { (char *)"Csock_GetSock", _wrap_Csock_GetSock, METH_VARARGS, NULL},
	 { (char *)"Csock_CallSockError", _wrap_Csock_CallSockError, METH_VARARGS, NULL},
	 { (char *)"Csock_ResetTimer", _wrap_Csock_ResetTimer, METH_VARARGS, NULL},
	 { (char *)"Csock_PauseRead", _wrap_Csock_PauseRead, METH_VARARGS, NULL},
	 { (char *)"Csock_UnPauseRead", _wrap_Csock_UnPauseRead, METH_VARARGS, NULL},
	 { (char *)"Csock_IsReadPaused", _wrap_Csock_IsReadPaused, METH_VARARGS, NULL},
	 { (char *)"Csock_SetTimeout", _wrap_Csock_SetTimeout, METH_VARARGS, NULL},
	 { (char *)"Csock_SetTimeoutType", _wrap_Csock_SetTimeoutType, METH_VARARGS, NULL},
	 { (char *)"Csock_GetTimeout", _wrap_Csock_GetTimeout, METH_VARARGS, NULL},
	 { (char *)"Csock_GetTimeoutType", _wrap_Csock_GetTimeoutType, METH_VARARGS, NULL},
	 { (char *)"Csock_CheckTimeout", _wrap_Csock_CheckTimeout, METH_VARARGS, NULL},
	 { (char *)"Csock_PushBuff", _wrap_Csock_PushBuff, METH_VARARGS, NULL},
	 { (char *)"Csock_GetInternalReadBuffer", _wrap_Csock_GetInternalReadBuffer, METH_VARARGS, NULL},
	 { (char *)"Csock_GetInternalWriteBuffer", _wrap_Csock_GetInternalWriteBuffer, METH_VARARGS, NULL},
	 { (char *)"Csock_SetMaxBufferThreshold", _wrap_Csock_SetMaxBufferThreshold, METH_VARARGS, NULL},
	 { (char *)"Csock_GetMaxBufferThreshold", _wrap_Csock_GetMaxBufferThreshold, METH_VARARGS, NULL},
	 { (char *)"Csock_GetType", _wrap_Csock_GetType, METH_VARARGS, NULL},
	 { (char *)"Csock_SetType", _wrap_Csock_SetType, METH_VARARGS, NULL},
	 { (char *)"Csock_GetSockName", _wrap_Csock_GetSockName, METH_VARARGS, NULL},
	 { (char *)"Csock_SetSockName", _wrap_Csock_SetSockName, METH_VARARGS, NULL},
	 { (char *)"Csock_GetHostName", _wrap_Csock_GetHostName, METH_VARARGS, NULL},
	 { (char *)"Csock_SetHostName", _wrap_Csock_SetHostName, METH_VARARGS, NULL},
	 { (char *)"Csock_GetStartTime", _wrap_Csock_GetStartTime, METH_VARARGS, NULL},
	 { (char *)"Csock_ResetStartTime", _wrap_Csock_ResetStartTime, METH_VARARGS, NULL},
	 { (char *)"Csock_GetBytesRead", _wrap_Csock_GetBytesRead, METH_VARARGS, NULL},
	 { (char *)"Csock_ResetBytesRead", _wrap_Csock_ResetBytesRead, METH_VARARGS, NULL},
	 { (char *)"Csock_GetBytesWritten", _wrap_Csock_GetBytesWritten, METH_VARARGS, NULL},
	 { (char *)"Csock_ResetBytesWritten", _wrap_Csock_ResetBytesWritten, METH_VARARGS, NULL},
	 { (char *)"Csock_GetAvgRead", _wrap_Csock_GetAvgRead, METH_VARARGS, NULL},
	 { (char *)"Csock_GetAvgWrite", _wrap_Csock_GetAvgWrite, METH_VARARGS, NULL},
	 { (char *)"Csock_GetRemotePort", _wrap_Csock_GetRemotePort, METH_VARARGS, NULL},
	 { (char *)"Csock_GetLocalPort", _wrap_Csock_GetLocalPort, METH_VARARGS, NULL},
	 { (char *)"Csock_GetPort", _wrap_Csock_GetPort, METH_VARARGS, NULL},
	 { (char *)"Csock_SetPort", _wrap_Csock_SetPort, METH_VARARGS, NULL},
	 { (char *)"Csock_Close", _wrap_Csock_Close, METH_VARARGS, NULL},
	 { (char *)"Csock_GetCloseType", _wrap_Csock_GetCloseType, METH_VARARGS, NULL},
	 { (char *)"Csock_IsClosed", _wrap_Csock_IsClosed, METH_VARARGS, NULL},
	 { (char *)"Csock_NonBlockingIO", _wrap_Csock_NonBlockingIO, METH_VARARGS, NULL},
	 { (char *)"Csock_GetSSL", _wrap_Csock_GetSSL, METH_VARARGS, NULL},
	 { (char *)"Csock_SetSSL", _wrap_Csock_SetSSL, METH_VARARGS, NULL},
	 { (char *)"Csock_GetWriteBuffer", _wrap_Csock_GetWriteBuffer, METH_VARARGS, NULL},
	 { (char *)"Csock_ClearWriteBuffer", _wrap_Csock_ClearWriteBuffer, METH_VARARGS, NULL},
	 { (char *)"Csock_SslIsEstablished", _wrap_Csock_SslIsEstablished, METH_VARARGS, NULL},
	 { (char *)"Csock_ConnectInetd", _wrap_Csock_ConnectInetd, METH_VARARGS, NULL},
	 { (char *)"Csock_ConnectFD", _wrap_Csock_ConnectFD, METH_VARARGS, NULL},
	 { (char *)"Csock_SetParentSockName", _wrap_Csock_SetParentSockName, METH_VARARGS, NULL},
	 { (char *)"Csock_GetParentSockName", _wrap_Csock_GetParentSockName, METH_VARARGS, NULL},
	 { (char *)"Csock_SetRate", _wrap_Csock_SetRate, METH_VARARGS, NULL},
	 { (char *)"Csock_GetRateBytes", _wrap_Csock_GetRateBytes, METH_VARARGS, NULL},
	 { (char *)"Csock_GetRateTime", _wrap_Csock_GetRateTime, METH_VARARGS, NULL},
	 { (char *)"Csock_Connected", _wrap_Csock_Connected, METH_VARARGS, NULL},
	 { (char *)"Csock_Disconnected", _wrap_Csock_Disconnected, METH_VARARGS, NULL},
	 { (char *)"Csock_Timeout", _wrap_Csock_Timeout, METH_VARARGS, NULL},
	 { (char *)"Csock_ReadData", _wrap_Csock_ReadData, METH_VARARGS, NULL},
	 { (char *)"Csock_ReadLine", _wrap_Csock_ReadLine, METH_VARARGS, NULL},
	 { (char *)"Csock_EnableReadLine", _wrap_Csock_EnableReadLine, METH_VARARGS, NULL},
	 { (char *)"Csock_DisableReadLine", _wrap_Csock_DisableReadLine, METH_VARARGS, NULL},
	 { (char *)"Csock_HasReadLine", _wrap_Csock_HasReadLine, METH_VARARGS, NULL},
	 { (char *)"Csock_ReachedMaxBuffer", _wrap_Csock_ReachedMaxBuffer, METH_VARARGS, NULL},
	 { (char *)"Csock_SockError", _wrap_Csock_SockError, METH_VARARGS, NULL},
	 { (char *)"Csock_ConnectionFrom", _wrap_Csock_ConnectionFrom, METH_VARARGS, NULL},
	 { (char *)"Csock_Listening", _wrap_Csock_Listening, METH_VARARGS, NULL},
	 { (char *)"Csock_ConnectionRefused", _wrap_Csock_ConnectionRefused, METH_VARARGS, NULL},
	 { (char *)"Csock_ReadPaused", _wrap_Csock_ReadPaused, METH_VARARGS, NULL},
	 { (char *)"Csock_GetTimeSinceLastDataTransaction", _wrap_Csock_GetTimeSinceLastDataTransaction, METH_VARARGS, NULL},
	 { (char *)"Csock_GetLastCheckTimeout", _wrap_Csock_GetLastCheckTimeout, METH_VARARGS, NULL},
	 { (char *)"Csock_GetNextCheckTimeout", _wrap_Csock_GetNextCheckTimeout, METH_VARARGS, NULL},
	 { (char *)"Csock_GetPending", _wrap_Csock_GetPending, METH_VARARGS, NULL},
	 { (char *)"Csock_GetConState", _wrap_Csock_GetConState, METH_VARARGS, NULL},
	 { (char *)"Csock_SetConState", _wrap_Csock_SetConState, METH_VARARGS, NULL},
	 { (char *)"Csock_CreateSocksFD", _wrap_Csock_CreateSocksFD, METH_VARARGS, NULL},
	 { (char *)"Csock_CloseSocksFD", _wrap_Csock_CloseSocksFD, METH_VARARGS, NULL},
	 { (char *)"Csock_GetBindHost", _wrap_Csock_GetBindHost, METH_VARARGS, NULL},
	 { (char *)"Csock_SetBindHost", _wrap_Csock_SetBindHost, METH_VARARGS, NULL},
	 { (char *)"Csock_DNSLookup", _wrap_Csock_DNSLookup, METH_VARARGS, NULL},
	 { (char *)"Csock_SetupVHost", _wrap_Csock_SetupVHost, METH_VARARGS, NULL},
	 { (char *)"Csock_GetIPv6", _wrap_Csock_GetIPv6, METH_VARARGS, NULL},
	 { (char *)"Csock_SetIPv6", _wrap_Csock_SetIPv6, METH_VARARGS, NULL},
	 { (char *)"Csock_SetAFRequire", _wrap_Csock_SetAFRequire, METH_VARARGS, NULL},
	 { (char *)"Csock_AllowWrite", _wrap_Csock_AllowWrite, METH_VARARGS, NULL},
	 { (char *)"Csock_SetSkipConnect", _wrap_Csock_SetSkipConnect, METH_VARARGS, NULL},
	 { (char *)"Csock_GetAddrInfo", _wrap_Csock_GetAddrInfo, METH_VARARGS, NULL},
	 { (char *)"Csock_ConvertAddress", _wrap_Csock_ConvertAddress, METH_VARARGS, NULL},
	 { (char *)"Csock_GetMaxConns", _wrap_Csock_GetMaxConns, METH_VARARGS, NULL},
	 { (char *)"Csock_swigregister", Csock_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CSConnection", _wrap_new_CSConnection, METH_VARARGS, NULL},
	 { (char *)"delete_CSConnection", _wrap_delete_CSConnection, METH_VARARGS, NULL},
	 { (char *)"CSConnection_GetHostname", _wrap_CSConnection_GetHostname, METH_VARARGS, NULL},
	 { (char *)"CSConnection_GetSockName", _wrap_CSConnection_GetSockName, METH_VARARGS, NULL},
	 { (char *)"CSConnection_GetBindHost", _wrap_CSConnection_GetBindHost, METH_VARARGS, NULL},
	 { (char *)"CSConnection_GetPort", _wrap_CSConnection_GetPort, METH_VARARGS, NULL},
	 { (char *)"CSConnection_GetTimeout", _wrap_CSConnection_GetTimeout, METH_VARARGS, NULL},
	 { (char *)"CSConnection_GetIsSSL", _wrap_CSConnection_GetIsSSL, METH_VARARGS, NULL},
	 { (char *)"CSConnection_GetAFRequire", _wrap_CSConnection_GetAFRequire, METH_VARARGS, NULL},
	 { (char *)"CSConnection_SetHostname", _wrap_CSConnection_SetHostname, METH_VARARGS, NULL},
	 { (char *)"CSConnection_SetSockName", _wrap_CSConnection_SetSockName, METH_VARARGS, NULL},
	 { (char *)"CSConnection_SetBindHost", _wrap_CSConnection_SetBindHost, METH_VARARGS, NULL},
	 { (char *)"CSConnection_SetPort", _wrap_CSConnection_SetPort, METH_VARARGS, NULL},
	 { (char *)"CSConnection_SetTimeout", _wrap_CSConnection_SetTimeout, METH_VARARGS, NULL},
	 { (char *)"CSConnection_SetIsSSL", _wrap_CSConnection_SetIsSSL, METH_VARARGS, NULL},
	 { (char *)"CSConnection_SetAFRequire", _wrap_CSConnection_SetAFRequire, METH_VARARGS, NULL},
	 { (char *)"CSConnection_swigregister", CSConnection_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CSSSLConnection", _wrap_new_CSSSLConnection, METH_VARARGS, NULL},
	 { (char *)"delete_CSSSLConnection", _wrap_delete_CSSSLConnection, METH_VARARGS, NULL},
	 { (char *)"CSSSLConnection_swigregister", CSSSLConnection_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CSListener", _wrap_new_CSListener, METH_VARARGS, NULL},
	 { (char *)"delete_CSListener", _wrap_delete_CSListener, METH_VARARGS, NULL},
	 { (char *)"CSListener_SetDetach", _wrap_CSListener_SetDetach, METH_VARARGS, NULL},
	 { (char *)"CSListener_GetDetach", _wrap_CSListener_GetDetach, METH_VARARGS, NULL},
	 { (char *)"CSListener_GetPort", _wrap_CSListener_GetPort, METH_VARARGS, NULL},
	 { (char *)"CSListener_GetSockName", _wrap_CSListener_GetSockName, METH_VARARGS, NULL},
	 { (char *)"CSListener_GetBindHost", _wrap_CSListener_GetBindHost, METH_VARARGS, NULL},
	 { (char *)"CSListener_GetIsSSL", _wrap_CSListener_GetIsSSL, METH_VARARGS, NULL},
	 { (char *)"CSListener_GetMaxConns", _wrap_CSListener_GetMaxConns, METH_VARARGS, NULL},
	 { (char *)"CSListener_GetTimeout", _wrap_CSListener_GetTimeout, METH_VARARGS, NULL},
	 { (char *)"CSListener_GetAFRequire", _wrap_CSListener_GetAFRequire, METH_VARARGS, NULL},
	 { (char *)"CSListener_SetPort", _wrap_CSListener_SetPort, METH_VARARGS, NULL},
	 { (char *)"CSListener_SetSockName", _wrap_CSListener_SetSockName, METH_VARARGS, NULL},
	 { (char *)"CSListener_SetBindHost", _wrap_CSListener_SetBindHost, METH_VARARGS, NULL},
	 { (char *)"CSListener_SetIsSSL", _wrap_CSListener_SetIsSSL, METH_VARARGS, NULL},
	 { (char *)"CSListener_SetMaxConns", _wrap_CSListener_SetMaxConns, METH_VARARGS, NULL},
	 { (char *)"CSListener_SetTimeout", _wrap_CSListener_SetTimeout, METH_VARARGS, NULL},
	 { (char *)"CSListener_SetAFRequire", _wrap_CSListener_SetAFRequire, METH_VARARGS, NULL},
	 { (char *)"CSListener_swigregister", CSListener_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CSocketManager", _wrap_new_CSocketManager, METH_VARARGS, NULL},
	 { (char *)"delete_CSocketManager", _wrap_delete_CSocketManager, METH_VARARGS, NULL},
	 { (char *)"CSocketManager_clear", _wrap_CSocketManager_clear, METH_VARARGS, NULL},
	 { (char *)"CSocketManager_Cleanup", _wrap_CSocketManager_Cleanup, METH_VARARGS, NULL},
	 { (char *)"CSocketManager_GetSockObj", _wrap_CSocketManager_GetSockObj, METH_VARARGS, NULL},
	 { (char *)"CSocketManager_Connect", _wrap_CSocketManager_Connect, METH_VARARGS, NULL},
	 { (char *)"CSocketManager_Listen", _wrap_CSocketManager_Listen, METH_VARARGS, NULL},
	 { (char *)"CSocketManager_HasFDs", _wrap_CSocketManager_HasFDs, METH_VARARGS, NULL},
	 { (char *)"CSocketManager_Loop", _wrap_CSocketManager_Loop, METH_VARARGS, NULL},
	 { (char *)"CSocketManager_DynamicSelectLoop", _wrap_CSocketManager_DynamicSelectLoop, METH_VARARGS, NULL},
	 { (char *)"CSocketManager_AddSock", _wrap_CSocketManager_AddSock, METH_VARARGS, NULL},
	 { (char *)"CSocketManager_FindSockByRemotePort", _wrap_CSocketManager_FindSockByRemotePort, METH_VARARGS, NULL},
	 { (char *)"CSocketManager_FindSockByLocalPort", _wrap_CSocketManager_FindSockByLocalPort, METH_VARARGS, NULL},
	 { (char *)"CSocketManager_FindSockByName", _wrap_CSocketManager_FindSockByName, METH_VARARGS, NULL},
	 { (char *)"CSocketManager_FindSockByFD", _wrap_CSocketManager_FindSockByFD, METH_VARARGS, NULL},
	 { (char *)"CSocketManager_FindSocksByName", _wrap_CSocketManager_FindSocksByName, METH_VARARGS, NULL},
	 { (char *)"CSocketManager_FindSocksByRemoteHost", _wrap_CSocketManager_FindSocksByRemoteHost, METH_VARARGS, NULL},
	 { (char *)"CSocketManager_GetErrno", _wrap_CSocketManager_GetErrno, METH_VARARGS, NULL},
	 { (char *)"CSocketManager_GetSelectTimeout", _wrap_CSocketManager_GetSelectTimeout, METH_VARARGS, NULL},
	 { (char *)"CSocketManager_SetSelectTimeout", _wrap_CSocketManager_SetSelectTimeout, METH_VARARGS, NULL},
	 { (char *)"CSocketManager_DelSockByAddr", _wrap_CSocketManager_DelSockByAddr, METH_VARARGS, NULL},
	 { (char *)"CSocketManager_DelSock", _wrap_CSocketManager_DelSock, METH_VARARGS, NULL},
	 { (char *)"CSocketManager_SwapSockByIdx", _wrap_CSocketManager_SwapSockByIdx, METH_VARARGS, NULL},
	 { (char *)"CSocketManager_SwapSockByAddr", _wrap_CSocketManager_SwapSockByAddr, METH_VARARGS, NULL},
	 { (char *)"CSocketManager_GetBytesRead", _wrap_CSocketManager_GetBytesRead, METH_VARARGS, NULL},
	 { (char *)"CSocketManager_GetBytesWritten", _wrap_CSocketManager_GetBytesWritten, METH_VARARGS, NULL},
	 { (char *)"CSocketManager_FDSetCheck", _wrap_CSocketManager_FDSetCheck, METH_VARARGS, NULL},
	 { (char *)"CSocketManager_FDHasCheck", _wrap_CSocketManager_FDHasCheck, METH_VARARGS, NULL},
	 { (char *)"CSocketManager_swigregister", CSocketManager_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ZNCSocketManager", _wrap_new_ZNCSocketManager, METH_VARARGS, NULL},
	 { (char *)"delete_ZNCSocketManager", _wrap_delete_ZNCSocketManager, METH_VARARGS, NULL},
	 { (char *)"ZNCSocketManager_GetSockObj", _wrap_ZNCSocketManager_GetSockObj, METH_VARARGS, NULL},
	 { (char *)"ZNCSocketManager_swigregister", ZNCSocketManager_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CZNCSock", _wrap_new_CZNCSock, METH_VARARGS, NULL},
	 { (char *)"delete_CZNCSock", _wrap_delete_CZNCSock, METH_VARARGS, NULL},
	 { (char *)"CZNCSock_ConvertAddress", _wrap_CZNCSock_ConvertAddress, METH_VARARGS, NULL},
	 { (char *)"CZNCSock_swigregister", CZNCSock_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CSockManager", _wrap_new_CSockManager, METH_VARARGS, NULL},
	 { (char *)"delete_CSockManager", _wrap_delete_CSockManager, METH_VARARGS, NULL},
	 { (char *)"CSockManager_ListenHost", _wrap_CSockManager_ListenHost, METH_VARARGS, NULL},
	 { (char *)"CSockManager_ListenAll", _wrap_CSockManager_ListenAll, METH_VARARGS, NULL},
	 { (char *)"CSockManager_ListenRand", _wrap_CSockManager_ListenRand, METH_VARARGS, NULL},
	 { (char *)"CSockManager_ListenAllRand", _wrap_CSockManager_ListenAllRand, METH_VARARGS, NULL},
	 { (char *)"CSockManager_Connect", _wrap_CSockManager_Connect, METH_VARARGS, NULL},
	 { (char *)"CSockManager_GetAnonConnectionCount", _wrap_CSockManager_GetAnonConnectionCount, METH_VARARGS, NULL},
	 { (char *)"CSockManager_swigregister", CSockManager_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CSocket", _wrap_new_CSocket, METH_VARARGS, NULL},
	 { (char *)"delete_CSocket", _wrap_delete_CSocket, METH_VARARGS, NULL},
	 { (char *)"CSocket_ReachedMaxBuffer", _wrap_CSocket_ReachedMaxBuffer, METH_VARARGS, NULL},
	 { (char *)"CSocket_SockError", _wrap_CSocket_SockError, METH_VARARGS, NULL},
	 { (char *)"CSocket_ConnectionFrom", _wrap_CSocket_ConnectionFrom, METH_VARARGS, NULL},
	 { (char *)"CSocket_Connect", _wrap_CSocket_Connect, METH_VARARGS, NULL},
	 { (char *)"CSocket_Listen", _wrap_CSocket_Listen, METH_VARARGS, NULL},
	 { (char *)"CSocket_GetModule", _wrap_CSocket_GetModule, METH_VARARGS, NULL},
	 { (char *)"CSocket_swigregister", CSocket_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CFile", _wrap_new_CFile, METH_VARARGS, NULL},
	 { (char *)"delete_CFile", _wrap_delete_CFile, METH_VARARGS, NULL},
	 { (char *)"CFile_SetFileName", _wrap_CFile_SetFileName, METH_VARARGS, NULL},
	 { (char *)"CFile_IsReg", _wrap_CFile_IsReg, METH_VARARGS, NULL},
	 { (char *)"CFile_IsDir", _wrap_CFile_IsDir, METH_VARARGS, NULL},
	 { (char *)"CFile_IsChr", _wrap_CFile_IsChr, METH_VARARGS, NULL},
	 { (char *)"CFile_IsBlk", _wrap_CFile_IsBlk, METH_VARARGS, NULL},
	 { (char *)"CFile_IsFifo", _wrap_CFile_IsFifo, METH_VARARGS, NULL},
	 { (char *)"CFile_IsLnk", _wrap_CFile_IsLnk, METH_VARARGS, NULL},
	 { (char *)"CFile_IsSock", _wrap_CFile_IsSock, METH_VARARGS, NULL},
	 { (char *)"CFile_FType", _wrap_CFile_FType, METH_VARARGS, NULL},
	 { (char *)"CFile_Exists", _wrap_CFile_Exists, METH_VARARGS, NULL},
	 { (char *)"CFile_GetSize", _wrap_CFile_GetSize, METH_VARARGS, NULL},
	 { (char *)"CFile_GetATime", _wrap_CFile_GetATime, METH_VARARGS, NULL},
	 { (char *)"CFile_GetMTime", _wrap_CFile_GetMTime, METH_VARARGS, NULL},
	 { (char *)"CFile_GetCTime", _wrap_CFile_GetCTime, METH_VARARGS, NULL},
	 { (char *)"CFile_GetUID", _wrap_CFile_GetUID, METH_VARARGS, NULL},
	 { (char *)"CFile_GetGID", _wrap_CFile_GetGID, METH_VARARGS, NULL},
	 { (char *)"CFile_GetInfo", _wrap_CFile_GetInfo, METH_VARARGS, NULL},
	 { (char *)"CFile_Delete", _wrap_CFile_Delete, METH_VARARGS, NULL},
	 { (char *)"CFile_Move", _wrap_CFile_Move, METH_VARARGS, NULL},
	 { (char *)"CFile_Copy", _wrap_CFile_Copy, METH_VARARGS, NULL},
	 { (char *)"CFile_Chmod", _wrap_CFile_Chmod, METH_VARARGS, NULL},
	 { (char *)"CFile_Seek", _wrap_CFile_Seek, METH_VARARGS, NULL},
	 { (char *)"CFile_Truncate", _wrap_CFile_Truncate, METH_VARARGS, NULL},
	 { (char *)"CFile_Sync", _wrap_CFile_Sync, METH_VARARGS, NULL},
	 { (char *)"CFile_Open", _wrap_CFile_Open, METH_VARARGS, NULL},
	 { (char *)"CFile_Read", _wrap_CFile_Read, METH_VARARGS, NULL},
	 { (char *)"CFile_ReadLine", _wrap_CFile_ReadLine, METH_VARARGS, NULL},
	 { (char *)"CFile_ReadFile", _wrap_CFile_ReadFile, METH_VARARGS, NULL},
	 { (char *)"CFile_Write", _wrap_CFile_Write, METH_VARARGS, NULL},
	 { (char *)"CFile_Close", _wrap_CFile_Close, METH_VARARGS, NULL},
	 { (char *)"CFile_ClearBuffer", _wrap_CFile_ClearBuffer, METH_VARARGS, NULL},
	 { (char *)"CFile_TryExLock", _wrap_CFile_TryExLock, METH_VARARGS, NULL},
	 { (char *)"CFile_ExLock", _wrap_CFile_ExLock, METH_VARARGS, NULL},
	 { (char *)"CFile_UnLock", _wrap_CFile_UnLock, METH_VARARGS, NULL},
	 { (char *)"CFile_IsOpen", _wrap_CFile_IsOpen, METH_VARARGS, NULL},
	 { (char *)"CFile_GetLongName", _wrap_CFile_GetLongName, METH_VARARGS, NULL},
	 { (char *)"CFile_GetShortName", _wrap_CFile_GetShortName, METH_VARARGS, NULL},
	 { (char *)"CFile_GetDir", _wrap_CFile_GetDir, METH_VARARGS, NULL},
	 { (char *)"CFile_HadError", _wrap_CFile_HadError, METH_VARARGS, NULL},
	 { (char *)"CFile_ResetError", _wrap_CFile_ResetError, METH_VARARGS, NULL},
	 { (char *)"CFile_InitHomePath", _wrap_CFile_InitHomePath, METH_VARARGS, NULL},
	 { (char *)"CFile_GetHomePath", _wrap_CFile_GetHomePath, METH_VARARGS, NULL},
	 { (char *)"CFile_swigregister", CFile_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CDir", _wrap_new_CDir, METH_VARARGS, NULL},
	 { (char *)"delete_CDir", _wrap_delete_CDir, METH_VARARGS, NULL},
	 { (char *)"CDir_CleanUp", _wrap_CDir_CleanUp, METH_VARARGS, NULL},
	 { (char *)"CDir_Fill", _wrap_CDir_Fill, METH_VARARGS, NULL},
	 { (char *)"CDir_FillByWildcard", _wrap_CDir_FillByWildcard, METH_VARARGS, NULL},
	 { (char *)"CDir_Chmod", _wrap_CDir_Chmod, METH_VARARGS, NULL},
	 { (char *)"CDir_Delete", _wrap_CDir_Delete, METH_VARARGS, NULL},
	 { (char *)"CDir_GetSortAttr", _wrap_CDir_GetSortAttr, METH_VARARGS, NULL},
	 { (char *)"CDir_IsDescending", _wrap_CDir_IsDescending, METH_VARARGS, NULL},
	 { (char *)"CDir_CheckPathPrefix", _wrap_CDir_CheckPathPrefix, METH_VARARGS, NULL},
	 { (char *)"CDir_ChangeDir", _wrap_CDir_ChangeDir, METH_VARARGS, NULL},
	 { (char *)"CDir_MakeDir", _wrap_CDir_MakeDir, METH_VARARGS, NULL},
	 { (char *)"CDir_GetCWD", _wrap_CDir_GetCWD, METH_VARARGS, NULL},
	 { (char *)"CDir_swigregister", CDir_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CTimer", _wrap_new_CTimer, METH_VARARGS, NULL},
	 { (char *)"delete_CTimer", _wrap_delete_CTimer, METH_VARARGS, NULL},
	 { (char *)"CTimer_SetModule", _wrap_CTimer_SetModule, METH_VARARGS, NULL},
	 { (char *)"CTimer_SetDescription", _wrap_CTimer_SetDescription, METH_VARARGS, NULL},
	 { (char *)"CTimer_GetModule", _wrap_CTimer_GetModule, METH_VARARGS, NULL},
	 { (char *)"CTimer_GetDescription", _wrap_CTimer_GetDescription, METH_VARARGS, NULL},
	 { (char *)"CTimer_swigregister", CTimer_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CFPTimer", _wrap_new_CFPTimer, METH_VARARGS, NULL},
	 { (char *)"delete_CFPTimer", _wrap_delete_CFPTimer, METH_VARARGS, NULL},
	 { (char *)"CFPTimer_SetFPCallback", _wrap_CFPTimer_SetFPCallback, METH_VARARGS, NULL},
	 { (char *)"CFPTimer_swigregister", CFPTimer_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CModInfo", _wrap_new_CModInfo, METH_VARARGS, NULL},
	 { (char *)"delete_CModInfo", _wrap_delete_CModInfo, METH_VARARGS, NULL},
	 { (char *)"CModInfo___lt__", _wrap_CModInfo___lt__, METH_VARARGS, NULL},
	 { (char *)"CModInfo_SupportsType", _wrap_CModInfo_SupportsType, METH_VARARGS, NULL},
	 { (char *)"CModInfo_AddType", _wrap_CModInfo_AddType, METH_VARARGS, NULL},
	 { (char *)"CModInfo_ModuleTypeToString", _wrap_CModInfo_ModuleTypeToString, METH_VARARGS, NULL},
	 { (char *)"CModInfo_GetName", _wrap_CModInfo_GetName, METH_VARARGS, NULL},
	 { (char *)"CModInfo_GetPath", _wrap_CModInfo_GetPath, METH_VARARGS, NULL},
	 { (char *)"CModInfo_GetDescription", _wrap_CModInfo_GetDescription, METH_VARARGS, NULL},
	 { (char *)"CModInfo_GetWikiPage", _wrap_CModInfo_GetWikiPage, METH_VARARGS, NULL},
	 { (char *)"CModInfo_GetArgsHelpText", _wrap_CModInfo_GetArgsHelpText, METH_VARARGS, NULL},
	 { (char *)"CModInfo_GetHasArgs", _wrap_CModInfo_GetHasArgs, METH_VARARGS, NULL},
	 { (char *)"CModInfo_GetLoader", _wrap_CModInfo_GetLoader, METH_VARARGS, NULL},
	 { (char *)"CModInfo_GetDefaultType", _wrap_CModInfo_GetDefaultType, METH_VARARGS, NULL},
	 { (char *)"CModInfo_SetName", _wrap_CModInfo_SetName, METH_VARARGS, NULL},
	 { (char *)"CModInfo_SetPath", _wrap_CModInfo_SetPath, METH_VARARGS, NULL},
	 { (char *)"CModInfo_SetDescription", _wrap_CModInfo_SetDescription, METH_VARARGS, NULL},
	 { (char *)"CModInfo_SetWikiPage", _wrap_CModInfo_SetWikiPage, METH_VARARGS, NULL},
	 { (char *)"CModInfo_SetArgsHelpText", _wrap_CModInfo_SetArgsHelpText, METH_VARARGS, NULL},
	 { (char *)"CModInfo_SetHasArgs", _wrap_CModInfo_SetHasArgs, METH_VARARGS, NULL},
	 { (char *)"CModInfo_SetLoader", _wrap_CModInfo_SetLoader, METH_VARARGS, NULL},
	 { (char *)"CModInfo_SetDefaultType", _wrap_CModInfo_SetDefaultType, METH_VARARGS, NULL},
	 { (char *)"CModInfo_swigregister", CModInfo_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CModCommand", _wrap_new_CModCommand, METH_VARARGS, NULL},
	 { (char *)"CModCommand_InitHelp", _wrap_CModCommand_InitHelp, METH_VARARGS, NULL},
	 { (char *)"CModCommand_AddHelp", _wrap_CModCommand_AddHelp, METH_VARARGS, NULL},
	 { (char *)"CModCommand_GetCommand", _wrap_CModCommand_GetCommand, METH_VARARGS, NULL},
	 { (char *)"CModCommand_GetFunction", _wrap_CModCommand_GetFunction, METH_VARARGS, NULL},
	 { (char *)"CModCommand_GetArgs", _wrap_CModCommand_GetArgs, METH_VARARGS, NULL},
	 { (char *)"CModCommand_GetDescription", _wrap_CModCommand_GetDescription, METH_VARARGS, NULL},
	 { (char *)"CModCommand_Call", _wrap_CModCommand_Call, METH_VARARGS, NULL},
	 { (char *)"delete_CModCommand", _wrap_delete_CModCommand, METH_VARARGS, NULL},
	 { (char *)"CModCommand_swigregister", CModCommand_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CModule", _wrap_new_CModule, METH_VARARGS, NULL},
	 { (char *)"delete_CModule", _wrap_delete_CModule, METH_VARARGS, NULL},
	 { (char *)"CModule_SetUser", _wrap_CModule_SetUser, METH_VARARGS, NULL},
	 { (char *)"CModule_SetNetwork", _wrap_CModule_SetNetwork, METH_VARARGS, NULL},
	 { (char *)"CModule_SetClient", _wrap_CModule_SetClient, METH_VARARGS, NULL},
	 { (char *)"CModule_Unload", _wrap_CModule_Unload, METH_VARARGS, NULL},
	 { (char *)"CModule_OnLoad", _wrap_CModule_OnLoad, METH_VARARGS, NULL},
	 { (char *)"CModule_OnBoot", _wrap_CModule_OnBoot, METH_VARARGS, NULL},
	 { (char *)"CModule_WebRequiresLogin", _wrap_CModule_WebRequiresLogin, METH_VARARGS, NULL},
	 { (char *)"CModule_WebRequiresAdmin", _wrap_CModule_WebRequiresAdmin, METH_VARARGS, NULL},
	 { (char *)"CModule_GetWebMenuTitle", _wrap_CModule_GetWebMenuTitle, METH_VARARGS, NULL},
	 { (char *)"CModule_GetWebPath", _wrap_CModule_GetWebPath, METH_VARARGS, NULL},
	 { (char *)"CModule_GetWebFilesPath", _wrap_CModule_GetWebFilesPath, METH_VARARGS, NULL},
	 { (char *)"CModule_OnWebPreRequest", _wrap_CModule_OnWebPreRequest, METH_VARARGS, NULL},
	 { (char *)"CModule_OnWebRequest", _wrap_CModule_OnWebRequest, METH_VARARGS, NULL},
	 { (char *)"CModule_AddSubPage", _wrap_CModule_AddSubPage, METH_VARARGS, NULL},
	 { (char *)"CModule_ClearSubPages", _wrap_CModule_ClearSubPages, METH_VARARGS, NULL},
	 { (char *)"CModule_GetSubPages", _wrap_CModule_GetSubPages, METH_VARARGS, NULL},
	 { (char *)"CModule_OnEmbeddedWebRequest", _wrap_CModule_OnEmbeddedWebRequest, METH_VARARGS, NULL},
	 { (char *)"CModule_OnPreRehash", _wrap_CModule_OnPreRehash, METH_VARARGS, NULL},
	 { (char *)"CModule_OnPostRehash", _wrap_CModule_OnPostRehash, METH_VARARGS, NULL},
	 { (char *)"CModule_OnIRCDisconnected", _wrap_CModule_OnIRCDisconnected, METH_VARARGS, NULL},
	 { (char *)"CModule_OnIRCConnected", _wrap_CModule_OnIRCConnected, METH_VARARGS, NULL},
	 { (char *)"CModule_OnIRCConnecting", _wrap_CModule_OnIRCConnecting, METH_VARARGS, NULL},
	 { (char *)"CModule_OnIRCConnectionError", _wrap_CModule_OnIRCConnectionError, METH_VARARGS, NULL},
	 { (char *)"CModule_OnIRCRegistration", _wrap_CModule_OnIRCRegistration, METH_VARARGS, NULL},
	 { (char *)"CModule_OnBroadcast", _wrap_CModule_OnBroadcast, METH_VARARGS, NULL},
	 { (char *)"CModule_OnChanPermission", _wrap_CModule_OnChanPermission, METH_VARARGS, NULL},
	 { (char *)"CModule_OnOp", _wrap_CModule_OnOp, METH_VARARGS, NULL},
	 { (char *)"CModule_OnDeop", _wrap_CModule_OnDeop, METH_VARARGS, NULL},
	 { (char *)"CModule_OnVoice", _wrap_CModule_OnVoice, METH_VARARGS, NULL},
	 { (char *)"CModule_OnDevoice", _wrap_CModule_OnDevoice, METH_VARARGS, NULL},
	 { (char *)"CModule_OnMode", _wrap_CModule_OnMode, METH_VARARGS, NULL},
	 { (char *)"CModule_OnRawMode", _wrap_CModule_OnRawMode, METH_VARARGS, NULL},
	 { (char *)"CModule_OnRaw", _wrap_CModule_OnRaw, METH_VARARGS, NULL},
	 { (char *)"CModule_OnStatusCommand", _wrap_CModule_OnStatusCommand, METH_VARARGS, NULL},
	 { (char *)"CModule_OnModCommand", _wrap_CModule_OnModCommand, METH_VARARGS, NULL},
	 { (char *)"CModule_OnUnknownModCommand", _wrap_CModule_OnUnknownModCommand, METH_VARARGS, NULL},
	 { (char *)"CModule_OnModNotice", _wrap_CModule_OnModNotice, METH_VARARGS, NULL},
	 { (char *)"CModule_OnModCTCP", _wrap_CModule_OnModCTCP, METH_VARARGS, NULL},
	 { (char *)"CModule_OnQuit", _wrap_CModule_OnQuit, METH_VARARGS, NULL},
	 { (char *)"CModule_OnNick", _wrap_CModule_OnNick, METH_VARARGS, NULL},
	 { (char *)"CModule_OnKick", _wrap_CModule_OnKick, METH_VARARGS, NULL},
	 { (char *)"CModule_OnJoin", _wrap_CModule_OnJoin, METH_VARARGS, NULL},
	 { (char *)"CModule_OnPart", _wrap_CModule_OnPart, METH_VARARGS, NULL},
	 { (char *)"CModule_OnInvite", _wrap_CModule_OnInvite, METH_VARARGS, NULL},
	 { (char *)"CModule_OnChanBufferStarting", _wrap_CModule_OnChanBufferStarting, METH_VARARGS, NULL},
	 { (char *)"CModule_OnChanBufferEnding", _wrap_CModule_OnChanBufferEnding, METH_VARARGS, NULL},
	 { (char *)"CModule_OnChanBufferPlayLine", _wrap_CModule_OnChanBufferPlayLine, METH_VARARGS, NULL},
	 { (char *)"CModule_OnPrivBufferPlayLine", _wrap_CModule_OnPrivBufferPlayLine, METH_VARARGS, NULL},
	 { (char *)"CModule_OnClientLogin", _wrap_CModule_OnClientLogin, METH_VARARGS, NULL},
	 { (char *)"CModule_OnClientDisconnect", _wrap_CModule_OnClientDisconnect, METH_VARARGS, NULL},
	 { (char *)"CModule_OnUserRaw", _wrap_CModule_OnUserRaw, METH_VARARGS, NULL},
	 { (char *)"CModule_OnUserCTCPReply", _wrap_CModule_OnUserCTCPReply, METH_VARARGS, NULL},
	 { (char *)"CModule_OnUserCTCP", _wrap_CModule_OnUserCTCP, METH_VARARGS, NULL},
	 { (char *)"CModule_OnUserAction", _wrap_CModule_OnUserAction, METH_VARARGS, NULL},
	 { (char *)"CModule_OnUserMsg", _wrap_CModule_OnUserMsg, METH_VARARGS, NULL},
	 { (char *)"CModule_OnUserNotice", _wrap_CModule_OnUserNotice, METH_VARARGS, NULL},
	 { (char *)"CModule_OnUserJoin", _wrap_CModule_OnUserJoin, METH_VARARGS, NULL},
	 { (char *)"CModule_OnUserPart", _wrap_CModule_OnUserPart, METH_VARARGS, NULL},
	 { (char *)"CModule_OnUserTopic", _wrap_CModule_OnUserTopic, METH_VARARGS, NULL},
	 { (char *)"CModule_OnUserTopicRequest", _wrap_CModule_OnUserTopicRequest, METH_VARARGS, NULL},
	 { (char *)"CModule_OnCTCPReply", _wrap_CModule_OnCTCPReply, METH_VARARGS, NULL},
	 { (char *)"CModule_OnPrivCTCP", _wrap_CModule_OnPrivCTCP, METH_VARARGS, NULL},
	 { (char *)"CModule_OnChanCTCP", _wrap_CModule_OnChanCTCP, METH_VARARGS, NULL},
	 { (char *)"CModule_OnPrivAction", _wrap_CModule_OnPrivAction, METH_VARARGS, NULL},
	 { (char *)"CModule_OnChanAction", _wrap_CModule_OnChanAction, METH_VARARGS, NULL},
	 { (char *)"CModule_OnPrivMsg", _wrap_CModule_OnPrivMsg, METH_VARARGS, NULL},
	 { (char *)"CModule_OnChanMsg", _wrap_CModule_OnChanMsg, METH_VARARGS, NULL},
	 { (char *)"CModule_OnPrivNotice", _wrap_CModule_OnPrivNotice, METH_VARARGS, NULL},
	 { (char *)"CModule_OnChanNotice", _wrap_CModule_OnChanNotice, METH_VARARGS, NULL},
	 { (char *)"CModule_OnTopic", _wrap_CModule_OnTopic, METH_VARARGS, NULL},
	 { (char *)"CModule_OnServerCapAvailable", _wrap_CModule_OnServerCapAvailable, METH_VARARGS, NULL},
	 { (char *)"CModule_OnServerCapResult", _wrap_CModule_OnServerCapResult, METH_VARARGS, NULL},
	 { (char *)"CModule_OnTimerAutoJoin", _wrap_CModule_OnTimerAutoJoin, METH_VARARGS, NULL},
	 { (char *)"CModule_GetDLL", _wrap_CModule_GetDLL, METH_VARARGS, NULL},
	 { (char *)"CModule_GetCoreVersion", _wrap_CModule_GetCoreVersion, METH_VARARGS, NULL},
	 { (char *)"CModule_PutIRC", _wrap_CModule_PutIRC, METH_VARARGS, NULL},
	 { (char *)"CModule_PutUser", _wrap_CModule_PutUser, METH_VARARGS, NULL},
	 { (char *)"CModule_PutStatus", _wrap_CModule_PutStatus, METH_VARARGS, NULL},
	 { (char *)"CModule_PutModule", _wrap_CModule_PutModule, METH_VARARGS, NULL},
	 { (char *)"CModule_PutModNotice", _wrap_CModule_PutModNotice, METH_VARARGS, NULL},
	 { (char *)"CModule_GetModName", _wrap_CModule_GetModName, METH_VARARGS, NULL},
	 { (char *)"CModule_GetModNick", _wrap_CModule_GetModNick, METH_VARARGS, NULL},
	 { (char *)"CModule_GetModDataDir", _wrap_CModule_GetModDataDir, METH_VARARGS, NULL},
	 { (char *)"CModule_AddTimer", _wrap_CModule_AddTimer, METH_VARARGS, NULL},
	 { (char *)"CModule_RemTimer", _wrap_CModule_RemTimer, METH_VARARGS, NULL},
	 { (char *)"CModule_UnlinkTimer", _wrap_CModule_UnlinkTimer, METH_VARARGS, NULL},
	 { (char *)"CModule_FindTimer", _wrap_CModule_FindTimer, METH_VARARGS, NULL},
	 { (char *)"CModule_BeginTimers", _wrap_CModule_BeginTimers, METH_VARARGS, NULL},
	 { (char *)"CModule_EndTimers", _wrap_CModule_EndTimers, METH_VARARGS, NULL},
	 { (char *)"CModule_ListTimers", _wrap_CModule_ListTimers, METH_VARARGS, NULL},
	 { (char *)"CModule_AddSocket", _wrap_CModule_AddSocket, METH_VARARGS, NULL},
	 { (char *)"CModule_RemSocket", _wrap_CModule_RemSocket, METH_VARARGS, NULL},
	 { (char *)"CModule_UnlinkSocket", _wrap_CModule_UnlinkSocket, METH_VARARGS, NULL},
	 { (char *)"CModule_FindSocket", _wrap_CModule_FindSocket, METH_VARARGS, NULL},
	 { (char *)"CModule_BeginSockets", _wrap_CModule_BeginSockets, METH_VARARGS, NULL},
	 { (char *)"CModule_EndSockets", _wrap_CModule_EndSockets, METH_VARARGS, NULL},
	 { (char *)"CModule_ListSockets", _wrap_CModule_ListSockets, METH_VARARGS, NULL},
	 { (char *)"CModule_AddHelpCommand", _wrap_CModule_AddHelpCommand, METH_VARARGS, NULL},
	 { (char *)"CModule_AddCommand", _wrap_CModule_AddCommand, METH_VARARGS, NULL},
	 { (char *)"CModule_RemCommand", _wrap_CModule_RemCommand, METH_VARARGS, NULL},
	 { (char *)"CModule_FindCommand", _wrap_CModule_FindCommand, METH_VARARGS, NULL},
	 { (char *)"CModule_HandleCommand", _wrap_CModule_HandleCommand, METH_VARARGS, NULL},
	 { (char *)"CModule_HandleHelpCommand", _wrap_CModule_HandleHelpCommand, METH_VARARGS, NULL},
	 { (char *)"CModule_LoadRegistry", _wrap_CModule_LoadRegistry, METH_VARARGS, NULL},
	 { (char *)"CModule_SaveRegistry", _wrap_CModule_SaveRegistry, METH_VARARGS, NULL},
	 { (char *)"CModule_SetNV", _wrap_CModule_SetNV, METH_VARARGS, NULL},
	 { (char *)"CModule_GetNV", _wrap_CModule_GetNV, METH_VARARGS, NULL},
	 { (char *)"CModule_FindNV", _wrap_CModule_FindNV, METH_VARARGS, NULL},
	 { (char *)"CModule_EndNV", _wrap_CModule_EndNV, METH_VARARGS, NULL},
	 { (char *)"CModule_BeginNV", _wrap_CModule_BeginNV, METH_VARARGS, NULL},
	 { (char *)"CModule_DelNV", _wrap_CModule_DelNV, METH_VARARGS, NULL},
	 { (char *)"CModule_ClearNV", _wrap_CModule_ClearNV, METH_VARARGS, NULL},
	 { (char *)"CModule_GetSavePath", _wrap_CModule_GetSavePath, METH_VARARGS, NULL},
	 { (char *)"CModule_SetType", _wrap_CModule_SetType, METH_VARARGS, NULL},
	 { (char *)"CModule_SetDescription", _wrap_CModule_SetDescription, METH_VARARGS, NULL},
	 { (char *)"CModule_SetModPath", _wrap_CModule_SetModPath, METH_VARARGS, NULL},
	 { (char *)"CModule_SetArgs", _wrap_CModule_SetArgs, METH_VARARGS, NULL},
	 { (char *)"CModule_GetType", _wrap_CModule_GetType, METH_VARARGS, NULL},
	 { (char *)"CModule_GetDescription", _wrap_CModule_GetDescription, METH_VARARGS, NULL},
	 { (char *)"CModule_GetArgs", _wrap_CModule_GetArgs, METH_VARARGS, NULL},
	 { (char *)"CModule_GetModPath", _wrap_CModule_GetModPath, METH_VARARGS, NULL},
	 { (char *)"CModule_GetUser", _wrap_CModule_GetUser, METH_VARARGS, NULL},
	 { (char *)"CModule_GetNetwork", _wrap_CModule_GetNetwork, METH_VARARGS, NULL},
	 { (char *)"CModule_GetClient", _wrap_CModule_GetClient, METH_VARARGS, NULL},
	 { (char *)"CModule_GetManager", _wrap_CModule_GetManager, METH_VARARGS, NULL},
	 { (char *)"CModule_OnAddUser", _wrap_CModule_OnAddUser, METH_VARARGS, NULL},
	 { (char *)"CModule_OnDeleteUser", _wrap_CModule_OnDeleteUser, METH_VARARGS, NULL},
	 { (char *)"CModule_OnClientConnect", _wrap_CModule_OnClientConnect, METH_VARARGS, NULL},
	 { (char *)"CModule_OnLoginAttempt", _wrap_CModule_OnLoginAttempt, METH_VARARGS, NULL},
	 { (char *)"CModule_OnFailedLogin", _wrap_CModule_OnFailedLogin, METH_VARARGS, NULL},
	 { (char *)"CModule_OnUnknownUserRaw", _wrap_CModule_OnUnknownUserRaw, METH_VARARGS, NULL},
	 { (char *)"CModule_OnClientCapLs", _wrap_CModule_OnClientCapLs, METH_VARARGS, NULL},
	 { (char *)"CModule_IsClientCapSupported", _wrap_CModule_IsClientCapSupported, METH_VARARGS, NULL},
	 { (char *)"CModule_OnClientCapRequest", _wrap_CModule_OnClientCapRequest, METH_VARARGS, NULL},
	 { (char *)"CModule_OnModuleLoading", _wrap_CModule_OnModuleLoading, METH_VARARGS, NULL},
	 { (char *)"CModule_OnModuleUnloading", _wrap_CModule_OnModuleUnloading, METH_VARARGS, NULL},
	 { (char *)"CModule_OnGetModInfo", _wrap_CModule_OnGetModInfo, METH_VARARGS, NULL},
	 { (char *)"CModule_OnGetAvailableMods", _wrap_CModule_OnGetAvailableMods, METH_VARARGS, NULL},
	 { (char *)"CModule___str__", _wrap_CModule___str__, METH_VARARGS, NULL},
	 { (char *)"CModule_BeginNV_", _wrap_CModule_BeginNV_, METH_VARARGS, NULL},
	 { (char *)"CModule_ExistsNV", _wrap_CModule_ExistsNV, METH_VARARGS, NULL},
	 { (char *)"CModule_swigregister", CModule_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CModules", _wrap_new_CModules, METH_VARARGS, NULL},
	 { (char *)"delete_CModules", _wrap_delete_CModules, METH_VARARGS, NULL},
	 { (char *)"CModules_SetUser", _wrap_CModules_SetUser, METH_VARARGS, NULL},
	 { (char *)"CModules_SetNetwork", _wrap_CModules_SetNetwork, METH_VARARGS, NULL},
	 { (char *)"CModules_SetClient", _wrap_CModules_SetClient, METH_VARARGS, NULL},
	 { (char *)"CModules_GetUser", _wrap_CModules_GetUser, METH_VARARGS, NULL},
	 { (char *)"CModules_GetNetwork", _wrap_CModules_GetNetwork, METH_VARARGS, NULL},
	 { (char *)"CModules_GetClient", _wrap_CModules_GetClient, METH_VARARGS, NULL},
	 { (char *)"CModules_UnloadAll", _wrap_CModules_UnloadAll, METH_VARARGS, NULL},
	 { (char *)"CModules_OnBoot", _wrap_CModules_OnBoot, METH_VARARGS, NULL},
	 { (char *)"CModules_OnPreRehash", _wrap_CModules_OnPreRehash, METH_VARARGS, NULL},
	 { (char *)"CModules_OnPostRehash", _wrap_CModules_OnPostRehash, METH_VARARGS, NULL},
	 { (char *)"CModules_OnIRCDisconnected", _wrap_CModules_OnIRCDisconnected, METH_VARARGS, NULL},
	 { (char *)"CModules_OnIRCConnected", _wrap_CModules_OnIRCConnected, METH_VARARGS, NULL},
	 { (char *)"CModules_OnIRCConnecting", _wrap_CModules_OnIRCConnecting, METH_VARARGS, NULL},
	 { (char *)"CModules_OnIRCConnectionError", _wrap_CModules_OnIRCConnectionError, METH_VARARGS, NULL},
	 { (char *)"CModules_OnIRCRegistration", _wrap_CModules_OnIRCRegistration, METH_VARARGS, NULL},
	 { (char *)"CModules_OnBroadcast", _wrap_CModules_OnBroadcast, METH_VARARGS, NULL},
	 { (char *)"CModules_OnChanPermission", _wrap_CModules_OnChanPermission, METH_VARARGS, NULL},
	 { (char *)"CModules_OnOp", _wrap_CModules_OnOp, METH_VARARGS, NULL},
	 { (char *)"CModules_OnDeop", _wrap_CModules_OnDeop, METH_VARARGS, NULL},
	 { (char *)"CModules_OnVoice", _wrap_CModules_OnVoice, METH_VARARGS, NULL},
	 { (char *)"CModules_OnDevoice", _wrap_CModules_OnDevoice, METH_VARARGS, NULL},
	 { (char *)"CModules_OnRawMode", _wrap_CModules_OnRawMode, METH_VARARGS, NULL},
	 { (char *)"CModules_OnMode", _wrap_CModules_OnMode, METH_VARARGS, NULL},
	 { (char *)"CModules_OnRaw", _wrap_CModules_OnRaw, METH_VARARGS, NULL},
	 { (char *)"CModules_OnStatusCommand", _wrap_CModules_OnStatusCommand, METH_VARARGS, NULL},
	 { (char *)"CModules_OnModCommand", _wrap_CModules_OnModCommand, METH_VARARGS, NULL},
	 { (char *)"CModules_OnModNotice", _wrap_CModules_OnModNotice, METH_VARARGS, NULL},
	 { (char *)"CModules_OnModCTCP", _wrap_CModules_OnModCTCP, METH_VARARGS, NULL},
	 { (char *)"CModules_OnQuit", _wrap_CModules_OnQuit, METH_VARARGS, NULL},
	 { (char *)"CModules_OnNick", _wrap_CModules_OnNick, METH_VARARGS, NULL},
	 { (char *)"CModules_OnKick", _wrap_CModules_OnKick, METH_VARARGS, NULL},
	 { (char *)"CModules_OnJoin", _wrap_CModules_OnJoin, METH_VARARGS, NULL},
	 { (char *)"CModules_OnPart", _wrap_CModules_OnPart, METH_VARARGS, NULL},
	 { (char *)"CModules_OnInvite", _wrap_CModules_OnInvite, METH_VARARGS, NULL},
	 { (char *)"CModules_OnChanBufferStarting", _wrap_CModules_OnChanBufferStarting, METH_VARARGS, NULL},
	 { (char *)"CModules_OnChanBufferEnding", _wrap_CModules_OnChanBufferEnding, METH_VARARGS, NULL},
	 { (char *)"CModules_OnChanBufferPlayLine", _wrap_CModules_OnChanBufferPlayLine, METH_VARARGS, NULL},
	 { (char *)"CModules_OnPrivBufferPlayLine", _wrap_CModules_OnPrivBufferPlayLine, METH_VARARGS, NULL},
	 { (char *)"CModules_OnClientLogin", _wrap_CModules_OnClientLogin, METH_VARARGS, NULL},
	 { (char *)"CModules_OnClientDisconnect", _wrap_CModules_OnClientDisconnect, METH_VARARGS, NULL},
	 { (char *)"CModules_OnUserRaw", _wrap_CModules_OnUserRaw, METH_VARARGS, NULL},
	 { (char *)"CModules_OnUserCTCPReply", _wrap_CModules_OnUserCTCPReply, METH_VARARGS, NULL},
	 { (char *)"CModules_OnUserCTCP", _wrap_CModules_OnUserCTCP, METH_VARARGS, NULL},
	 { (char *)"CModules_OnUserAction", _wrap_CModules_OnUserAction, METH_VARARGS, NULL},
	 { (char *)"CModules_OnUserMsg", _wrap_CModules_OnUserMsg, METH_VARARGS, NULL},
	 { (char *)"CModules_OnUserNotice", _wrap_CModules_OnUserNotice, METH_VARARGS, NULL},
	 { (char *)"CModules_OnUserJoin", _wrap_CModules_OnUserJoin, METH_VARARGS, NULL},
	 { (char *)"CModules_OnUserPart", _wrap_CModules_OnUserPart, METH_VARARGS, NULL},
	 { (char *)"CModules_OnUserTopic", _wrap_CModules_OnUserTopic, METH_VARARGS, NULL},
	 { (char *)"CModules_OnUserTopicRequest", _wrap_CModules_OnUserTopicRequest, METH_VARARGS, NULL},
	 { (char *)"CModules_OnCTCPReply", _wrap_CModules_OnCTCPReply, METH_VARARGS, NULL},
	 { (char *)"CModules_OnPrivCTCP", _wrap_CModules_OnPrivCTCP, METH_VARARGS, NULL},
	 { (char *)"CModules_OnChanCTCP", _wrap_CModules_OnChanCTCP, METH_VARARGS, NULL},
	 { (char *)"CModules_OnPrivAction", _wrap_CModules_OnPrivAction, METH_VARARGS, NULL},
	 { (char *)"CModules_OnChanAction", _wrap_CModules_OnChanAction, METH_VARARGS, NULL},
	 { (char *)"CModules_OnPrivMsg", _wrap_CModules_OnPrivMsg, METH_VARARGS, NULL},
	 { (char *)"CModules_OnChanMsg", _wrap_CModules_OnChanMsg, METH_VARARGS, NULL},
	 { (char *)"CModules_OnPrivNotice", _wrap_CModules_OnPrivNotice, METH_VARARGS, NULL},
	 { (char *)"CModules_OnChanNotice", _wrap_CModules_OnChanNotice, METH_VARARGS, NULL},
	 { (char *)"CModules_OnTopic", _wrap_CModules_OnTopic, METH_VARARGS, NULL},
	 { (char *)"CModules_OnTimerAutoJoin", _wrap_CModules_OnTimerAutoJoin, METH_VARARGS, NULL},
	 { (char *)"CModules_OnServerCapAvailable", _wrap_CModules_OnServerCapAvailable, METH_VARARGS, NULL},
	 { (char *)"CModules_OnServerCapResult", _wrap_CModules_OnServerCapResult, METH_VARARGS, NULL},
	 { (char *)"CModules_FindModule", _wrap_CModules_FindModule, METH_VARARGS, NULL},
	 { (char *)"CModules_LoadModule", _wrap_CModules_LoadModule, METH_VARARGS, NULL},
	 { (char *)"CModules_UnloadModule", _wrap_CModules_UnloadModule, METH_VARARGS, NULL},
	 { (char *)"CModules_ReloadModule", _wrap_CModules_ReloadModule, METH_VARARGS, NULL},
	 { (char *)"CModules_GetModInfo", _wrap_CModules_GetModInfo, METH_VARARGS, NULL},
	 { (char *)"CModules_GetModPathInfo", _wrap_CModules_GetModPathInfo, METH_VARARGS, NULL},
	 { (char *)"CModules_GetAvailableMods", _wrap_CModules_GetAvailableMods, METH_VARARGS, NULL},
	 { (char *)"CModules_FindModPath", _wrap_CModules_FindModPath, METH_VARARGS, NULL},
	 { (char *)"CModules_GetModDirs", _wrap_CModules_GetModDirs, METH_VARARGS, NULL},
	 { (char *)"CModules_OnAddUser", _wrap_CModules_OnAddUser, METH_VARARGS, NULL},
	 { (char *)"CModules_OnDeleteUser", _wrap_CModules_OnDeleteUser, METH_VARARGS, NULL},
	 { (char *)"CModules_OnClientConnect", _wrap_CModules_OnClientConnect, METH_VARARGS, NULL},
	 { (char *)"CModules_OnLoginAttempt", _wrap_CModules_OnLoginAttempt, METH_VARARGS, NULL},
	 { (char *)"CModules_OnFailedLogin", _wrap_CModules_OnFailedLogin, METH_VARARGS, NULL},
	 { (char *)"CModules_OnUnknownUserRaw", _wrap_CModules_OnUnknownUserRaw, METH_VARARGS, NULL},
	 { (char *)"CModules_OnClientCapLs", _wrap_CModules_OnClientCapLs, METH_VARARGS, NULL},
	 { (char *)"CModules_IsClientCapSupported", _wrap_CModules_IsClientCapSupported, METH_VARARGS, NULL},
	 { (char *)"CModules_OnClientCapRequest", _wrap_CModules_OnClientCapRequest, METH_VARARGS, NULL},
	 { (char *)"CModules_OnModuleLoading", _wrap_CModules_OnModuleLoading, METH_VARARGS, NULL},
	 { (char *)"CModules_OnModuleUnloading", _wrap_CModules_OnModuleUnloading, METH_VARARGS, NULL},
	 { (char *)"CModules_OnGetModInfo", _wrap_CModules_OnGetModInfo, METH_VARARGS, NULL},
	 { (char *)"CModules_OnGetAvailableMods", _wrap_CModules_OnGetAvailableMods, METH_VARARGS, NULL},
	 { (char *)"CModules_push_back", _wrap_CModules_push_back, METH_VARARGS, NULL},
	 { (char *)"CModules_removeModule", _wrap_CModules_removeModule, METH_VARARGS, NULL},
	 { (char *)"CModules_swigregister", CModules_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CNick", _wrap_new_CNick, METH_VARARGS, NULL},
	 { (char *)"delete_CNick", _wrap_delete_CNick, METH_VARARGS, NULL},
	 { (char *)"CNick_Reset", _wrap_CNick_Reset, METH_VARARGS, NULL},
	 { (char *)"CNick_Parse", _wrap_CNick_Parse, METH_VARARGS, NULL},
	 { (char *)"CNick_GetHostMask", _wrap_CNick_GetHostMask, METH_VARARGS, NULL},
	 { (char *)"CNick_GetCommonChans", _wrap_CNick_GetCommonChans, METH_VARARGS, NULL},
	 { (char *)"CNick_SetNetwork", _wrap_CNick_SetNetwork, METH_VARARGS, NULL},
	 { (char *)"CNick_SetNick", _wrap_CNick_SetNick, METH_VARARGS, NULL},
	 { (char *)"CNick_SetIdent", _wrap_CNick_SetIdent, METH_VARARGS, NULL},
	 { (char *)"CNick_SetHost", _wrap_CNick_SetHost, METH_VARARGS, NULL},
	 { (char *)"CNick_AddPerm", _wrap_CNick_AddPerm, METH_VARARGS, NULL},
	 { (char *)"CNick_RemPerm", _wrap_CNick_RemPerm, METH_VARARGS, NULL},
	 { (char *)"CNick_GetPermStr", _wrap_CNick_GetPermStr, METH_VARARGS, NULL},
	 { (char *)"CNick_GetPermChar", _wrap_CNick_GetPermChar, METH_VARARGS, NULL},
	 { (char *)"CNick_HasPerm", _wrap_CNick_HasPerm, METH_VARARGS, NULL},
	 { (char *)"CNick_GetNick", _wrap_CNick_GetNick, METH_VARARGS, NULL},
	 { (char *)"CNick_GetIdent", _wrap_CNick_GetIdent, METH_VARARGS, NULL},
	 { (char *)"CNick_GetHost", _wrap_CNick_GetHost, METH_VARARGS, NULL},
	 { (char *)"CNick_GetNickMask", _wrap_CNick_GetNickMask, METH_VARARGS, NULL},
	 { (char *)"CNick_Clone", _wrap_CNick_Clone, METH_VARARGS, NULL},
	 { (char *)"CNick___str__", _wrap_CNick___str__, METH_VARARGS, NULL},
	 { (char *)"CNick___repr__", _wrap_CNick___repr__, METH_VARARGS, NULL},
	 { (char *)"CNick_swigregister", CNick_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CChan", _wrap_new_CChan, METH_VARARGS, NULL},
	 { (char *)"delete_CChan", _wrap_delete_CChan, METH_VARARGS, NULL},
	 { (char *)"CChan_Reset", _wrap_CChan_Reset, METH_VARARGS, NULL},
	 { (char *)"CChan_ToConfig", _wrap_CChan_ToConfig, METH_VARARGS, NULL},
	 { (char *)"CChan_Clone", _wrap_CChan_Clone, METH_VARARGS, NULL},
	 { (char *)"CChan_Cycle", _wrap_CChan_Cycle, METH_VARARGS, NULL},
	 { (char *)"CChan_JoinUser", _wrap_CChan_JoinUser, METH_VARARGS, NULL},
	 { (char *)"CChan_DetachUser", _wrap_CChan_DetachUser, METH_VARARGS, NULL},
	 { (char *)"CChan_AttachUser", _wrap_CChan_AttachUser, METH_VARARGS, NULL},
	 { (char *)"CChan_OnWho", _wrap_CChan_OnWho, METH_VARARGS, NULL},
	 { (char *)"CChan_SetModes", _wrap_CChan_SetModes, METH_VARARGS, NULL},
	 { (char *)"CChan_ModeChange", _wrap_CChan_ModeChange, METH_VARARGS, NULL},
	 { (char *)"CChan_AddMode", _wrap_CChan_AddMode, METH_VARARGS, NULL},
	 { (char *)"CChan_RemMode", _wrap_CChan_RemMode, METH_VARARGS, NULL},
	 { (char *)"CChan_GetModeString", _wrap_CChan_GetModeString, METH_VARARGS, NULL},
	 { (char *)"CChan_GetModeForNames", _wrap_CChan_GetModeForNames, METH_VARARGS, NULL},
	 { (char *)"CChan_ClearNicks", _wrap_CChan_ClearNicks, METH_VARARGS, NULL},
	 { (char *)"CChan_FindNick", _wrap_CChan_FindNick, METH_VARARGS, NULL},
	 { (char *)"CChan_AddNicks", _wrap_CChan_AddNicks, METH_VARARGS, NULL},
	 { (char *)"CChan_AddNick", _wrap_CChan_AddNick, METH_VARARGS, NULL},
	 { (char *)"CChan_RemNick", _wrap_CChan_RemNick, METH_VARARGS, NULL},
	 { (char *)"CChan_ChangeNick", _wrap_CChan_ChangeNick, METH_VARARGS, NULL},
	 { (char *)"CChan_GetBuffer", _wrap_CChan_GetBuffer, METH_VARARGS, NULL},
	 { (char *)"CChan_GetBufferCount", _wrap_CChan_GetBufferCount, METH_VARARGS, NULL},
	 { (char *)"CChan_SetBufferCount", _wrap_CChan_SetBufferCount, METH_VARARGS, NULL},
	 { (char *)"CChan_AddBuffer", _wrap_CChan_AddBuffer, METH_VARARGS, NULL},
	 { (char *)"CChan_ClearBuffer", _wrap_CChan_ClearBuffer, METH_VARARGS, NULL},
	 { (char *)"CChan_SendBuffer", _wrap_CChan_SendBuffer, METH_VARARGS, NULL},
	 { (char *)"CChan_GetPermStr", _wrap_CChan_GetPermStr, METH_VARARGS, NULL},
	 { (char *)"CChan_HasPerm", _wrap_CChan_HasPerm, METH_VARARGS, NULL},
	 { (char *)"CChan_AddPerm", _wrap_CChan_AddPerm, METH_VARARGS, NULL},
	 { (char *)"CChan_RemPerm", _wrap_CChan_RemPerm, METH_VARARGS, NULL},
	 { (char *)"CChan_SetModeKnown", _wrap_CChan_SetModeKnown, METH_VARARGS, NULL},
	 { (char *)"CChan_SetIsOn", _wrap_CChan_SetIsOn, METH_VARARGS, NULL},
	 { (char *)"CChan_SetKey", _wrap_CChan_SetKey, METH_VARARGS, NULL},
	 { (char *)"CChan_SetTopic", _wrap_CChan_SetTopic, METH_VARARGS, NULL},
	 { (char *)"CChan_SetTopicOwner", _wrap_CChan_SetTopicOwner, METH_VARARGS, NULL},
	 { (char *)"CChan_SetTopicDate", _wrap_CChan_SetTopicDate, METH_VARARGS, NULL},
	 { (char *)"CChan_SetDefaultModes", _wrap_CChan_SetDefaultModes, METH_VARARGS, NULL},
	 { (char *)"CChan_SetAutoClearChanBuffer", _wrap_CChan_SetAutoClearChanBuffer, METH_VARARGS, NULL},
	 { (char *)"CChan_SetDetached", _wrap_CChan_SetDetached, METH_VARARGS, NULL},
	 { (char *)"CChan_SetInConfig", _wrap_CChan_SetInConfig, METH_VARARGS, NULL},
	 { (char *)"CChan_SetCreationDate", _wrap_CChan_SetCreationDate, METH_VARARGS, NULL},
	 { (char *)"CChan_Disable", _wrap_CChan_Disable, METH_VARARGS, NULL},
	 { (char *)"CChan_Enable", _wrap_CChan_Enable, METH_VARARGS, NULL},
	 { (char *)"CChan_IncJoinTries", _wrap_CChan_IncJoinTries, METH_VARARGS, NULL},
	 { (char *)"CChan_ResetJoinTries", _wrap_CChan_ResetJoinTries, METH_VARARGS, NULL},
	 { (char *)"CChan_IsModeKnown", _wrap_CChan_IsModeKnown, METH_VARARGS, NULL},
	 { (char *)"CChan_HasMode", _wrap_CChan_HasMode, METH_VARARGS, NULL},
	 { (char *)"CChan_GetOptions", _wrap_CChan_GetOptions, METH_VARARGS, NULL},
	 { (char *)"CChan_GetModeArg", _wrap_CChan_GetModeArg, METH_VARARGS, NULL},
	 { (char *)"CChan_GetPermCounts", _wrap_CChan_GetPermCounts, METH_VARARGS, NULL},
	 { (char *)"CChan_IsOn", _wrap_CChan_IsOn, METH_VARARGS, NULL},
	 { (char *)"CChan_GetName", _wrap_CChan_GetName, METH_VARARGS, NULL},
	 { (char *)"CChan_GetModes", _wrap_CChan_GetModes, METH_VARARGS, NULL},
	 { (char *)"CChan_GetKey", _wrap_CChan_GetKey, METH_VARARGS, NULL},
	 { (char *)"CChan_GetTopic", _wrap_CChan_GetTopic, METH_VARARGS, NULL},
	 { (char *)"CChan_GetTopicOwner", _wrap_CChan_GetTopicOwner, METH_VARARGS, NULL},
	 { (char *)"CChan_GetTopicDate", _wrap_CChan_GetTopicDate, METH_VARARGS, NULL},
	 { (char *)"CChan_GetDefaultModes", _wrap_CChan_GetDefaultModes, METH_VARARGS, NULL},
	 { (char *)"CChan_GetNicks", _wrap_CChan_GetNicks, METH_VARARGS, NULL},
	 { (char *)"CChan_GetNickCount", _wrap_CChan_GetNickCount, METH_VARARGS, NULL},
	 { (char *)"CChan_AutoClearChanBuffer", _wrap_CChan_AutoClearChanBuffer, METH_VARARGS, NULL},
	 { (char *)"CChan_IsDetached", _wrap_CChan_IsDetached, METH_VARARGS, NULL},
	 { (char *)"CChan_InConfig", _wrap_CChan_InConfig, METH_VARARGS, NULL},
	 { (char *)"CChan_GetCreationDate", _wrap_CChan_GetCreationDate, METH_VARARGS, NULL},
	 { (char *)"CChan_IsDisabled", _wrap_CChan_IsDisabled, METH_VARARGS, NULL},
	 { (char *)"CChan_GetJoinTries", _wrap_CChan_GetJoinTries, METH_VARARGS, NULL},
	 { (char *)"CChan___str__", _wrap_CChan___str__, METH_VARARGS, NULL},
	 { (char *)"CChan___repr__", _wrap_CChan___repr__, METH_VARARGS, NULL},
	 { (char *)"CChan_GetNicks_", _wrap_CChan_GetNicks_, METH_VARARGS, NULL},
	 { (char *)"CChan_swigregister", CChan_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CUser", _wrap_new_CUser, METH_VARARGS, NULL},
	 { (char *)"delete_CUser", _wrap_delete_CUser, METH_VARARGS, NULL},
	 { (char *)"CUser_ParseConfig", _wrap_CUser_ParseConfig, METH_VARARGS, NULL},
	 { (char *)"CUser_SaltedHash", _wrap_CUser_SaltedHash, METH_VARARGS, NULL},
	 { (char *)"CUser_ToConfig", _wrap_CUser_ToConfig, METH_VARARGS, NULL},
	 { (char *)"CUser_CheckPass", _wrap_CUser_CheckPass, METH_VARARGS, NULL},
	 { (char *)"CUser_AddAllowedHost", _wrap_CUser_AddAllowedHost, METH_VARARGS, NULL},
	 { (char *)"CUser_IsHostAllowed", _wrap_CUser_IsHostAllowed, METH_VARARGS, NULL},
	 { (char *)"CUser_IsValid", _wrap_CUser_IsValid, METH_VARARGS, NULL},
	 { (char *)"CUser_IsValidUserName", _wrap_CUser_IsValidUserName, METH_VARARGS, NULL},
	 { (char *)"CUser_MakeCleanUserName", _wrap_CUser_MakeCleanUserName, METH_VARARGS, NULL},
	 { (char *)"CUser_GetModules", _wrap_CUser_GetModules, METH_VARARGS, NULL},
	 { (char *)"CUser_DeleteNetwork", _wrap_CUser_DeleteNetwork, METH_VARARGS, NULL},
	 { (char *)"CUser_AddNetwork", _wrap_CUser_AddNetwork, METH_VARARGS, NULL},
	 { (char *)"CUser_RemoveNetwork", _wrap_CUser_RemoveNetwork, METH_VARARGS, NULL},
	 { (char *)"CUser_FindNetwork", _wrap_CUser_FindNetwork, METH_VARARGS, NULL},
	 { (char *)"CUser_GetNetworks", _wrap_CUser_GetNetworks, METH_VARARGS, NULL},
	 { (char *)"CUser_PutUser", _wrap_CUser_PutUser, METH_VARARGS, NULL},
	 { (char *)"CUser_PutAllUser", _wrap_CUser_PutAllUser, METH_VARARGS, NULL},
	 { (char *)"CUser_PutStatus", _wrap_CUser_PutStatus, METH_VARARGS, NULL},
	 { (char *)"CUser_PutStatusNotice", _wrap_CUser_PutStatusNotice, METH_VARARGS, NULL},
	 { (char *)"CUser_PutModule", _wrap_CUser_PutModule, METH_VARARGS, NULL},
	 { (char *)"CUser_PutModNotice", _wrap_CUser_PutModNotice, METH_VARARGS, NULL},
	 { (char *)"CUser_IsUserAttached", _wrap_CUser_IsUserAttached, METH_VARARGS, NULL},
	 { (char *)"CUser_UserConnected", _wrap_CUser_UserConnected, METH_VARARGS, NULL},
	 { (char *)"CUser_UserDisconnected", _wrap_CUser_UserDisconnected, METH_VARARGS, NULL},
	 { (char *)"CUser_GetLocalDCCIP", _wrap_CUser_GetLocalDCCIP, METH_VARARGS, NULL},
	 { (char *)"CUser_ExpandString", _wrap_CUser_ExpandString, METH_VARARGS, NULL},
	 { (char *)"CUser_AddTimestamp", _wrap_CUser_AddTimestamp, METH_VARARGS, NULL},
	 { (char *)"CUser_CloneNetworks", _wrap_CUser_CloneNetworks, METH_VARARGS, NULL},
	 { (char *)"CUser_Clone", _wrap_CUser_Clone, METH_VARARGS, NULL},
	 { (char *)"CUser_BounceAllClients", _wrap_CUser_BounceAllClients, METH_VARARGS, NULL},
	 { (char *)"CUser_AddBytesRead", _wrap_CUser_AddBytesRead, METH_VARARGS, NULL},
	 { (char *)"CUser_AddBytesWritten", _wrap_CUser_AddBytesWritten, METH_VARARGS, NULL},
	 { (char *)"CUser_SetNick", _wrap_CUser_SetNick, METH_VARARGS, NULL},
	 { (char *)"CUser_SetAltNick", _wrap_CUser_SetAltNick, METH_VARARGS, NULL},
	 { (char *)"CUser_SetIdent", _wrap_CUser_SetIdent, METH_VARARGS, NULL},
	 { (char *)"CUser_SetRealName", _wrap_CUser_SetRealName, METH_VARARGS, NULL},
	 { (char *)"CUser_SetBindHost", _wrap_CUser_SetBindHost, METH_VARARGS, NULL},
	 { (char *)"CUser_SetDCCBindHost", _wrap_CUser_SetDCCBindHost, METH_VARARGS, NULL},
	 { (char *)"CUser_SetPass", _wrap_CUser_SetPass, METH_VARARGS, NULL},
	 { (char *)"CUser_SetMultiClients", _wrap_CUser_SetMultiClients, METH_VARARGS, NULL},
	 { (char *)"CUser_SetDenyLoadMod", _wrap_CUser_SetDenyLoadMod, METH_VARARGS, NULL},
	 { (char *)"CUser_SetAdmin", _wrap_CUser_SetAdmin, METH_VARARGS, NULL},
	 { (char *)"CUser_SetDenySetBindHost", _wrap_CUser_SetDenySetBindHost, METH_VARARGS, NULL},
	 { (char *)"CUser_SetStatusPrefix", _wrap_CUser_SetStatusPrefix, METH_VARARGS, NULL},
	 { (char *)"CUser_SetDefaultChanModes", _wrap_CUser_SetDefaultChanModes, METH_VARARGS, NULL},
	 { (char *)"CUser_SetQuitMsg", _wrap_CUser_SetQuitMsg, METH_VARARGS, NULL},
	 { (char *)"CUser_AddCTCPReply", _wrap_CUser_AddCTCPReply, METH_VARARGS, NULL},
	 { (char *)"CUser_DelCTCPReply", _wrap_CUser_DelCTCPReply, METH_VARARGS, NULL},
	 { (char *)"CUser_SetBufferCount", _wrap_CUser_SetBufferCount, METH_VARARGS, NULL},
	 { (char *)"CUser_SetAutoClearChanBuffer", _wrap_CUser_SetAutoClearChanBuffer, METH_VARARGS, NULL},
	 { (char *)"CUser_SetBeingDeleted", _wrap_CUser_SetBeingDeleted, METH_VARARGS, NULL},
	 { (char *)"CUser_SetTimestampFormat", _wrap_CUser_SetTimestampFormat, METH_VARARGS, NULL},
	 { (char *)"CUser_SetTimestampAppend", _wrap_CUser_SetTimestampAppend, METH_VARARGS, NULL},
	 { (char *)"CUser_SetTimestampPrepend", _wrap_CUser_SetTimestampPrepend, METH_VARARGS, NULL},
	 { (char *)"CUser_SetTimezone", _wrap_CUser_SetTimezone, METH_VARARGS, NULL},
	 { (char *)"CUser_SetJoinTries", _wrap_CUser_SetJoinTries, METH_VARARGS, NULL},
	 { (char *)"CUser_SetSkinName", _wrap_CUser_SetSkinName, METH_VARARGS, NULL},
	 { (char *)"CUser_GetUserClients", _wrap_CUser_GetUserClients, METH_VARARGS, NULL},
	 { (char *)"CUser_GetAllClients", _wrap_CUser_GetAllClients, METH_VARARGS, NULL},
	 { (char *)"CUser_GetUserName", _wrap_CUser_GetUserName, METH_VARARGS, NULL},
	 { (char *)"CUser_GetCleanUserName", _wrap_CUser_GetCleanUserName, METH_VARARGS, NULL},
	 { (char *)"CUser_GetNick", _wrap_CUser_GetNick, METH_VARARGS, NULL},
	 { (char *)"CUser_GetAltNick", _wrap_CUser_GetAltNick, METH_VARARGS, NULL},
	 { (char *)"CUser_GetIdent", _wrap_CUser_GetIdent, METH_VARARGS, NULL},
	 { (char *)"CUser_GetRealName", _wrap_CUser_GetRealName, METH_VARARGS, NULL},
	 { (char *)"CUser_GetBindHost", _wrap_CUser_GetBindHost, METH_VARARGS, NULL},
	 { (char *)"CUser_GetDCCBindHost", _wrap_CUser_GetDCCBindHost, METH_VARARGS, NULL},
	 { (char *)"CUser_GetPass", _wrap_CUser_GetPass, METH_VARARGS, NULL},
	 { (char *)"CUser_GetPassHashType", _wrap_CUser_GetPassHashType, METH_VARARGS, NULL},
	 { (char *)"CUser_GetPassSalt", _wrap_CUser_GetPassSalt, METH_VARARGS, NULL},
	 { (char *)"CUser_GetAllowedHosts", _wrap_CUser_GetAllowedHosts, METH_VARARGS, NULL},
	 { (char *)"CUser_GetTimestampFormat", _wrap_CUser_GetTimestampFormat, METH_VARARGS, NULL},
	 { (char *)"CUser_GetTimestampAppend", _wrap_CUser_GetTimestampAppend, METH_VARARGS, NULL},
	 { (char *)"CUser_GetTimestampPrepend", _wrap_CUser_GetTimestampPrepend, METH_VARARGS, NULL},
	 { (char *)"CUser_GetUserPath", _wrap_CUser_GetUserPath, METH_VARARGS, NULL},
	 { (char *)"CUser_DenyLoadMod", _wrap_CUser_DenyLoadMod, METH_VARARGS, NULL},
	 { (char *)"CUser_IsAdmin", _wrap_CUser_IsAdmin, METH_VARARGS, NULL},
	 { (char *)"CUser_DenySetBindHost", _wrap_CUser_DenySetBindHost, METH_VARARGS, NULL},
	 { (char *)"CUser_MultiClients", _wrap_CUser_MultiClients, METH_VARARGS, NULL},
	 { (char *)"CUser_GetStatusPrefix", _wrap_CUser_GetStatusPrefix, METH_VARARGS, NULL},
	 { (char *)"CUser_GetDefaultChanModes", _wrap_CUser_GetDefaultChanModes, METH_VARARGS, NULL},
	 { (char *)"CUser_GetQuitMsg", _wrap_CUser_GetQuitMsg, METH_VARARGS, NULL},
	 { (char *)"CUser_GetCTCPReplies", _wrap_CUser_GetCTCPReplies, METH_VARARGS, NULL},
	 { (char *)"CUser_GetBufferCount", _wrap_CUser_GetBufferCount, METH_VARARGS, NULL},
	 { (char *)"CUser_AutoClearChanBuffer", _wrap_CUser_AutoClearChanBuffer, METH_VARARGS, NULL},
	 { (char *)"CUser_IsBeingDeleted", _wrap_CUser_IsBeingDeleted, METH_VARARGS, NULL},
	 { (char *)"CUser_GetTimezone", _wrap_CUser_GetTimezone, METH_VARARGS, NULL},
	 { (char *)"CUser_BytesRead", _wrap_CUser_BytesRead, METH_VARARGS, NULL},
	 { (char *)"CUser_BytesWritten", _wrap_CUser_BytesWritten, METH_VARARGS, NULL},
	 { (char *)"CUser_JoinTries", _wrap_CUser_JoinTries, METH_VARARGS, NULL},
	 { (char *)"CUser_GetSkinName", _wrap_CUser_GetSkinName, METH_VARARGS, NULL},
	 { (char *)"CUser___str__", _wrap_CUser___str__, METH_VARARGS, NULL},
	 { (char *)"CUser___repr__", _wrap_CUser___repr__, METH_VARARGS, NULL},
	 { (char *)"CUser_GetNetworks_", _wrap_CUser_GetNetworks_, METH_VARARGS, NULL},
	 { (char *)"CUser_swigregister", CUser_swigregister, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_IsValidNetwork", _wrap_CIRCNetwork_IsValidNetwork, METH_VARARGS, NULL},
	 { (char *)"new_CIRCNetwork", _wrap_new_CIRCNetwork, METH_VARARGS, NULL},
	 { (char *)"delete_CIRCNetwork", _wrap_delete_CIRCNetwork, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_Clone", _wrap_CIRCNetwork_Clone, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_GetNetworkPath", _wrap_CIRCNetwork_GetNetworkPath, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_DelServers", _wrap_CIRCNetwork_DelServers, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_ParseConfig", _wrap_CIRCNetwork_ParseConfig, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_ToConfig", _wrap_CIRCNetwork_ToConfig, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_BounceAllClients", _wrap_CIRCNetwork_BounceAllClients, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_IsUserAttached", _wrap_CIRCNetwork_IsUserAttached, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_IsUserOnline", _wrap_CIRCNetwork_IsUserOnline, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_ClientConnected", _wrap_CIRCNetwork_ClientConnected, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_ClientDisconnected", _wrap_CIRCNetwork_ClientDisconnected, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_GetUser", _wrap_CIRCNetwork_GetUser, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_GetName", _wrap_CIRCNetwork_GetName, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_IsNetworkAttached", _wrap_CIRCNetwork_IsNetworkAttached, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_GetClients", _wrap_CIRCNetwork_GetClients, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_SetUser", _wrap_CIRCNetwork_SetUser, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_SetName", _wrap_CIRCNetwork_SetName, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_GetModules", _wrap_CIRCNetwork_GetModules, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_PutUser", _wrap_CIRCNetwork_PutUser, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_PutStatus", _wrap_CIRCNetwork_PutStatus, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_PutModule", _wrap_CIRCNetwork_PutModule, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_GetChans", _wrap_CIRCNetwork_GetChans, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_FindChan", _wrap_CIRCNetwork_FindChan, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_AddChan", _wrap_CIRCNetwork_AddChan, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_DelChan", _wrap_CIRCNetwork_DelChan, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_JoinChans", _wrap_CIRCNetwork_JoinChans, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_GetChanPrefixes", _wrap_CIRCNetwork_GetChanPrefixes, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_SetChanPrefixes", _wrap_CIRCNetwork_SetChanPrefixes, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_IsChan", _wrap_CIRCNetwork_IsChan, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_GetServers", _wrap_CIRCNetwork_GetServers, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_HasServers", _wrap_CIRCNetwork_HasServers, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_FindServer", _wrap_CIRCNetwork_FindServer, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_DelServer", _wrap_CIRCNetwork_DelServer, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_AddServer", _wrap_CIRCNetwork_AddServer, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_GetNextServer", _wrap_CIRCNetwork_GetNextServer, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_GetCurrentServer", _wrap_CIRCNetwork_GetCurrentServer, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_SetIRCServer", _wrap_CIRCNetwork_SetIRCServer, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_SetNextServer", _wrap_CIRCNetwork_SetNextServer, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_IsLastServer", _wrap_CIRCNetwork_IsLastServer, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_SetIRCConnectEnabled", _wrap_CIRCNetwork_SetIRCConnectEnabled, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_GetIRCConnectEnabled", _wrap_CIRCNetwork_GetIRCConnectEnabled, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_GetIRCSock", _wrap_CIRCNetwork_GetIRCSock, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_GetIRCServer", _wrap_CIRCNetwork_GetIRCServer, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_GetIRCNick", _wrap_CIRCNetwork_GetIRCNick, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_SetIRCNick", _wrap_CIRCNetwork_SetIRCNick, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_GetCurNick", _wrap_CIRCNetwork_GetCurNick, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_IsIRCAway", _wrap_CIRCNetwork_IsIRCAway, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_SetIRCAway", _wrap_CIRCNetwork_SetIRCAway, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_Connect", _wrap_CIRCNetwork_Connect, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_IsIRCConnected", _wrap_CIRCNetwork_IsIRCConnected, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_SetIRCSocket", _wrap_CIRCNetwork_SetIRCSocket, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_IRCDisconnected", _wrap_CIRCNetwork_IRCDisconnected, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_CheckIRCConnect", _wrap_CIRCNetwork_CheckIRCConnect, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_PutIRC", _wrap_CIRCNetwork_PutIRC, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_AddRawBuffer", _wrap_CIRCNetwork_AddRawBuffer, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_UpdateRawBuffer", _wrap_CIRCNetwork_UpdateRawBuffer, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_UpdateExactRawBuffer", _wrap_CIRCNetwork_UpdateExactRawBuffer, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_ClearRawBuffer", _wrap_CIRCNetwork_ClearRawBuffer, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_AddMotdBuffer", _wrap_CIRCNetwork_AddMotdBuffer, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_UpdateMotdBuffer", _wrap_CIRCNetwork_UpdateMotdBuffer, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_ClearMotdBuffer", _wrap_CIRCNetwork_ClearMotdBuffer, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_AddQueryBuffer", _wrap_CIRCNetwork_AddQueryBuffer, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_UpdateQueryBuffer", _wrap_CIRCNetwork_UpdateQueryBuffer, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_ClearQueryBuffer", _wrap_CIRCNetwork_ClearQueryBuffer, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_GetNick", _wrap_CIRCNetwork_GetNick, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_GetAltNick", _wrap_CIRCNetwork_GetAltNick, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_GetIdent", _wrap_CIRCNetwork_GetIdent, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_GetRealName", _wrap_CIRCNetwork_GetRealName, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_SetNick", _wrap_CIRCNetwork_SetNick, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_SetAltNick", _wrap_CIRCNetwork_SetAltNick, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_SetIdent", _wrap_CIRCNetwork_SetIdent, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_SetRealName", _wrap_CIRCNetwork_SetRealName, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_GetFloodRate", _wrap_CIRCNetwork_GetFloodRate, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_GetFloodBurst", _wrap_CIRCNetwork_GetFloodBurst, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_SetFloodRate", _wrap_CIRCNetwork_SetFloodRate, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_SetFloodBurst", _wrap_CIRCNetwork_SetFloodBurst, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_ExpandString", _wrap_CIRCNetwork_ExpandString, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork___str__", _wrap_CIRCNetwork___str__, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork___repr__", _wrap_CIRCNetwork___repr__, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_GetChans_", _wrap_CIRCNetwork_GetChans_, METH_VARARGS, NULL},
	 { (char *)"CIRCNetwork_swigregister", CIRCNetwork_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_CAuthBase", _wrap_delete_CAuthBase, METH_VARARGS, NULL},
	 { (char *)"CAuthBase_SetLoginInfo", _wrap_CAuthBase_SetLoginInfo, METH_VARARGS, NULL},
	 { (char *)"CAuthBase_AcceptLogin", _wrap_CAuthBase_AcceptLogin, METH_VARARGS, NULL},
	 { (char *)"CAuthBase_RefuseLogin", _wrap_CAuthBase_RefuseLogin, METH_VARARGS, NULL},
	 { (char *)"CAuthBase_GetUsername", _wrap_CAuthBase_GetUsername, METH_VARARGS, NULL},
	 { (char *)"CAuthBase_GetPassword", _wrap_CAuthBase_GetPassword, METH_VARARGS, NULL},
	 { (char *)"CAuthBase_GetSocket", _wrap_CAuthBase_GetSocket, METH_VARARGS, NULL},
	 { (char *)"CAuthBase_GetRemoteIP", _wrap_CAuthBase_GetRemoteIP, METH_VARARGS, NULL},
	 { (char *)"CAuthBase_Invalidate", _wrap_CAuthBase_Invalidate, METH_VARARGS, NULL},
	 { (char *)"CAuthBase_swigregister", CAuthBase_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CClientAuth", _wrap_new_CClientAuth, METH_VARARGS, NULL},
	 { (char *)"delete_CClientAuth", _wrap_delete_CClientAuth, METH_VARARGS, NULL},
	 { (char *)"CClientAuth_Invalidate", _wrap_CClientAuth_Invalidate, METH_VARARGS, NULL},
	 { (char *)"CClientAuth_AcceptedLogin", _wrap_CClientAuth_AcceptedLogin, METH_VARARGS, NULL},
	 { (char *)"CClientAuth_RefusedLogin", _wrap_CClientAuth_RefusedLogin, METH_VARARGS, NULL},
	 { (char *)"CClientAuth_swigregister", CClientAuth_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CClient", _wrap_new_CClient, METH_VARARGS, NULL},
	 { (char *)"delete_CClient", _wrap_delete_CClient, METH_VARARGS, NULL},
	 { (char *)"CClient_AcceptLogin", _wrap_CClient_AcceptLogin, METH_VARARGS, NULL},
	 { (char *)"CClient_RefuseLogin", _wrap_CClient_RefuseLogin, METH_VARARGS, NULL},
	 { (char *)"CClient_GetNick", _wrap_CClient_GetNick, METH_VARARGS, NULL},
	 { (char *)"CClient_GetNickMask", _wrap_CClient_GetNickMask, METH_VARARGS, NULL},
	 { (char *)"CClient_HasNamesx", _wrap_CClient_HasNamesx, METH_VARARGS, NULL},
	 { (char *)"CClient_HasUHNames", _wrap_CClient_HasUHNames, METH_VARARGS, NULL},
	 { (char *)"CClient_IsAway", _wrap_CClient_IsAway, METH_VARARGS, NULL},
	 { (char *)"CClient_HasServerTime", _wrap_CClient_HasServerTime, METH_VARARGS, NULL},
	 { (char *)"CClient_UserCommand", _wrap_CClient_UserCommand, METH_VARARGS, NULL},
	 { (char *)"CClient_UserPortCommand", _wrap_CClient_UserPortCommand, METH_VARARGS, NULL},
	 { (char *)"CClient_StatusCTCP", _wrap_CClient_StatusCTCP, METH_VARARGS, NULL},
	 { (char *)"CClient_BouncedOff", _wrap_CClient_BouncedOff, METH_VARARGS, NULL},
	 { (char *)"CClient_IsAttached", _wrap_CClient_IsAttached, METH_VARARGS, NULL},
	 { (char *)"CClient_PutIRC", _wrap_CClient_PutIRC, METH_VARARGS, NULL},
	 { (char *)"CClient_PutClient", _wrap_CClient_PutClient, METH_VARARGS, NULL},
	 { (char *)"CClient_PutStatus", _wrap_CClient_PutStatus, METH_VARARGS, NULL},
	 { (char *)"CClient_PutStatusNotice", _wrap_CClient_PutStatusNotice, METH_VARARGS, NULL},
	 { (char *)"CClient_PutModule", _wrap_CClient_PutModule, METH_VARARGS, NULL},
	 { (char *)"CClient_PutModNotice", _wrap_CClient_PutModNotice, METH_VARARGS, NULL},
	 { (char *)"CClient_IsCapEnabled", _wrap_CClient_IsCapEnabled, METH_VARARGS, NULL},
	 { (char *)"CClient_ReadLine", _wrap_CClient_ReadLine, METH_VARARGS, NULL},
	 { (char *)"CClient_SendMotd", _wrap_CClient_SendMotd, METH_VARARGS, NULL},
	 { (char *)"CClient_HelpUser", _wrap_CClient_HelpUser, METH_VARARGS, NULL},
	 { (char *)"CClient_AuthUser", _wrap_CClient_AuthUser, METH_VARARGS, NULL},
	 { (char *)"CClient_Connected", _wrap_CClient_Connected, METH_VARARGS, NULL},
	 { (char *)"CClient_Timeout", _wrap_CClient_Timeout, METH_VARARGS, NULL},
	 { (char *)"CClient_Disconnected", _wrap_CClient_Disconnected, METH_VARARGS, NULL},
	 { (char *)"CClient_ConnectionRefused", _wrap_CClient_ConnectionRefused, METH_VARARGS, NULL},
	 { (char *)"CClient_ReachedMaxBuffer", _wrap_CClient_ReachedMaxBuffer, METH_VARARGS, NULL},
	 { (char *)"CClient_SetNick", _wrap_CClient_SetNick, METH_VARARGS, NULL},
	 { (char *)"CClient_SetAway", _wrap_CClient_SetAway, METH_VARARGS, NULL},
	 { (char *)"CClient_GetUser", _wrap_CClient_GetUser, METH_VARARGS, NULL},
	 { (char *)"CClient_SetNetwork", _wrap_CClient_SetNetwork, METH_VARARGS, NULL},
	 { (char *)"CClient_GetNetwork", _wrap_CClient_GetNetwork, METH_VARARGS, NULL},
	 { (char *)"CClient_GetClients", _wrap_CClient_GetClients, METH_VARARGS, NULL},
	 { (char *)"CClient_GetIRCSock", _wrap_CClient_GetIRCSock, METH_VARARGS, NULL},
	 { (char *)"CClient_GetFullName", _wrap_CClient_GetFullName, METH_VARARGS, NULL},
	 { (char *)"CClient_swigregister", CClient_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CIRCSock", _wrap_new_CIRCSock, METH_VARARGS, NULL},
	 { (char *)"delete_CIRCSock", _wrap_delete_CIRCSock, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_OnCTCPReply", _wrap_CIRCSock_OnCTCPReply, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_OnPrivCTCP", _wrap_CIRCSock_OnPrivCTCP, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_OnChanCTCP", _wrap_CIRCSock_OnChanCTCP, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_OnGeneralCTCP", _wrap_CIRCSock_OnGeneralCTCP, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_OnPrivMsg", _wrap_CIRCSock_OnPrivMsg, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_OnChanMsg", _wrap_CIRCSock_OnChanMsg, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_OnPrivNotice", _wrap_CIRCSock_OnPrivNotice, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_OnChanNotice", _wrap_CIRCSock_OnChanNotice, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_OnServerCapAvailable", _wrap_CIRCSock_OnServerCapAvailable, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_ReadLine", _wrap_CIRCSock_ReadLine, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_Connected", _wrap_CIRCSock_Connected, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_Disconnected", _wrap_CIRCSock_Disconnected, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_ConnectionRefused", _wrap_CIRCSock_ConnectionRefused, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_SockError", _wrap_CIRCSock_SockError, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_Timeout", _wrap_CIRCSock_Timeout, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_ReachedMaxBuffer", _wrap_CIRCSock_ReachedMaxBuffer, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_PutIRC", _wrap_CIRCSock_PutIRC, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_PutIRCQuick", _wrap_CIRCSock_PutIRCQuick, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_ResetChans", _wrap_CIRCSock_ResetChans, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_Quit", _wrap_CIRCSock_Quit, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_PauseCap", _wrap_CIRCSock_PauseCap, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_ResumeCap", _wrap_CIRCSock_ResumeCap, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_SetPass", _wrap_CIRCSock_SetPass, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_GetMaxNickLen", _wrap_CIRCSock_GetMaxNickLen, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_GetModeType", _wrap_CIRCSock_GetModeType, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_GetPermFromMode", _wrap_CIRCSock_GetPermFromMode, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_GetChanModes", _wrap_CIRCSock_GetChanModes, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_IsPermChar", _wrap_CIRCSock_IsPermChar, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_IsPermMode", _wrap_CIRCSock_IsPermMode, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_GetPerms", _wrap_CIRCSock_GetPerms, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_GetPermModes", _wrap_CIRCSock_GetPermModes, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_GetNickMask", _wrap_CIRCSock_GetNickMask, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_GetNick", _wrap_CIRCSock_GetNick, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_GetPass", _wrap_CIRCSock_GetPass, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_GetNetwork", _wrap_CIRCSock_GetNetwork, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_HasNamesx", _wrap_CIRCSock_HasNamesx, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_HasUHNames", _wrap_CIRCSock_HasUHNames, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_GetUserModes", _wrap_CIRCSock_GetUserModes, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_IsAuthed", _wrap_CIRCSock_IsAuthed, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_IsCapAccepted", _wrap_CIRCSock_IsCapAccepted, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_GetISupport", _wrap_CIRCSock_GetISupport, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_ForwardRaw353", _wrap_CIRCSock_ForwardRaw353, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_IsFloodProtected", _wrap_CIRCSock_IsFloodProtected, METH_VARARGS, NULL},
	 { (char *)"CIRCSock_swigregister", CIRCSock_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CListener", _wrap_new_CListener, METH_VARARGS, NULL},
	 { (char *)"delete_CListener", _wrap_delete_CListener, METH_VARARGS, NULL},
	 { (char *)"CListener_IsSSL", _wrap_CListener_IsSSL, METH_VARARGS, NULL},
	 { (char *)"CListener_GetAddrType", _wrap_CListener_GetAddrType, METH_VARARGS, NULL},
	 { (char *)"CListener_GetPort", _wrap_CListener_GetPort, METH_VARARGS, NULL},
	 { (char *)"CListener_GetBindHost", _wrap_CListener_GetBindHost, METH_VARARGS, NULL},
	 { (char *)"CListener_GetRealListener", _wrap_CListener_GetRealListener, METH_VARARGS, NULL},
	 { (char *)"CListener_GetAcceptType", _wrap_CListener_GetAcceptType, METH_VARARGS, NULL},
	 { (char *)"CListener_SetAcceptType", _wrap_CListener_SetAcceptType, METH_VARARGS, NULL},
	 { (char *)"CListener_Listen", _wrap_CListener_Listen, METH_VARARGS, NULL},
	 { (char *)"CListener_ResetRealListener", _wrap_CListener_ResetRealListener, METH_VARARGS, NULL},
	 { (char *)"CListener_swigregister", CListener_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CRealListener", _wrap_new_CRealListener, METH_VARARGS, NULL},
	 { (char *)"delete_CRealListener", _wrap_delete_CRealListener, METH_VARARGS, NULL},
	 { (char *)"CRealListener_ConnectionFrom", _wrap_CRealListener_ConnectionFrom, METH_VARARGS, NULL},
	 { (char *)"CRealListener_GetSockObj", _wrap_CRealListener_GetSockObj, METH_VARARGS, NULL},
	 { (char *)"CRealListener_SockError", _wrap_CRealListener_SockError, METH_VARARGS, NULL},
	 { (char *)"CRealListener_swigregister", CRealListener_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CIncomingConnection", _wrap_new_CIncomingConnection, METH_VARARGS, NULL},
	 { (char *)"delete_CIncomingConnection", _wrap_delete_CIncomingConnection, METH_VARARGS, NULL},
	 { (char *)"CIncomingConnection_ReadLine", _wrap_CIncomingConnection_ReadLine, METH_VARARGS, NULL},
	 { (char *)"CIncomingConnection_ReachedMaxBuffer", _wrap_CIncomingConnection_ReachedMaxBuffer, METH_VARARGS, NULL},
	 { (char *)"CIncomingConnection_swigregister", CIncomingConnection_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_CHTTPSock", _wrap_delete_CHTTPSock, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_ReadData", _wrap_CHTTPSock_ReadData, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_ReadLine", _wrap_CHTTPSock_ReadLine, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_Connected", _wrap_CHTTPSock_Connected, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_GetSockObj", _wrap_CHTTPSock_GetSockObj, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_ForceLogin", _wrap_CHTTPSock_ForceLogin, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_OnLogin", _wrap_CHTTPSock_OnLogin, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_OnPageRequest", _wrap_CHTTPSock_OnPageRequest, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_PrintFile", _wrap_CHTTPSock_PrintFile, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_CheckPost", _wrap_CHTTPSock_CheckPost, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_SentHeader", _wrap_CHTTPSock_SentHeader, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_PrintHeader", _wrap_CHTTPSock_PrintHeader, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_AddHeader", _wrap_CHTTPSock_AddHeader, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_SetContentType", _wrap_CHTTPSock_SetContentType, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_PrintNotFound", _wrap_CHTTPSock_PrintNotFound, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_Redirect", _wrap_CHTTPSock_Redirect, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_PrintErrorPage", _wrap_CHTTPSock_PrintErrorPage, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_ParseParams", _wrap_CHTTPSock_ParseParams, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_ParseURI", _wrap_CHTTPSock_ParseURI, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_GetPage", _wrap_CHTTPSock_GetPage, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_GetDate", _wrap_CHTTPSock_GetDate, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_GetRequestCookie", _wrap_CHTTPSock_GetRequestCookie, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_SendCookie", _wrap_CHTTPSock_SendCookie, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_SetDocRoot", _wrap_CHTTPSock_SetDocRoot, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_SetLoggedIn", _wrap_CHTTPSock_SetLoggedIn, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_GetPath", _wrap_CHTTPSock_GetPath, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_IsLoggedIn", _wrap_CHTTPSock_IsLoggedIn, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_GetDocRoot", _wrap_CHTTPSock_GetDocRoot, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_GetUser", _wrap_CHTTPSock_GetUser, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_GetPass", _wrap_CHTTPSock_GetPass, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_GetParamString", _wrap_CHTTPSock_GetParamString, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_GetContentType", _wrap_CHTTPSock_GetContentType, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_IsPost", _wrap_CHTTPSock_IsPost, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_GetParam", _wrap_CHTTPSock_GetParam, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_GetRawParam", _wrap_CHTTPSock_GetRawParam, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_HasParam", _wrap_CHTTPSock_HasParam, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_GetParams", _wrap_CHTTPSock_GetParams, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_GetParamValues", _wrap_CHTTPSock_GetParamValues, METH_VARARGS, NULL},
	 { (char *)"CHTTPSock_swigregister", CHTTPSock_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CTemplateTagHandler", _wrap_new_CTemplateTagHandler, METH_VARARGS, NULL},
	 { (char *)"delete_CTemplateTagHandler", _wrap_delete_CTemplateTagHandler, METH_VARARGS, NULL},
	 { (char *)"CTemplateTagHandler_HandleVar", _wrap_CTemplateTagHandler_HandleVar, METH_VARARGS, NULL},
	 { (char *)"CTemplateTagHandler_HandleTag", _wrap_CTemplateTagHandler_HandleTag, METH_VARARGS, NULL},
	 { (char *)"CTemplateTagHandler_HandleIf", _wrap_CTemplateTagHandler_HandleIf, METH_VARARGS, NULL},
	 { (char *)"CTemplateTagHandler_HandleValue", _wrap_CTemplateTagHandler_HandleValue, METH_VARARGS, NULL},
	 { (char *)"CTemplateTagHandler_swigregister", CTemplateTagHandler_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CTemplateOptions", _wrap_new_CTemplateOptions, METH_VARARGS, NULL},
	 { (char *)"delete_CTemplateOptions", _wrap_delete_CTemplateOptions, METH_VARARGS, NULL},
	 { (char *)"CTemplateOptions_Parse", _wrap_CTemplateOptions_Parse, METH_VARARGS, NULL},
	 { (char *)"CTemplateOptions_GetEscapeFrom", _wrap_CTemplateOptions_GetEscapeFrom, METH_VARARGS, NULL},
	 { (char *)"CTemplateOptions_GetEscapeTo", _wrap_CTemplateOptions_GetEscapeTo, METH_VARARGS, NULL},
	 { (char *)"CTemplateOptions_swigregister", CTemplateOptions_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CTemplateLoopContext", _wrap_new_CTemplateLoopContext, METH_VARARGS, NULL},
	 { (char *)"delete_CTemplateLoopContext", _wrap_delete_CTemplateLoopContext, METH_VARARGS, NULL},
	 { (char *)"CTemplateLoopContext_SetHasData", _wrap_CTemplateLoopContext_SetHasData, METH_VARARGS, NULL},
	 { (char *)"CTemplateLoopContext_SetName", _wrap_CTemplateLoopContext_SetName, METH_VARARGS, NULL},
	 { (char *)"CTemplateLoopContext_SetRowIndex", _wrap_CTemplateLoopContext_SetRowIndex, METH_VARARGS, NULL},
	 { (char *)"CTemplateLoopContext_IncRowIndex", _wrap_CTemplateLoopContext_IncRowIndex, METH_VARARGS, NULL},
	 { (char *)"CTemplateLoopContext_DecRowIndex", _wrap_CTemplateLoopContext_DecRowIndex, METH_VARARGS, NULL},
	 { (char *)"CTemplateLoopContext_SetFilePosition", _wrap_CTemplateLoopContext_SetFilePosition, METH_VARARGS, NULL},
	 { (char *)"CTemplateLoopContext_HasData", _wrap_CTemplateLoopContext_HasData, METH_VARARGS, NULL},
	 { (char *)"CTemplateLoopContext_GetName", _wrap_CTemplateLoopContext_GetName, METH_VARARGS, NULL},
	 { (char *)"CTemplateLoopContext_GetFilePosition", _wrap_CTemplateLoopContext_GetFilePosition, METH_VARARGS, NULL},
	 { (char *)"CTemplateLoopContext_GetRowIndex", _wrap_CTemplateLoopContext_GetRowIndex, METH_VARARGS, NULL},
	 { (char *)"CTemplateLoopContext_GetRowCount", _wrap_CTemplateLoopContext_GetRowCount, METH_VARARGS, NULL},
	 { (char *)"CTemplateLoopContext_GetRows", _wrap_CTemplateLoopContext_GetRows, METH_VARARGS, NULL},
	 { (char *)"CTemplateLoopContext_GetNextRow", _wrap_CTemplateLoopContext_GetNextRow, METH_VARARGS, NULL},
	 { (char *)"CTemplateLoopContext_GetCurRow", _wrap_CTemplateLoopContext_GetCurRow, METH_VARARGS, NULL},
	 { (char *)"CTemplateLoopContext_GetRow", _wrap_CTemplateLoopContext_GetRow, METH_VARARGS, NULL},
	 { (char *)"CTemplateLoopContext_GetValue", _wrap_CTemplateLoopContext_GetValue, METH_VARARGS, NULL},
	 { (char *)"CTemplateLoopContext_swigregister", CTemplateLoopContext_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CTemplate", _wrap_new_CTemplate, METH_VARARGS, NULL},
	 { (char *)"delete_CTemplate", _wrap_delete_CTemplate, METH_VARARGS, NULL},
	 { (char *)"CTemplate_AddTagHandler", _wrap_CTemplate_AddTagHandler, METH_VARARGS, NULL},
	 { (char *)"CTemplate_GetTagHandlers", _wrap_CTemplate_GetTagHandlers, METH_VARARGS, NULL},
	 { (char *)"CTemplate_ResolveLiteral", _wrap_CTemplate_ResolveLiteral, METH_VARARGS, NULL},
	 { (char *)"CTemplate_Init", _wrap_CTemplate_Init, METH_VARARGS, NULL},
	 { (char *)"CTemplate_GetParent", _wrap_CTemplate_GetParent, METH_VARARGS, NULL},
	 { (char *)"CTemplate_ExpandFile", _wrap_CTemplate_ExpandFile, METH_VARARGS, NULL},
	 { (char *)"CTemplate_SetFile", _wrap_CTemplate_SetFile, METH_VARARGS, NULL},
	 { (char *)"CTemplate_SetPath", _wrap_CTemplate_SetPath, METH_VARARGS, NULL},
	 { (char *)"CTemplate_MakePath", _wrap_CTemplate_MakePath, METH_VARARGS, NULL},
	 { (char *)"CTemplate_PrependPath", _wrap_CTemplate_PrependPath, METH_VARARGS, NULL},
	 { (char *)"CTemplate_AppendPath", _wrap_CTemplate_AppendPath, METH_VARARGS, NULL},
	 { (char *)"CTemplate_RemovePath", _wrap_CTemplate_RemovePath, METH_VARARGS, NULL},
	 { (char *)"CTemplate_ClearPaths", _wrap_CTemplate_ClearPaths, METH_VARARGS, NULL},
	 { (char *)"CTemplate_PrintString", _wrap_CTemplate_PrintString, METH_VARARGS, NULL},
	 { (char *)"CTemplate_Print", _wrap_CTemplate_Print, METH_VARARGS, NULL},
	 { (char *)"CTemplate_ValidIf", _wrap_CTemplate_ValidIf, METH_VARARGS, NULL},
	 { (char *)"CTemplate_ValidExpr", _wrap_CTemplate_ValidExpr, METH_VARARGS, NULL},
	 { (char *)"CTemplate_IsTrue", _wrap_CTemplate_IsTrue, METH_VARARGS, NULL},
	 { (char *)"CTemplate_HasLoop", _wrap_CTemplate_HasLoop, METH_VARARGS, NULL},
	 { (char *)"CTemplate_GetValue", _wrap_CTemplate_GetValue, METH_VARARGS, NULL},
	 { (char *)"CTemplate_AddRow", _wrap_CTemplate_AddRow, METH_VARARGS, NULL},
	 { (char *)"CTemplate_GetRow", _wrap_CTemplate_GetRow, METH_VARARGS, NULL},
	 { (char *)"CTemplate_GetLoop", _wrap_CTemplate_GetLoop, METH_VARARGS, NULL},
	 { (char *)"CTemplate_DelCurLoopContext", _wrap_CTemplate_DelCurLoopContext, METH_VARARGS, NULL},
	 { (char *)"CTemplate_GetCurLoopContext", _wrap_CTemplate_GetCurLoopContext, METH_VARARGS, NULL},
	 { (char *)"CTemplate_GetCurTemplate", _wrap_CTemplate_GetCurTemplate, METH_VARARGS, NULL},
	 { (char *)"CTemplate_GetFileName", _wrap_CTemplate_GetFileName, METH_VARARGS, NULL},
	 { (char *)"CTemplate_set", _wrap_CTemplate_set, METH_VARARGS, NULL},
	 { (char *)"CTemplate_swigregister", CTemplate_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CZNCTagHandler", _wrap_new_CZNCTagHandler, METH_VARARGS, NULL},
	 { (char *)"delete_CZNCTagHandler", _wrap_delete_CZNCTagHandler, METH_VARARGS, NULL},
	 { (char *)"CZNCTagHandler_HandleTag", _wrap_CZNCTagHandler_HandleTag, METH_VARARGS, NULL},
	 { (char *)"CZNCTagHandler_swigregister", CZNCTagHandler_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CWebSession", _wrap_new_CWebSession, METH_VARARGS, NULL},
	 { (char *)"delete_CWebSession", _wrap_delete_CWebSession, METH_VARARGS, NULL},
	 { (char *)"CWebSession_GetId", _wrap_CWebSession_GetId, METH_VARARGS, NULL},
	 { (char *)"CWebSession_GetIP", _wrap_CWebSession_GetIP, METH_VARARGS, NULL},
	 { (char *)"CWebSession_GetUser", _wrap_CWebSession_GetUser, METH_VARARGS, NULL},
	 { (char *)"CWebSession_IsLoggedIn", _wrap_CWebSession_IsLoggedIn, METH_VARARGS, NULL},
	 { (char *)"CWebSession_IsAdmin", _wrap_CWebSession_IsAdmin, METH_VARARGS, NULL},
	 { (char *)"CWebSession_SetUser", _wrap_CWebSession_SetUser, METH_VARARGS, NULL},
	 { (char *)"CWebSession_ClearMessageLoops", _wrap_CWebSession_ClearMessageLoops, METH_VARARGS, NULL},
	 { (char *)"CWebSession_FillMessageLoops", _wrap_CWebSession_FillMessageLoops, METH_VARARGS, NULL},
	 { (char *)"CWebSession_AddError", _wrap_CWebSession_AddError, METH_VARARGS, NULL},
	 { (char *)"CWebSession_AddSuccess", _wrap_CWebSession_AddSuccess, METH_VARARGS, NULL},
	 { (char *)"CWebSession_swigregister", CWebSession_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CWebSubPage", _wrap_new_CWebSubPage, METH_VARARGS, NULL},
	 { (char *)"delete_CWebSubPage", _wrap_delete_CWebSubPage, METH_VARARGS, NULL},
	 { (char *)"CWebSubPage_SetName", _wrap_CWebSubPage_SetName, METH_VARARGS, NULL},
	 { (char *)"CWebSubPage_SetTitle", _wrap_CWebSubPage_SetTitle, METH_VARARGS, NULL},
	 { (char *)"CWebSubPage_AddParam", _wrap_CWebSubPage_AddParam, METH_VARARGS, NULL},
	 { (char *)"CWebSubPage_RequiresAdmin", _wrap_CWebSubPage_RequiresAdmin, METH_VARARGS, NULL},
	 { (char *)"CWebSubPage_GetName", _wrap_CWebSubPage_GetName, METH_VARARGS, NULL},
	 { (char *)"CWebSubPage_GetTitle", _wrap_CWebSubPage_GetTitle, METH_VARARGS, NULL},
	 { (char *)"CWebSubPage_GetParams", _wrap_CWebSubPage_GetParams, METH_VARARGS, NULL},
	 { (char *)"CWebSubPage_swigregister", CWebSubPage_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CWebSessionMap", _wrap_new_CWebSessionMap, METH_VARARGS, NULL},
	 { (char *)"CWebSessionMap_FinishUserSessions", _wrap_CWebSessionMap_FinishUserSessions, METH_VARARGS, NULL},
	 { (char *)"delete_CWebSessionMap", _wrap_delete_CWebSessionMap, METH_VARARGS, NULL},
	 { (char *)"CWebSessionMap_swigregister", CWebSessionMap_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CWebSock", _wrap_new_CWebSock, METH_VARARGS, NULL},
	 { (char *)"delete_CWebSock", _wrap_delete_CWebSock, METH_VARARGS, NULL},
	 { (char *)"CWebSock_ForceLogin", _wrap_CWebSock_ForceLogin, METH_VARARGS, NULL},
	 { (char *)"CWebSock_OnLogin", _wrap_CWebSock_OnLogin, METH_VARARGS, NULL},
	 { (char *)"CWebSock_OnPageRequest", _wrap_CWebSock_OnPageRequest, METH_VARARGS, NULL},
	 { (char *)"CWebSock_PrintTemplate", _wrap_CWebSock_PrintTemplate, METH_VARARGS, NULL},
	 { (char *)"CWebSock_PrintStaticFile", _wrap_CWebSock_PrintStaticFile, METH_VARARGS, NULL},
	 { (char *)"CWebSock_FindTmpl", _wrap_CWebSock_FindTmpl, METH_VARARGS, NULL},
	 { (char *)"CWebSock_GetSession", _wrap_CWebSock_GetSession, METH_VARARGS, NULL},
	 { (char *)"CWebSock_GetSockObj", _wrap_CWebSock_GetSockObj, METH_VARARGS, NULL},
	 { (char *)"CWebSock_GetSkinPath", _wrap_CWebSock_GetSkinPath, METH_VARARGS, NULL},
	 { (char *)"CWebSock_GetModule", _wrap_CWebSock_GetModule, METH_VARARGS, NULL},
	 { (char *)"CWebSock_GetAvailSkins", _wrap_CWebSock_GetAvailSkins, METH_VARARGS, NULL},
	 { (char *)"CWebSock_GetSkinName", _wrap_CWebSock_GetSkinName, METH_VARARGS, NULL},
	 { (char *)"CWebSock_GetRequestCookie", _wrap_CWebSock_GetRequestCookie, METH_VARARGS, NULL},
	 { (char *)"CWebSock_SendCookie", _wrap_CWebSock_SendCookie, METH_VARARGS, NULL},
	 { (char *)"CWebSock_FinishUserSessions", _wrap_CWebSock_FinishUserSessions, METH_VARARGS, NULL},
	 { (char *)"CWebSock_swigregister", CWebSock_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CZNC", _wrap_new_CZNC, METH_VARARGS, NULL},
	 { (char *)"delete_CZNC", _wrap_delete_CZNC, METH_VARARGS, NULL},
	 { (char *)"CZNC_DeleteUsers", _wrap_CZNC_DeleteUsers, METH_VARARGS, NULL},
	 { (char *)"CZNC_Loop", _wrap_CZNC_Loop, METH_VARARGS, NULL},
	 { (char *)"CZNC_WritePidFile", _wrap_CZNC_WritePidFile, METH_VARARGS, NULL},
	 { (char *)"CZNC_DeletePidFile", _wrap_CZNC_DeletePidFile, METH_VARARGS, NULL},
	 { (char *)"CZNC_WaitForChildLock", _wrap_CZNC_WaitForChildLock, METH_VARARGS, NULL},
	 { (char *)"CZNC_IsHostAllowed", _wrap_CZNC_IsHostAllowed, METH_VARARGS, NULL},
	 { (char *)"CZNC_AllowConnectionFrom", _wrap_CZNC_AllowConnectionFrom, METH_VARARGS, NULL},
	 { (char *)"CZNC_InitDirs", _wrap_CZNC_InitDirs, METH_VARARGS, NULL},
	 { (char *)"CZNC_OnBoot", _wrap_CZNC_OnBoot, METH_VARARGS, NULL},
	 { (char *)"CZNC_ExpandConfigPath", _wrap_CZNC_ExpandConfigPath, METH_VARARGS, NULL},
	 { (char *)"CZNC_WriteNewConfig", _wrap_CZNC_WriteNewConfig, METH_VARARGS, NULL},
	 { (char *)"CZNC_WriteConfig", _wrap_CZNC_WriteConfig, METH_VARARGS, NULL},
	 { (char *)"CZNC_ParseConfig", _wrap_CZNC_ParseConfig, METH_VARARGS, NULL},
	 { (char *)"CZNC_RehashConfig", _wrap_CZNC_RehashConfig, METH_VARARGS, NULL},
	 { (char *)"CZNC_BackupConfigOnce", _wrap_CZNC_BackupConfigOnce, METH_VARARGS, NULL},
	 { (char *)"CZNC_GetVersion", _wrap_CZNC_GetVersion, METH_VARARGS, NULL},
	 { (char *)"CZNC_GetTag", _wrap_CZNC_GetTag, METH_VARARGS, NULL},
	 { (char *)"CZNC_GetCompileOptionsString", _wrap_CZNC_GetCompileOptionsString, METH_VARARGS, NULL},
	 { (char *)"CZNC_GetUptime", _wrap_CZNC_GetUptime, METH_VARARGS, NULL},
	 { (char *)"CZNC_ClearBindHosts", _wrap_CZNC_ClearBindHosts, METH_VARARGS, NULL},
	 { (char *)"CZNC_AddBindHost", _wrap_CZNC_AddBindHost, METH_VARARGS, NULL},
	 { (char *)"CZNC_RemBindHost", _wrap_CZNC_RemBindHost, METH_VARARGS, NULL},
	 { (char *)"CZNC_Broadcast", _wrap_CZNC_Broadcast, METH_VARARGS, NULL},
	 { (char *)"CZNC_AddBytesRead", _wrap_CZNC_AddBytesRead, METH_VARARGS, NULL},
	 { (char *)"CZNC_AddBytesWritten", _wrap_CZNC_AddBytesWritten, METH_VARARGS, NULL},
	 { (char *)"CZNC_BytesRead", _wrap_CZNC_BytesRead, METH_VARARGS, NULL},
	 { (char *)"CZNC_BytesWritten", _wrap_CZNC_BytesWritten, METH_VARARGS, NULL},
	 { (char *)"CZNC_GetTrafficStats", _wrap_CZNC_GetTrafficStats, METH_VARARGS, NULL},
	 { (char *)"CZNC_AuthUser", _wrap_CZNC_AuthUser, METH_VARARGS, NULL},
	 { (char *)"CZNC_SetConfigState", _wrap_CZNC_SetConfigState, METH_VARARGS, NULL},
	 { (char *)"CZNC_SetSkinName", _wrap_CZNC_SetSkinName, METH_VARARGS, NULL},
	 { (char *)"CZNC_SetStatusPrefix", _wrap_CZNC_SetStatusPrefix, METH_VARARGS, NULL},
	 { (char *)"CZNC_SetMaxBufferSize", _wrap_CZNC_SetMaxBufferSize, METH_VARARGS, NULL},
	 { (char *)"CZNC_SetAnonIPLimit", _wrap_CZNC_SetAnonIPLimit, METH_VARARGS, NULL},
	 { (char *)"CZNC_SetServerThrottle", _wrap_CZNC_SetServerThrottle, METH_VARARGS, NULL},
	 { (char *)"CZNC_SetProtectWebSessions", _wrap_CZNC_SetProtectWebSessions, METH_VARARGS, NULL},
	 { (char *)"CZNC_SetConnectDelay", _wrap_CZNC_SetConnectDelay, METH_VARARGS, NULL},
	 { (char *)"CZNC_GetConfigState", _wrap_CZNC_GetConfigState, METH_VARARGS, NULL},
	 { (char *)"CZNC_GetManager", _wrap_CZNC_GetManager, METH_VARARGS, NULL},
	 { (char *)"CZNC_GetModules", _wrap_CZNC_GetModules, METH_VARARGS, NULL},
	 { (char *)"CZNC_FilterUncommonModules", _wrap_CZNC_FilterUncommonModules, METH_VARARGS, NULL},
	 { (char *)"CZNC_GetSkinName", _wrap_CZNC_GetSkinName, METH_VARARGS, NULL},
	 { (char *)"CZNC_GetStatusPrefix", _wrap_CZNC_GetStatusPrefix, METH_VARARGS, NULL},
	 { (char *)"CZNC_GetCurPath", _wrap_CZNC_GetCurPath, METH_VARARGS, NULL},
	 { (char *)"CZNC_GetHomePath", _wrap_CZNC_GetHomePath, METH_VARARGS, NULL},
	 { (char *)"CZNC_GetZNCPath", _wrap_CZNC_GetZNCPath, METH_VARARGS, NULL},
	 { (char *)"CZNC_GetConfPath", _wrap_CZNC_GetConfPath, METH_VARARGS, NULL},
	 { (char *)"CZNC_GetUserPath", _wrap_CZNC_GetUserPath, METH_VARARGS, NULL},
	 { (char *)"CZNC_GetModPath", _wrap_CZNC_GetModPath, METH_VARARGS, NULL},
	 { (char *)"CZNC_GetPemLocation", _wrap_CZNC_GetPemLocation, METH_VARARGS, NULL},
	 { (char *)"CZNC_GetConfigFile", _wrap_CZNC_GetConfigFile, METH_VARARGS, NULL},
	 { (char *)"CZNC_WritePemFile", _wrap_CZNC_WritePemFile, METH_VARARGS, NULL},
	 { (char *)"CZNC_GetBindHosts", _wrap_CZNC_GetBindHosts, METH_VARARGS, NULL},
	 { (char *)"CZNC_GetListeners", _wrap_CZNC_GetListeners, METH_VARARGS, NULL},
	 { (char *)"CZNC_TimeStarted", _wrap_CZNC_TimeStarted, METH_VARARGS, NULL},
	 { (char *)"CZNC_GetMaxBufferSize", _wrap_CZNC_GetMaxBufferSize, METH_VARARGS, NULL},
	 { (char *)"CZNC_GetAnonIPLimit", _wrap_CZNC_GetAnonIPLimit, METH_VARARGS, NULL},
	 { (char *)"CZNC_GetConnectDelay", _wrap_CZNC_GetConnectDelay, METH_VARARGS, NULL},
	 { (char *)"CZNC_GetProtectWebSessions", _wrap_CZNC_GetProtectWebSessions, METH_VARARGS, NULL},
	 { (char *)"CZNC_Get", _wrap_CZNC_Get, METH_VARARGS, NULL},
	 { (char *)"CZNC_FindUser", _wrap_CZNC_FindUser, METH_VARARGS, NULL},
	 { (char *)"CZNC_FindModule", _wrap_CZNC_FindModule, METH_VARARGS, NULL},
	 { (char *)"CZNC_UpdateModule", _wrap_CZNC_UpdateModule, METH_VARARGS, NULL},
	 { (char *)"CZNC_DeleteUser", _wrap_CZNC_DeleteUser, METH_VARARGS, NULL},
	 { (char *)"CZNC_AddUser", _wrap_CZNC_AddUser, METH_VARARGS, NULL},
	 { (char *)"CZNC_GetUserMap", _wrap_CZNC_GetUserMap, METH_VARARGS, NULL},
	 { (char *)"CZNC_FindListener", _wrap_CZNC_FindListener, METH_VARARGS, NULL},
	 { (char *)"CZNC_AddListener", _wrap_CZNC_AddListener, METH_VARARGS, NULL},
	 { (char *)"CZNC_DelListener", _wrap_CZNC_DelListener, METH_VARARGS, NULL},
	 { (char *)"CZNC_SetMotd", _wrap_CZNC_SetMotd, METH_VARARGS, NULL},
	 { (char *)"CZNC_AddMotd", _wrap_CZNC_AddMotd, METH_VARARGS, NULL},
	 { (char *)"CZNC_ClearMotd", _wrap_CZNC_ClearMotd, METH_VARARGS, NULL},
	 { (char *)"CZNC_GetMotd", _wrap_CZNC_GetMotd, METH_VARARGS, NULL},
	 { (char *)"CZNC_AddServerThrottle", _wrap_CZNC_AddServerThrottle, METH_VARARGS, NULL},
	 { (char *)"CZNC_GetServerThrottle", _wrap_CZNC_GetServerThrottle, METH_VARARGS, NULL},
	 { (char *)"CZNC_AddNetworkToQueue", _wrap_CZNC_AddNetworkToQueue, METH_VARARGS, NULL},
	 { (char *)"CZNC_GetConnectionQueue", _wrap_CZNC_GetConnectionQueue, METH_VARARGS, NULL},
	 { (char *)"CZNC_EnableConnectQueue", _wrap_CZNC_EnableConnectQueue, METH_VARARGS, NULL},
	 { (char *)"CZNC_DisableConnectQueue", _wrap_CZNC_DisableConnectQueue, METH_VARARGS, NULL},
	 { (char *)"CZNC_PauseConnectQueue", _wrap_CZNC_PauseConnectQueue, METH_VARARGS, NULL},
	 { (char *)"CZNC_ResumeConnectQueue", _wrap_CZNC_ResumeConnectQueue, METH_VARARGS, NULL},
	 { (char *)"CZNC_LeakConnectQueueTimer", _wrap_CZNC_LeakConnectQueueTimer, METH_VARARGS, NULL},
	 { (char *)"CZNC_DumpConfig", _wrap_CZNC_DumpConfig, METH_VARARGS, NULL},
	 { (char *)"CZNC_swigregister", CZNC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CServer", _wrap_new_CServer, METH_VARARGS, NULL},
	 { (char *)"delete_CServer", _wrap_delete_CServer, METH_VARARGS, NULL},
	 { (char *)"CServer_GetName", _wrap_CServer_GetName, METH_VARARGS, NULL},
	 { (char *)"CServer_GetPort", _wrap_CServer_GetPort, METH_VARARGS, NULL},
	 { (char *)"CServer_GetPass", _wrap_CServer_GetPass, METH_VARARGS, NULL},
	 { (char *)"CServer_IsSSL", _wrap_CServer_IsSSL, METH_VARARGS, NULL},
	 { (char *)"CServer_GetString", _wrap_CServer_GetString, METH_VARARGS, NULL},
	 { (char *)"CServer_IsValidHostName", _wrap_CServer_IsValidHostName, METH_VARARGS, NULL},
	 { (char *)"CServer_swigregister", CServer_swigregister, METH_VARARGS, NULL},
	 { (char *)"CDebug_SetStdoutIsTTY", _wrap_CDebug_SetStdoutIsTTY, METH_VARARGS, NULL},
	 { (char *)"CDebug_StdoutIsTTY", _wrap_CDebug_StdoutIsTTY, METH_VARARGS, NULL},
	 { (char *)"CDebug_SetDebug", _wrap_CDebug_SetDebug, METH_VARARGS, NULL},
	 { (char *)"CDebug_Debug", _wrap_CDebug_Debug, METH_VARARGS, NULL},
	 { (char *)"CDebug_GetTimestamp", _wrap_CDebug_GetTimestamp, METH_VARARGS, NULL},
	 { (char *)"new_CDebug", _wrap_new_CDebug, METH_VARARGS, NULL},
	 { (char *)"delete_CDebug", _wrap_delete_CDebug, METH_VARARGS, NULL},
	 { (char *)"CDebug_swigregister", CDebug_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CExecSock", _wrap_new_CExecSock, METH_VARARGS, NULL},
	 { (char *)"CExecSock_Execute", _wrap_CExecSock_Execute, METH_VARARGS, NULL},
	 { (char *)"CExecSock_Kill", _wrap_CExecSock_Kill, METH_VARARGS, NULL},
	 { (char *)"delete_CExecSock", _wrap_delete_CExecSock, METH_VARARGS, NULL},
	 { (char *)"CExecSock_popen2", _wrap_CExecSock_popen2, METH_VARARGS, NULL},
	 { (char *)"CExecSock_close2", _wrap_CExecSock_close2, METH_VARARGS, NULL},
	 { (char *)"CExecSock_swigregister", CExecSock_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CBufLine", _wrap_new_CBufLine, METH_VARARGS, NULL},
	 { (char *)"delete_CBufLine", _wrap_delete_CBufLine, METH_VARARGS, NULL},
	 { (char *)"CBufLine_GetLine", _wrap_CBufLine_GetLine, METH_VARARGS, NULL},
	 { (char *)"CBufLine_UpdateTime", _wrap_CBufLine_UpdateTime, METH_VARARGS, NULL},
	 { (char *)"CBufLine_SetFormat", _wrap_CBufLine_SetFormat, METH_VARARGS, NULL},
	 { (char *)"CBufLine_SetText", _wrap_CBufLine_SetText, METH_VARARGS, NULL},
	 { (char *)"CBufLine_SetTime", _wrap_CBufLine_SetTime, METH_VARARGS, NULL},
	 { (char *)"CBufLine_GetFormat", _wrap_CBufLine_GetFormat, METH_VARARGS, NULL},
	 { (char *)"CBufLine_GetText", _wrap_CBufLine_GetText, METH_VARARGS, NULL},
	 { (char *)"CBufLine_GetTime", _wrap_CBufLine_GetTime, METH_VARARGS, NULL},
	 { (char *)"CBufLine_swigregister", CBufLine_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CBuffer", _wrap_new_CBuffer, METH_VARARGS, NULL},
	 { (char *)"delete_CBuffer", _wrap_delete_CBuffer, METH_VARARGS, NULL},
	 { (char *)"CBuffer_AddLine", _wrap_CBuffer_AddLine, METH_VARARGS, NULL},
	 { (char *)"CBuffer_UpdateLine", _wrap_CBuffer_UpdateLine, METH_VARARGS, NULL},
	 { (char *)"CBuffer_UpdateExactLine", _wrap_CBuffer_UpdateExactLine, METH_VARARGS, NULL},
	 { (char *)"CBuffer_GetBufLine", _wrap_CBuffer_GetBufLine, METH_VARARGS, NULL},
	 { (char *)"CBuffer_GetLine", _wrap_CBuffer_GetLine, METH_VARARGS, NULL},
	 { (char *)"CBuffer_Size", _wrap_CBuffer_Size, METH_VARARGS, NULL},
	 { (char *)"CBuffer_IsEmpty", _wrap_CBuffer_IsEmpty, METH_VARARGS, NULL},
	 { (char *)"CBuffer_Clear", _wrap_CBuffer_Clear, METH_VARARGS, NULL},
	 { (char *)"CBuffer_SetLineCount", _wrap_CBuffer_SetLineCount, METH_VARARGS, NULL},
	 { (char *)"CBuffer_GetLineCount", _wrap_CBuffer_GetLineCount, METH_VARARGS, NULL},
	 { (char *)"CBuffer_swigregister", CBuffer_swigregister, METH_VARARGS, NULL},
	 { (char *)"String_s_set", _wrap_String_s_set, METH_VARARGS, NULL},
	 { (char *)"String_s_get", _wrap_String_s_get, METH_VARARGS, NULL},
	 { (char *)"String___str__", _wrap_String___str__, METH_VARARGS, NULL},
	 { (char *)"new_String", _wrap_new_String, METH_VARARGS, NULL},
	 { (char *)"delete_String", _wrap_delete_String, METH_VARARGS, NULL},
	 { (char *)"String_swigregister", String_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CPyModule", _wrap_new_CPyModule, METH_VARARGS, NULL},
	 { (char *)"CPyModule_GetPyObj", _wrap_CPyModule_GetPyObj, METH_VARARGS, NULL},
	 { (char *)"CPyModule_GetNewPyObj", _wrap_CPyModule_GetNewPyObj, METH_VARARGS, NULL},
	 { (char *)"CPyModule_DeletePyModule", _wrap_CPyModule_DeletePyModule, METH_VARARGS, NULL},
	 { (char *)"CPyModule_GetPyExceptionStr", _wrap_CPyModule_GetPyExceptionStr, METH_VARARGS, NULL},
	 { (char *)"CPyModule_GetModPython", _wrap_CPyModule_GetModPython, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnBoot", _wrap_CPyModule_OnBoot, METH_VARARGS, NULL},
	 { (char *)"CPyModule_WebRequiresLogin", _wrap_CPyModule_WebRequiresLogin, METH_VARARGS, NULL},
	 { (char *)"CPyModule_WebRequiresAdmin", _wrap_CPyModule_WebRequiresAdmin, METH_VARARGS, NULL},
	 { (char *)"CPyModule_GetWebMenuTitle", _wrap_CPyModule_GetWebMenuTitle, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnWebPreRequest", _wrap_CPyModule_OnWebPreRequest, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnWebRequest", _wrap_CPyModule_OnWebRequest, METH_VARARGS, NULL},
	 { (char *)"CPyModule_GetSubPages", _wrap_CPyModule_GetSubPages, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnPreRehash", _wrap_CPyModule_OnPreRehash, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnPostRehash", _wrap_CPyModule_OnPostRehash, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnIRCDisconnected", _wrap_CPyModule_OnIRCDisconnected, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnIRCConnected", _wrap_CPyModule_OnIRCConnected, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnIRCConnecting", _wrap_CPyModule_OnIRCConnecting, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnIRCConnectionError", _wrap_CPyModule_OnIRCConnectionError, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnIRCRegistration", _wrap_CPyModule_OnIRCRegistration, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnBroadcast", _wrap_CPyModule_OnBroadcast, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnChanPermission", _wrap_CPyModule_OnChanPermission, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnOp", _wrap_CPyModule_OnOp, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnDeop", _wrap_CPyModule_OnDeop, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnVoice", _wrap_CPyModule_OnVoice, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnDevoice", _wrap_CPyModule_OnDevoice, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnMode", _wrap_CPyModule_OnMode, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnRawMode", _wrap_CPyModule_OnRawMode, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnRaw", _wrap_CPyModule_OnRaw, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnStatusCommand", _wrap_CPyModule_OnStatusCommand, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnModCommand", _wrap_CPyModule_OnModCommand, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnModNotice", _wrap_CPyModule_OnModNotice, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnModCTCP", _wrap_CPyModule_OnModCTCP, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnQuit", _wrap_CPyModule_OnQuit, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnNick", _wrap_CPyModule_OnNick, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnKick", _wrap_CPyModule_OnKick, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnJoin", _wrap_CPyModule_OnJoin, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnPart", _wrap_CPyModule_OnPart, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnChanBufferStarting", _wrap_CPyModule_OnChanBufferStarting, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnChanBufferEnding", _wrap_CPyModule_OnChanBufferEnding, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnChanBufferPlayLine", _wrap_CPyModule_OnChanBufferPlayLine, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnPrivBufferPlayLine", _wrap_CPyModule_OnPrivBufferPlayLine, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnClientLogin", _wrap_CPyModule_OnClientLogin, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnClientDisconnect", _wrap_CPyModule_OnClientDisconnect, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnUserRaw", _wrap_CPyModule_OnUserRaw, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnUserCTCPReply", _wrap_CPyModule_OnUserCTCPReply, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnUserCTCP", _wrap_CPyModule_OnUserCTCP, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnUserAction", _wrap_CPyModule_OnUserAction, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnUserMsg", _wrap_CPyModule_OnUserMsg, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnUserNotice", _wrap_CPyModule_OnUserNotice, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnUserJoin", _wrap_CPyModule_OnUserJoin, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnUserPart", _wrap_CPyModule_OnUserPart, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnUserTopic", _wrap_CPyModule_OnUserTopic, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnUserTopicRequest", _wrap_CPyModule_OnUserTopicRequest, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnCTCPReply", _wrap_CPyModule_OnCTCPReply, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnPrivCTCP", _wrap_CPyModule_OnPrivCTCP, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnChanCTCP", _wrap_CPyModule_OnChanCTCP, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnPrivAction", _wrap_CPyModule_OnPrivAction, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnChanAction", _wrap_CPyModule_OnChanAction, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnPrivMsg", _wrap_CPyModule_OnPrivMsg, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnChanMsg", _wrap_CPyModule_OnChanMsg, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnPrivNotice", _wrap_CPyModule_OnPrivNotice, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnChanNotice", _wrap_CPyModule_OnChanNotice, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnTopic", _wrap_CPyModule_OnTopic, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnServerCapAvailable", _wrap_CPyModule_OnServerCapAvailable, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnServerCapResult", _wrap_CPyModule_OnServerCapResult, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnTimerAutoJoin", _wrap_CPyModule_OnTimerAutoJoin, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnEmbeddedWebRequest", _wrap_CPyModule_OnEmbeddedWebRequest, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnAddUser", _wrap_CPyModule_OnAddUser, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnDeleteUser", _wrap_CPyModule_OnDeleteUser, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnClientConnect", _wrap_CPyModule_OnClientConnect, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnFailedLogin", _wrap_CPyModule_OnFailedLogin, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnUnknownUserRaw", _wrap_CPyModule_OnUnknownUserRaw, METH_VARARGS, NULL},
	 { (char *)"CPyModule_IsClientCapSupported", _wrap_CPyModule_IsClientCapSupported, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnClientCapRequest", _wrap_CPyModule_OnClientCapRequest, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnModuleLoading", _wrap_CPyModule_OnModuleLoading, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnModuleUnloading", _wrap_CPyModule_OnModuleUnloading, METH_VARARGS, NULL},
	 { (char *)"CPyModule_OnGetModInfo", _wrap_CPyModule_OnGetModInfo, METH_VARARGS, NULL},
	 { (char *)"delete_CPyModule", _wrap_delete_CPyModule, METH_VARARGS, NULL},
	 { (char *)"CPyModule_swigregister", CPyModule_swigregister, METH_VARARGS, NULL},
	 { (char *)"AsPyModule", _wrap_AsPyModule, METH_VARARGS, NULL},
	 { (char *)"CreatePyModule", _wrap_CreatePyModule, METH_VARARGS, NULL},
	 { (char *)"new_CPyTimer", _wrap_new_CPyTimer, METH_VARARGS, NULL},
	 { (char *)"CPyTimer_RunJob", _wrap_CPyTimer_RunJob, METH_VARARGS, NULL},
	 { (char *)"CPyTimer_GetPyObj", _wrap_CPyTimer_GetPyObj, METH_VARARGS, NULL},
	 { (char *)"CPyTimer_GetNewPyObj", _wrap_CPyTimer_GetNewPyObj, METH_VARARGS, NULL},
	 { (char *)"delete_CPyTimer", _wrap_delete_CPyTimer, METH_VARARGS, NULL},
	 { (char *)"CPyTimer_swigregister", CPyTimer_swigregister, METH_VARARGS, NULL},
	 { (char *)"CreatePyTimer", _wrap_CreatePyTimer, METH_VARARGS, NULL},
	 { (char *)"new_CPySocket", _wrap_new_CPySocket, METH_VARARGS, NULL},
	 { (char *)"CPySocket_GetPyObj", _wrap_CPySocket_GetPyObj, METH_VARARGS, NULL},
	 { (char *)"CPySocket_GetNewPyObj", _wrap_CPySocket_GetNewPyObj, METH_VARARGS, NULL},
	 { (char *)"delete_CPySocket", _wrap_delete_CPySocket, METH_VARARGS, NULL},
	 { (char *)"CPySocket_Connected", _wrap_CPySocket_Connected, METH_VARARGS, NULL},
	 { (char *)"CPySocket_Disconnected", _wrap_CPySocket_Disconnected, METH_VARARGS, NULL},
	 { (char *)"CPySocket_Timeout", _wrap_CPySocket_Timeout, METH_VARARGS, NULL},
	 { (char *)"CPySocket_ConnectionRefused", _wrap_CPySocket_ConnectionRefused, METH_VARARGS, NULL},
	 { (char *)"CPySocket_ReadData", _wrap_CPySocket_ReadData, METH_VARARGS, NULL},
	 { (char *)"CPySocket_ReadLine", _wrap_CPySocket_ReadLine, METH_VARARGS, NULL},
	 { (char *)"CPySocket_GetSockObj", _wrap_CPySocket_GetSockObj, METH_VARARGS, NULL},
	 { (char *)"CPySocket_WriteBytes", _wrap_CPySocket_WriteBytes, METH_VARARGS, NULL},
	 { (char *)"CPySocket_swigregister", CPySocket_swigregister, METH_VARARGS, NULL},
	 { (char *)"CreatePySocket", _wrap_CreatePySocket, METH_VARARGS, NULL},
	 { (char *)"HaveIPv6_", _wrap_HaveIPv6_, METH_VARARGS, NULL},
	 { (char *)"HaveSSL_", _wrap_HaveSSL_, METH_VARARGS, NULL},
	 { (char *)"GetSOMAXCONN", _wrap_GetSOMAXCONN, METH_VARARGS, NULL},
	 { (char *)"GetVersionMajor", _wrap_GetVersionMajor, METH_VARARGS, NULL},
	 { (char *)"GetVersionMinor", _wrap_GetVersionMinor, METH_VARARGS, NULL},
	 { (char *)"GetVersion", _wrap_GetVersion, METH_VARARGS, NULL},
	 { (char *)"GetVersionExtra", _wrap_GetVersionExtra, METH_VARARGS, NULL},
	 { (char *)"MCString_iter_x_set", _wrap_MCString_iter_x_set, METH_VARARGS, NULL},
	 { (char *)"MCString_iter_x_get", _wrap_MCString_iter_x_get, METH_VARARGS, NULL},
	 { (char *)"new_MCString_iter", _wrap_new_MCString_iter, METH_VARARGS, NULL},
	 { (char *)"MCString_iter_plusplus", _wrap_MCString_iter_plusplus, METH_VARARGS, NULL},
	 { (char *)"MCString_iter_get", _wrap_MCString_iter_get, METH_VARARGS, NULL},
	 { (char *)"MCString_iter_is_end", _wrap_MCString_iter_is_end, METH_VARARGS, NULL},
	 { (char *)"delete_MCString_iter", _wrap_delete_MCString_iter, METH_VARARGS, NULL},
	 { (char *)"MCString_iter_swigregister", MCString_iter_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CModulesIter", _wrap_new_CModulesIter, METH_VARARGS, NULL},
	 { (char *)"CModulesIter_plusplus", _wrap_CModulesIter_plusplus, METH_VARARGS, NULL},
	 { (char *)"CModulesIter_get", _wrap_CModulesIter_get, METH_VARARGS, NULL},
	 { (char *)"CModulesIter_is_end", _wrap_CModulesIter_is_end, METH_VARARGS, NULL},
	 { (char *)"CModulesIter_m_pModules_set", _wrap_CModulesIter_m_pModules_set, METH_VARARGS, NULL},
	 { (char *)"CModulesIter_m_pModules_get", _wrap_CModulesIter_m_pModules_get, METH_VARARGS, NULL},
	 { (char *)"CModulesIter_m_it_set", _wrap_CModulesIter_m_it_set, METH_VARARGS, NULL},
	 { (char *)"CModulesIter_m_it_get", _wrap_CModulesIter_m_it_get, METH_VARARGS, NULL},
	 { (char *)"delete_CModulesIter", _wrap_delete_CModulesIter, METH_VARARGS, NULL},
	 { (char *)"CModulesIter_swigregister", CModulesIter_swigregister, METH_VARARGS, NULL},
	 { (char *)"CPyRetString_s_set", _wrap_CPyRetString_s_set, METH_VARARGS, NULL},
	 { (char *)"CPyRetString_s_get", _wrap_CPyRetString_s_get, METH_VARARGS, NULL},
	 { (char *)"CPyRetString___str__", _wrap_CPyRetString___str__, METH_VARARGS, NULL},
	 { (char *)"delete_CPyRetString", _wrap_delete_CPyRetString, METH_VARARGS, NULL},
	 { (char *)"CPyRetString_swigregister", CPyRetString_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_StrPair", _wrap_new_StrPair, METH_VARARGS, NULL},
	 { (char *)"StrPair_first_set", _wrap_StrPair_first_set, METH_VARARGS, NULL},
	 { (char *)"StrPair_first_get", _wrap_StrPair_first_get, METH_VARARGS, NULL},
	 { (char *)"StrPair_second_set", _wrap_StrPair_second_set, METH_VARARGS, NULL},
	 { (char *)"StrPair_second_get", _wrap_StrPair_second_get, METH_VARARGS, NULL},
	 { (char *)"delete_StrPair", _wrap_delete_StrPair, METH_VARARGS, NULL},
	 { (char *)"StrPair_swigregister", StrPair_swigregister, METH_VARARGS, NULL},
	 { (char *)"VPair_iterator", _wrap_VPair_iterator, METH_VARARGS, NULL},
	 { (char *)"VPair___nonzero__", _wrap_VPair___nonzero__, METH_VARARGS, NULL},
	 { (char *)"VPair___bool__", _wrap_VPair___bool__, METH_VARARGS, NULL},
	 { (char *)"VPair___len__", _wrap_VPair___len__, METH_VARARGS, NULL},
	 { (char *)"VPair_pop", _wrap_VPair_pop, METH_VARARGS, NULL},
	 { (char *)"VPair___getslice__", _wrap_VPair___getslice__, METH_VARARGS, NULL},
	 { (char *)"VPair___setslice__", _wrap_VPair___setslice__, METH_VARARGS, NULL},
	 { (char *)"VPair___delslice__", _wrap_VPair___delslice__, METH_VARARGS, NULL},
	 { (char *)"VPair___delitem__", _wrap_VPair___delitem__, METH_VARARGS, NULL},
	 { (char *)"VPair___getitem__", _wrap_VPair___getitem__, METH_VARARGS, NULL},
	 { (char *)"VPair___setitem__", _wrap_VPair___setitem__, METH_VARARGS, NULL},
	 { (char *)"VPair_append", _wrap_VPair_append, METH_VARARGS, NULL},
	 { (char *)"VPair_empty", _wrap_VPair_empty, METH_VARARGS, NULL},
	 { (char *)"VPair_size", _wrap_VPair_size, METH_VARARGS, NULL},
	 { (char *)"VPair_clear", _wrap_VPair_clear, METH_VARARGS, NULL},
	 { (char *)"VPair_swap", _wrap_VPair_swap, METH_VARARGS, NULL},
	 { (char *)"VPair_get_allocator", _wrap_VPair_get_allocator, METH_VARARGS, NULL},
	 { (char *)"VPair_begin", _wrap_VPair_begin, METH_VARARGS, NULL},
	 { (char *)"VPair_end", _wrap_VPair_end, METH_VARARGS, NULL},
	 { (char *)"VPair_rbegin", _wrap_VPair_rbegin, METH_VARARGS, NULL},
	 { (char *)"VPair_rend", _wrap_VPair_rend, METH_VARARGS, NULL},
	 { (char *)"VPair_pop_back", _wrap_VPair_pop_back, METH_VARARGS, NULL},
	 { (char *)"VPair_erase", _wrap_VPair_erase, METH_VARARGS, NULL},
	 { (char *)"new_VPair", _wrap_new_VPair, METH_VARARGS, NULL},
	 { (char *)"VPair_push_back", _wrap_VPair_push_back, METH_VARARGS, NULL},
	 { (char *)"VPair_front", _wrap_VPair_front, METH_VARARGS, NULL},
	 { (char *)"VPair_back", _wrap_VPair_back, METH_VARARGS, NULL},
	 { (char *)"VPair_assign", _wrap_VPair_assign, METH_VARARGS, NULL},
	 { (char *)"VPair_resize", _wrap_VPair_resize, METH_VARARGS, NULL},
	 { (char *)"VPair_insert", _wrap_VPair_insert, METH_VARARGS, NULL},
	 { (char *)"VPair_reserve", _wrap_VPair_reserve, METH_VARARGS, NULL},
	 { (char *)"VPair_capacity", _wrap_VPair_capacity, METH_VARARGS, NULL},
	 { (char *)"delete_VPair", _wrap_delete_VPair, METH_VARARGS, NULL},
	 { (char *)"VPair_swigregister", VPair_swigregister, METH_VARARGS, NULL},
	 { (char *)"VWebSubPages_iterator", _wrap_VWebSubPages_iterator, METH_VARARGS, NULL},
	 { (char *)"VWebSubPages___nonzero__", _wrap_VWebSubPages___nonzero__, METH_VARARGS, NULL},
	 { (char *)"VWebSubPages___bool__", _wrap_VWebSubPages___bool__, METH_VARARGS, NULL},
	 { (char *)"VWebSubPages___len__", _wrap_VWebSubPages___len__, METH_VARARGS, NULL},
	 { (char *)"VWebSubPages_pop", _wrap_VWebSubPages_pop, METH_VARARGS, NULL},
	 { (char *)"VWebSubPages___getslice__", _wrap_VWebSubPages___getslice__, METH_VARARGS, NULL},
	 { (char *)"VWebSubPages___setslice__", _wrap_VWebSubPages___setslice__, METH_VARARGS, NULL},
	 { (char *)"VWebSubPages___delslice__", _wrap_VWebSubPages___delslice__, METH_VARARGS, NULL},
	 { (char *)"VWebSubPages___delitem__", _wrap_VWebSubPages___delitem__, METH_VARARGS, NULL},
	 { (char *)"VWebSubPages___getitem__", _wrap_VWebSubPages___getitem__, METH_VARARGS, NULL},
	 { (char *)"VWebSubPages___setitem__", _wrap_VWebSubPages___setitem__, METH_VARARGS, NULL},
	 { (char *)"VWebSubPages_append", _wrap_VWebSubPages_append, METH_VARARGS, NULL},
	 { (char *)"VWebSubPages_empty", _wrap_VWebSubPages_empty, METH_VARARGS, NULL},
	 { (char *)"VWebSubPages_size", _wrap_VWebSubPages_size, METH_VARARGS, NULL},
	 { (char *)"VWebSubPages_clear", _wrap_VWebSubPages_clear, METH_VARARGS, NULL},
	 { (char *)"VWebSubPages_swap", _wrap_VWebSubPages_swap, METH_VARARGS, NULL},
	 { (char *)"VWebSubPages_get_allocator", _wrap_VWebSubPages_get_allocator, METH_VARARGS, NULL},
	 { (char *)"VWebSubPages_begin", _wrap_VWebSubPages_begin, METH_VARARGS, NULL},
	 { (char *)"VWebSubPages_end", _wrap_VWebSubPages_end, METH_VARARGS, NULL},
	 { (char *)"VWebSubPages_rbegin", _wrap_VWebSubPages_rbegin, METH_VARARGS, NULL},
	 { (char *)"VWebSubPages_rend", _wrap_VWebSubPages_rend, METH_VARARGS, NULL},
	 { (char *)"VWebSubPages_pop_back", _wrap_VWebSubPages_pop_back, METH_VARARGS, NULL},
	 { (char *)"VWebSubPages_erase", _wrap_VWebSubPages_erase, METH_VARARGS, NULL},
	 { (char *)"new_VWebSubPages", _wrap_new_VWebSubPages, METH_VARARGS, NULL},
	 { (char *)"VWebSubPages_push_back", _wrap_VWebSubPages_push_back, METH_VARARGS, NULL},
	 { (char *)"VWebSubPages_front", _wrap_VWebSubPages_front, METH_VARARGS, NULL},
	 { (char *)"VWebSubPages_back", _wrap_VWebSubPages_back, METH_VARARGS, NULL},
	 { (char *)"VWebSubPages_assign", _wrap_VWebSubPages_assign, METH_VARARGS, NULL},
	 { (char *)"VWebSubPages_resize", _wrap_VWebSubPages_resize, METH_VARARGS, NULL},
	 { (char *)"VWebSubPages_insert", _wrap_VWebSubPages_insert, METH_VARARGS, NULL},
	 { (char *)"VWebSubPages_reserve", _wrap_VWebSubPages_reserve, METH_VARARGS, NULL},
	 { (char *)"VWebSubPages_capacity", _wrap_VWebSubPages_capacity, METH_VARARGS, NULL},
	 { (char *)"delete_VWebSubPages", _wrap_delete_VWebSubPages, METH_VARARGS, NULL},
	 { (char *)"VWebSubPages_swigregister", VWebSubPages_swigregister, METH_VARARGS, NULL},
	 { (char *)"VPair_Add2Str_", _wrap_VPair_Add2Str_, METH_VARARGS, NULL},
	 { (char *)"CreateWebSubPage_", _wrap_CreateWebSubPage_, METH_VARARGS, NULL},
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_CSSSLConnectionTo_p_CSConnection(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSConnection *)  ((CSSSLConnection *) x));
}
static void *_p_CTemplateTo_p_MCString(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((MCString *)  ((CTemplate *) x));
}
static void *_p_CPyTimerTo_p_CTimer(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CTimer *)  ((CPyTimer *) x));
}
static void *_p_CFPTimerTo_p_CTimer(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CTimer *)  ((CFPTimer *) x));
}
static void *_p_CPyModuleTo_p_CModule(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CModule *)  ((CPyModule *) x));
}
static void *_p_CTimerTo_p_CCron(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CCron *)  ((CTimer *) x));
}
static void *_p_CPyTimerTo_p_CCron(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CCron *) (CTimer *) ((CPyTimer *) x));
}
static void *_p_CFPTimerTo_p_CCron(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CCron *) (CTimer *) ((CFPTimer *) x));
}
static void *_p_CSocketManagerTo_p_std__vectorT_Csock_p_std__allocatorT_Csock_p_t_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::vector< Csock *,std::allocator< Csock * > > *)  ((CSocketManager *) x));
}
static void *_p_CSocketTo_p_CZNCSock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CZNCSock *)  ((CSocket *) x));
}
static void *_p_CClientTo_p_CZNCSock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CZNCSock *)  ((CClient *) x));
}
static void *_p_CIRCSockTo_p_CZNCSock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CZNCSock *)  ((CIRCSock *) x));
}
static void *_p_CPySocketTo_p_CZNCSock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CZNCSock *) (CSocket *) ((CPySocket *) x));
}
static void *_p_CRealListenerTo_p_CZNCSock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CZNCSock *)  ((CRealListener *) x));
}
static void *_p_CExecSockTo_p_CZNCSock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CZNCSock *)  ((CExecSock *) x));
}
static void *_p_CIncomingConnectionTo_p_CZNCSock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CZNCSock *)  ((CIncomingConnection *) x));
}
static void *_p_CHTTPSockTo_p_CZNCSock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CZNCSock *) (CSocket *) ((CHTTPSock *) x));
}
static void *_p_CWebSockTo_p_CZNCSock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CZNCSock *) (CSocket *)(CHTTPSock *) ((CWebSock *) x));
}
static void *_p_CSockManagerTo_p_TSocketManagerT_CZNCSock_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((TSocketManager< CZNCSock > *)  ((CSockManager *) x));
}
static void *_p_CZNCTagHandlerTo_p_CTemplateTagHandler(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CTemplateTagHandler *)  ((CZNCTagHandler *) x));
}
static void *_p_CSocketTo_p_Csock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Csock *) (CZNCSock *) ((CSocket *) x));
}
static void *_p_CClientTo_p_Csock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Csock *) (CZNCSock *) ((CClient *) x));
}
static void *_p_CIRCSockTo_p_Csock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Csock *) (CZNCSock *) ((CIRCSock *) x));
}
static void *_p_CPySocketTo_p_Csock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Csock *) (CZNCSock *)(CSocket *) ((CPySocket *) x));
}
static void *_p_CRealListenerTo_p_Csock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Csock *) (CZNCSock *) ((CRealListener *) x));
}
static void *_p_CExecSockTo_p_Csock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Csock *) (CZNCSock *) ((CExecSock *) x));
}
static void *_p_CZNCSockTo_p_Csock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Csock *)  ((CZNCSock *) x));
}
static void *_p_CIncomingConnectionTo_p_Csock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Csock *) (CZNCSock *) ((CIncomingConnection *) x));
}
static void *_p_CHTTPSockTo_p_Csock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Csock *) (CZNCSock *)(CSocket *) ((CHTTPSock *) x));
}
static void *_p_CWebSockTo_p_Csock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Csock *) (CZNCSock *)(CSocket *)(CHTTPSock *) ((CWebSock *) x));
}
static void *_p_CPySocketTo_p_CSocket(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSocket *)  ((CPySocket *) x));
}
static void *_p_CHTTPSockTo_p_CSocket(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSocket *)  ((CHTTPSock *) x));
}
static void *_p_CWebSockTo_p_CSocket(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSocket *) (CHTTPSock *) ((CWebSock *) x));
}
static void *_p_CWebSockTo_p_CHTTPSock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CHTTPSock *)  ((CWebSock *) x));
}
static void *_p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CPyModuleTo_p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CModule(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CModule *(*)(ModHandle,CUser *,CIRCNetwork *,CString const &,CString const &))  ((CPyModule *(*)(ModHandle,CUser *,CIRCNetwork *,CString const &,CString const &)) x));
}
static void *_p_CClientAuthTo_p_CAuthBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CAuthBase *)  ((CClientAuth *) x));
}
static void *_p_CPySocketTo_p_CSockCommon(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSockCommon *) (Csock *)(CZNCSock *)(CSocket *) ((CPySocket *) x));
}
static void *_p_CClientTo_p_CSockCommon(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSockCommon *) (Csock *)(CZNCSock *) ((CClient *) x));
}
static void *_p_CSocketTo_p_CSockCommon(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSockCommon *) (Csock *)(CZNCSock *) ((CSocket *) x));
}
static void *_p_CIncomingConnectionTo_p_CSockCommon(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSockCommon *) (Csock *)(CZNCSock *) ((CIncomingConnection *) x));
}
static void *_p_CSockManagerTo_p_CSockCommon(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSockCommon *) (CSocketManager *)(TSocketManager< CZNCSock > *) ((CSockManager *) x));
}
static void *_p_CSocketManagerTo_p_CSockCommon(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSockCommon *)  ((CSocketManager *) x));
}
static void *_p_CExecSockTo_p_CSockCommon(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSockCommon *) (Csock *)(CZNCSock *) ((CExecSock *) x));
}
static void *_p_CHTTPSockTo_p_CSockCommon(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSockCommon *) (Csock *)(CZNCSock *)(CSocket *) ((CHTTPSock *) x));
}
static void *_p_CZNCSockTo_p_CSockCommon(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSockCommon *) (Csock *) ((CZNCSock *) x));
}
static void *_p_CWebSockTo_p_CSockCommon(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSockCommon *) (Csock *)(CZNCSock *)(CSocket *)(CHTTPSock *) ((CWebSock *) x));
}
static void *_p_CRealListenerTo_p_CSockCommon(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSockCommon *) (Csock *)(CZNCSock *) ((CRealListener *) x));
}
static void *_p_CIRCSockTo_p_CSockCommon(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSockCommon *) (Csock *)(CZNCSock *) ((CIRCSock *) x));
}
static void *_p_CsockTo_p_CSockCommon(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSockCommon *)  ((Csock *) x));
}
static void *_p_TSocketManagerT_CZNCSock_tTo_p_CSockCommon(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSockCommon *) (CSocketManager *) ((TSocketManager< CZNCSock > *) x));
}
static void *_p_TSocketManagerT_CZNCSock_tTo_p_CSocketManager(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSocketManager *)  ((TSocketManager< CZNCSock > *) x));
}
static void *_p_CSockManagerTo_p_CSocketManager(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSocketManager *) (TSocketManager< CZNCSock > *) ((CSockManager *) x));
}
static swig_type_info _swigt__m_CModule__f_r_q_const__CString__void = {"_m_CModule__f_r_q_const__CString__void", "void (CModule::*)(CString const &)|CModCommand::ModCmdFunc", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CAuthBase = {"_p_CAuthBase", "CAuthBase *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CBufLine = {"_p_CBufLine", "CBufLine *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CBuffer = {"_p_CBuffer", "CBuffer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CChan = {"_p_CChan", "CChan *|std::vector< CChan * >::value_type", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CClient = {"_p_CClient", "CClient *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CClientAuth = {"_p_CClientAuth", "CClientAuth *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CConfig = {"_p_CConfig", "CConfig *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CConfigEntry = {"_p_CConfigEntry", "CConfigEntry *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CConfig__EntryMap__const_iterator = {"_p_CConfig__EntryMap__const_iterator", "CConfig::EntryMap::const_iterator *|CConfig::EntryMapIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CConfig__SubConfigMap__const_iterator = {"_p_CConfig__SubConfigMap__const_iterator", "CConfig::SubConfigMap::const_iterator *|CConfig::SubConfigMapIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CConnectQueueTimer = {"_p_CConnectQueueTimer", "CConnectQueueTimer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CCron = {"_p_CCron", "CCron *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CDebug = {"_p_CDebug", "CDebug *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CDir = {"_p_CDir", "CDir *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CException = {"_p_CException", "CException *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CExecSock = {"_p_CExecSock", "CExecSock *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CFPTimer = {"_p_CFPTimer", "CFPTimer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CFile = {"_p_CFile", "CFile *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CGetAddrInfo = {"_p_CGetAddrInfo", "CGetAddrInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CHTTPSock = {"_p_CHTTPSock", "CHTTPSock *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CIRCNetwork = {"_p_CIRCNetwork", "CIRCNetwork *|std::vector< CIRCNetwork * >::value_type", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CIRCSock = {"_p_CIRCSock", "CIRCSock *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CIncomingConnection = {"_p_CIncomingConnection", "CIncomingConnection *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CListener = {"_p_CListener", "CListener *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CModCommand = {"_p_CModCommand", "CModCommand *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CModInfo = {"_p_CModInfo", "CModInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CModPython = {"_p_CModPython", "CModPython *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CModule = {"_p_CModule", "CModule *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CModules = {"_p_CModules", "CModules *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CModulesIter = {"_p_CModulesIter", "CModulesIter *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CModules__const_iterator = {"_p_CModules__const_iterator", "CModules::const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CNick = {"_p_CNick", "std::map< CString,CNick >::mapped_type *|CNick *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CPyModule = {"_p_CPyModule", "CPyModule *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CPyRetString = {"_p_CPyRetString", "CPyRetString *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CPySocket = {"_p_CPySocket", "CPySocket *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CPyTimer = {"_p_CPyTimer", "CPyTimer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CRealListener = {"_p_CRealListener", "CRealListener *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CSCharBuffer = {"_p_CSCharBuffer", "CSCharBuffer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CSConnection = {"_p_CSConnection", "CSConnection *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CSListener = {"_p_CSListener", "CSListener *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CSMonitorFD = {"_p_CSMonitorFD", "CSMonitorFD *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CSSSLConnection = {"_p_CSSSLConnection", "CSSSLConnection *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CSSockAddr = {"_p_CSSockAddr", "CSSockAddr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CServer = {"_p_CServer", "CServer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CSmartPtrT_CAuthBase_t = {"_p_CSmartPtrT_CAuthBase_t", "CSmartPtr< CAuthBase > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CSmartPtrT_CTemplateOptions_t = {"_p_CSmartPtrT_CTemplateOptions_t", "CSmartPtr< CTemplateOptions > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CSmartPtrT_CTemplateTagHandler_t = {"_p_CSmartPtrT_CTemplateTagHandler_t", "CSmartPtr< CTemplateTagHandler > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CSmartPtrT_CWebSession_t = {"_p_CSmartPtrT_CWebSession_t", "CSmartPtr< CWebSession > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CSmartPtrT_CWebSubPage_t = {"_p_CSmartPtrT_CWebSubPage_t", "CSmartPtr< CWebSubPage > *|std::vector< CSmartPtr< CWebSubPage > >::value_type *|TWebSubPage *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CSockCommon = {"_p_CSockCommon", "CSockCommon *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CSockManager = {"_p_CSockManager", "CSockManager *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CSocket = {"_p_CSocket", "CSocket *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CSocketManager = {"_p_CSocketManager", "CSocketManager *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CString = {"_p_CString", "CString *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CString__EEscape = {"_p_CString__EEscape", "CString::EEscape *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CTable = {"_p_CTable", "CTable *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CTemplate = {"_p_CTemplate", "CTemplate *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CTemplateLoopContext = {"_p_CTemplateLoopContext", "CTemplateLoopContext *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CTemplateOptions = {"_p_CTemplateOptions", "CTemplateOptions *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CTemplateTagHandler = {"_p_CTemplateTagHandler", "CTemplateTagHandler *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CTimer = {"_p_CTimer", "CTimer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CUser = {"_p_CUser", "CUser *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CUtils = {"_p_CUtils", "CUtils *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CWebSession = {"_p_CWebSession", "CWebSession *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CWebSessionMap = {"_p_CWebSessionMap", "CWebSessionMap *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CWebSock = {"_p_CWebSock", "CWebSock *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CWebSubPage = {"_p_CWebSubPage", "CWebSubPage *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CZNC = {"_p_CZNC", "CZNC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CZNCSock = {"_p_CZNCSock", "CZNCSock *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CZNCTagHandler = {"_p_CZNCTagHandler", "CZNCTagHandler *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Csock = {"_p_Csock", "Csock *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_EAcceptType = {"_p_EAcceptType", "EAcceptType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_EChanModeArgs = {"_p_EChanModeArgs", "EChanModeArgs *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_EModException = {"_p_EModException", "EModException *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_EModRet = {"_p_EModRet", "EModRet *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_EModes = {"_p_EModes", "EModes *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_EModuleType = {"_p_EModuleType", "EModuleType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_EType = {"_p_EType", "EType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_EUserPerms = {"_p_EUserPerms", "EUserPerms *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_EntryMap = {"_p_EntryMap", "EntryMap *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_EntryMapIterator = {"_p_EntryMapIterator", "EntryMapIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MCString = {"_p_MCString", "MCString *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MCString__iterator = {"_p_MCString__iterator", "MCString::iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MCString_iter = {"_p_MCString_iter", "MCString_iter *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ModCmdFunc = {"_p_ModCmdFunc", "ModCmdFunc *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ModDirList = {"_p_ModDirList", "ModDirList *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SCString = {"_p_SCString", "SCString *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_String = {"_p_String", "String *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SubConfig = {"_p_SubConfig", "SubConfig *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SubConfigMap = {"_p_SubConfigMap", "SubConfigMap *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SubConfigMapIterator = {"_p_SubConfigMapIterator", "SubConfigMapIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TSocketManagerT_CZNCSock_t = {"_p_TSocketManagerT_CZNCSock_t", "TSocketManager< CZNCSock > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TrafficStatsMap = {"_p_TrafficStatsMap", "TrafficStatsMap *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TrafficStatsPair = {"_p_TrafficStatsPair", "TrafficStatsPair *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_VCString = {"_p_VCString", "VCString *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_allocator_type = {"_p_allocator_type", "allocator_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_bool = {"_p_bool", "bool *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_const_reference = {"_p_const_reference", "const_reference *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_difference_type = {"_p_difference_type", "difference_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_double = {"_p_double", "double *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CModule = {"_p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CModule", "CModule *(*)(ModHandle,CUser *,CIRCNetwork *,CString const &,CString const &)|CModInfo::ModLoader", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CPyModule = {"_p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CPyModule", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_CModule_p_CFPTimer__void = {"_p_f_p_CModule_p_CFPTimer__void", "void (*)(CModule *,CFPTimer *)|FPTimer_t", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_r_std__ostream__r_std__ostream = {"_p_f_r_std__ostream__r_std__ostream", "std::ostream &(*)(std::ostream &)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fd_set = {"_p_fd_set", "fd_set *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_first_type = {"_p_first_type", "first_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gid_t = {"_p_gid_t", "gid_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_in_addr = {"_p_in_addr", "in_addr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "cs_sock_t *|int *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_key_type = {"_p_key_type", "key_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_listT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t = {"_p_listT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t", "list< CIRCNetwork *,std::allocator< CIRCNetwork * > > *|list< CIRCNetwork * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_long = {"_p_long", "long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mapT_CString_CConfigEntry_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CConfigEntry_t_t_t = {"_p_mapT_CString_CConfigEntry_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CConfigEntry_t_t_t", "map< CString,CConfigEntry > *|CConfig::SubConfig *|map< CString,CConfigEntry,std::less< CString >,std::allocator< std::pair< CString const,CConfigEntry > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t = {"_p_mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t", "map< CString,CNick > *|map< CString,CNick,std::less< CString >,std::allocator< std::pair< CString const,CNick > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mapT_CString_CUser_p_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CUser_p_t_t_t = {"_p_mapT_CString_CUser_p_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CUser_p_t_t_t", "map< CString,CUser *,std::less< CString >,std::allocator< std::pair< CString const,CUser * > > > *|map< CString,CUser * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mapT_CString_VCString_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_VCString_t_t_t = {"_p_mapT_CString_VCString_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_VCString_t_t_t", "map< CString,VCString > *|map< CString,VCString,std::less< CString >,std::allocator< std::pair< CString const,VCString > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mapT_char_unsigned_int_std__lessT_char_t_std__allocatorT_std__pairT_char_const_unsigned_int_t_t_t = {"_p_mapT_char_unsigned_int_std__lessT_char_t_std__allocatorT_std__pairT_char_const_unsigned_int_t_t_t", "map< char,unsigned int,std::less< char >,std::allocator< std::pair< char const,unsigned int > > > *|map< char,unsigned int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mapT_unsigned_char_CIRCSock__EChanModeArgs_std__lessT_unsigned_char_t_std__allocatorT_std__pairT_unsigned_char_const_CIRCSock__EChanModeArgs_t_t_t = {"_p_mapT_unsigned_char_CIRCSock__EChanModeArgs_std__lessT_unsigned_char_t_std__allocatorT_std__pairT_unsigned_char_const_CIRCSock__EChanModeArgs_t_t_t", "map< unsigned char,enum CIRCSock::EChanModeArgs,std::less< unsigned char >,std::allocator< std::pair< unsigned char const,enum CIRCSock::EChanModeArgs > > > *|map< unsigned char,CIRCSock::EChanModeArgs > *|map< unsigned char,enum CIRCSock::EChanModeArgs > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mapT_unsigned_char_CString_std__lessT_unsigned_char_t_std__allocatorT_std__pairT_unsigned_char_const_CString_t_t_t = {"_p_mapT_unsigned_char_CString_std__lessT_unsigned_char_t_std__allocatorT_std__pairT_unsigned_char_const_CString_t_t_t", "map< unsigned char,CString > *|map< unsigned char,CString,std::less< unsigned char >,std::allocator< std::pair< unsigned char const,CString > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mapped_type = {"_p_mapped_type", "mapped_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mode_t = {"_p_mode_t", "mode_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ostream = {"_p_ostream", "ostream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_PyObject = {"_p_p_PyObject", "PyObject **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_reference = {"_p_reference", "reference *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_second_type = {"_p_second_type", "second_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_setT_CModInfo_t = {"_p_setT_CModInfo_t", "set< CModInfo > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_setT_CSocket_p_t__const_iterator = {"_p_setT_CSocket_p_t__const_iterator", "set< CSocket * >::const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_setT_CString_t = {"_p_setT_CString_t", "set< CString > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_setT_CTimer_p_t__const_iterator = {"_p_setT_CTimer_p_t__const_iterator", "set< CTimer * >::const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_setT_unsigned_char_t = {"_p_setT_unsigned_char_t", "set< unsigned char > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_size_type = {"_p_size_type", "size_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sockaddr_in = {"_p_sockaddr_in", "sockaddr_in *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sockaddr_storage = {"_p_sockaddr_storage", "sockaddr_storage *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_socklen_t = {"_p_socklen_t", "socklen_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ssize_t = {"_p_ssize_t", "ssize_t *|cs_ssize_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stat = {"_p_stat", "stat *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__allocatorT_CChan_p_t = {"_p_std__allocatorT_CChan_p_t", "std::vector< CChan * >::allocator_type *|std::allocator< CChan * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__allocatorT_CIRCNetwork_p_t = {"_p_std__allocatorT_CIRCNetwork_p_t", "std::vector< CIRCNetwork * >::allocator_type *|std::allocator< CIRCNetwork * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__allocatorT_CSmartPtrT_CWebSubPage_t_t = {"_p_std__allocatorT_CSmartPtrT_CWebSubPage_t_t", "std::allocator< CSmartPtr< CWebSubPage > > *|std::vector< CSmartPtr< CWebSubPage > >::allocator_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__allocatorT_CString_t = {"_p_std__allocatorT_CString_t", "std::list< CString >::allocator_type *|std::allocator< CString > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__allocatorT_std__pairT_CString_CString_t_t = {"_p_std__allocatorT_std__pairT_CString_CString_t_t", "std::allocator< std::pair< CString,CString > > *|std::vector< std::pair< CString,CString > >::allocator_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__allocatorT_std__pairT_CString_const_CNick_t_t = {"_p_std__allocatorT_std__pairT_CString_const_CNick_t_t", "std::map< CString,CNick >::allocator_type *|std::allocator< std::pair< CString const,CNick > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__invalid_argument = {"_p_std__invalid_argument", "std::invalid_argument *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__lessT_CString_t = {"_p_std__lessT_CString_t", "std::less< CString > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__listT_CString_std__allocatorT_CString_t_t = {"_p_std__listT_CString_std__allocatorT_CString_t_t", "std::list< CString,std::allocator< CString > > *|std::list< CString > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__listT__Tp__Alloc_t = {"_p_std__listT__Tp__Alloc_t", "std::list< _Tp,_Alloc > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t = {"_p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t", "std::map< CString,CNick > *|std::map< CString,CNick,std::less< CString >,std::allocator< std::pair< CString const,CNick > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_CString_std__pairT_unsigned_long_long_unsigned_long_long_t_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_std__pairT_unsigned_long_long_unsigned_long_long_t_t_t_t = {"_p_std__mapT_CString_std__pairT_unsigned_long_long_unsigned_long_long_t_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_std__pairT_unsigned_long_long_unsigned_long_long_t_t_t_t", "std::map< CString,std::pair< unsigned long long,unsigned long long >,std::less< CString >,std::allocator< std::pair< CString const,std::pair< unsigned long long,unsigned long long > > > > *|CZNC::TrafficStatsMap *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_int_short_std__lessT_int_t_std__allocatorT_std__pairT_int_const_short_t_t_t = {"_p_std__mapT_int_short_std__lessT_int_t_std__allocatorT_std__pairT_int_const_short_t_t_t", "std::map< int,short,std::less< int >,std::allocator< std::pair< int const,short > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__pairT_CString_CString_t = {"_p_std__pairT_CString_CString_t", "std::pair< CString,CString > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__pairT_unsigned_long_long_unsigned_long_long_t = {"_p_std__pairT_unsigned_long_long_unsigned_long_long_t", "CZNC::TrafficStatsPair *|std::pair< unsigned long long,unsigned long long > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t = {"_p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t", "std::vector< CChan *,std::allocator< CChan * > > *|std::vector< CChan * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_CCron_p_std__allocatorT_CCron_p_t_t = {"_p_std__vectorT_CCron_p_std__allocatorT_CCron_p_t_t", "std::vector< CCron *,std::allocator< CCron * > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t = {"_p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t", "std::vector< CIRCNetwork * > *|std::vector< CIRCNetwork *,std::allocator< CIRCNetwork * > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t = {"_p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t", "std::vector< CSmartPtr< CWebSubPage > > *|std::vector< TWebSubPage > *|std::vector< CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_Csock_p_std__allocatorT_Csock_p_t_t = {"_p_std__vectorT_Csock_p_std__allocatorT_Csock_p_t_t", "std::vector< Csock *,std::allocator< Csock * > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT__Tp__Alloc_t = {"_p_std__vectorT__Tp__Alloc_t", "std::vector< _Tp,_Alloc > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT__Tp_p__Alloc_t = {"_p_std__vectorT__Tp_p__Alloc_t", "std::vector< _Tp *,_Alloc > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t = {"_p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t", "std::vector< std::pair< CString,CString > > *|std::vector< std::pair< CString,CString >,std::allocator< std::pair< CString,CString > > > *|VPair *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_swig__SwigPyIterator = {"_p_swig__SwigPyIterator", "swig::SwigPyIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_time_t = {"_p_time_t", "time_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_timeval = {"_p_timeval", "timeval *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_u_long = {"_p_u_long", "u_long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uid_t = {"_p_uid_t", "uid_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_int = {"_p_unsigned_int", "unsigned int *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_long_long = {"_p_unsigned_long_long", "unsigned long long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_short = {"_p_unsigned_short", "unsigned short *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_value_type = {"_p_value_type", "value_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vectorT_CChan_p_std__allocatorT_CChan_p_t_t = {"_p_vectorT_CChan_p_std__allocatorT_CChan_p_t_t", "vector< CChan *,std::allocator< CChan * > > *|vector< CChan * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vectorT_CClient_p_std__allocatorT_CClient_p_t_t = {"_p_vectorT_CClient_p_std__allocatorT_CClient_p_t_t", "vector< CClient *,std::allocator< CClient * > > *|vector< CClient * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t = {"_p_vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t", "vector< CIRCNetwork * > *|vector< CIRCNetwork *,std::allocator< CIRCNetwork * > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vectorT_CListener_p_std__allocatorT_CListener_p_t_t = {"_p_vectorT_CListener_p_std__allocatorT_CListener_p_t_t", "vector< CListener *,std::allocator< CListener * > > *|vector< CListener * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vectorT_CServer_p_std__allocatorT_CServer_p_t_t = {"_p_vectorT_CServer_p_std__allocatorT_CServer_p_t_t", "vector< CServer *,std::allocator< CServer * > > *|vector< CServer * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vectorT_CSmartPtrT_CTemplateTagHandler_t_std__allocatorT_CSmartPtrT_CTemplateTagHandler_t_t_t = {"_p_vectorT_CSmartPtrT_CTemplateTagHandler_t_std__allocatorT_CSmartPtrT_CTemplateTagHandler_t_t_t", "vector< CSmartPtr< CTemplateTagHandler >,std::allocator< CSmartPtr< CTemplateTagHandler > > > *|vector< CSmartPtr< CTemplateTagHandler > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t = {"_p_vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t", "vector< CSmartPtr< CWebSubPage >,std::allocator< CSmartPtr< CWebSubPage > > > *|VWebSubPages *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vectorT_CTemplate_p_std__allocatorT_CTemplate_p_t_t = {"_p_vectorT_CTemplate_p_std__allocatorT_CTemplate_p_t_t", "vector< CTemplate *,std::allocator< CTemplate * > > *|vector< CTemplate * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_void = {"_p_void", "ModHandle|void *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__m_CModule__f_r_q_const__CString__void,
  &_swigt__p_CAuthBase,
  &_swigt__p_CBufLine,
  &_swigt__p_CBuffer,
  &_swigt__p_CChan,
  &_swigt__p_CClient,
  &_swigt__p_CClientAuth,
  &_swigt__p_CConfig,
  &_swigt__p_CConfigEntry,
  &_swigt__p_CConfig__EntryMap__const_iterator,
  &_swigt__p_CConfig__SubConfigMap__const_iterator,
  &_swigt__p_CConnectQueueTimer,
  &_swigt__p_CCron,
  &_swigt__p_CDebug,
  &_swigt__p_CDir,
  &_swigt__p_CException,
  &_swigt__p_CExecSock,
  &_swigt__p_CFPTimer,
  &_swigt__p_CFile,
  &_swigt__p_CGetAddrInfo,
  &_swigt__p_CHTTPSock,
  &_swigt__p_CIRCNetwork,
  &_swigt__p_CIRCSock,
  &_swigt__p_CIncomingConnection,
  &_swigt__p_CListener,
  &_swigt__p_CModCommand,
  &_swigt__p_CModInfo,
  &_swigt__p_CModPython,
  &_swigt__p_CModule,
  &_swigt__p_CModules,
  &_swigt__p_CModulesIter,
  &_swigt__p_CModules__const_iterator,
  &_swigt__p_CNick,
  &_swigt__p_CPyModule,
  &_swigt__p_CPyRetString,
  &_swigt__p_CPySocket,
  &_swigt__p_CPyTimer,
  &_swigt__p_CRealListener,
  &_swigt__p_CSCharBuffer,
  &_swigt__p_CSConnection,
  &_swigt__p_CSListener,
  &_swigt__p_CSMonitorFD,
  &_swigt__p_CSSSLConnection,
  &_swigt__p_CSSockAddr,
  &_swigt__p_CServer,
  &_swigt__p_CSmartPtrT_CAuthBase_t,
  &_swigt__p_CSmartPtrT_CTemplateOptions_t,
  &_swigt__p_CSmartPtrT_CTemplateTagHandler_t,
  &_swigt__p_CSmartPtrT_CWebSession_t,
  &_swigt__p_CSmartPtrT_CWebSubPage_t,
  &_swigt__p_CSockCommon,
  &_swigt__p_CSockManager,
  &_swigt__p_CSocket,
  &_swigt__p_CSocketManager,
  &_swigt__p_CString,
  &_swigt__p_CString__EEscape,
  &_swigt__p_CTable,
  &_swigt__p_CTemplate,
  &_swigt__p_CTemplateLoopContext,
  &_swigt__p_CTemplateOptions,
  &_swigt__p_CTemplateTagHandler,
  &_swigt__p_CTimer,
  &_swigt__p_CUser,
  &_swigt__p_CUtils,
  &_swigt__p_CWebSession,
  &_swigt__p_CWebSessionMap,
  &_swigt__p_CWebSock,
  &_swigt__p_CWebSubPage,
  &_swigt__p_CZNC,
  &_swigt__p_CZNCSock,
  &_swigt__p_CZNCTagHandler,
  &_swigt__p_Csock,
  &_swigt__p_EAcceptType,
  &_swigt__p_EChanModeArgs,
  &_swigt__p_EModException,
  &_swigt__p_EModRet,
  &_swigt__p_EModes,
  &_swigt__p_EModuleType,
  &_swigt__p_EType,
  &_swigt__p_EUserPerms,
  &_swigt__p_EntryMap,
  &_swigt__p_EntryMapIterator,
  &_swigt__p_MCString,
  &_swigt__p_MCString__iterator,
  &_swigt__p_MCString_iter,
  &_swigt__p_ModCmdFunc,
  &_swigt__p_ModDirList,
  &_swigt__p_SCString,
  &_swigt__p_String,
  &_swigt__p_SubConfig,
  &_swigt__p_SubConfigMap,
  &_swigt__p_SubConfigMapIterator,
  &_swigt__p_TSocketManagerT_CZNCSock_t,
  &_swigt__p_TrafficStatsMap,
  &_swigt__p_TrafficStatsPair,
  &_swigt__p_VCString,
  &_swigt__p_allocator_type,
  &_swigt__p_bool,
  &_swigt__p_char,
  &_swigt__p_const_reference,
  &_swigt__p_difference_type,
  &_swigt__p_double,
  &_swigt__p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CModule,
  &_swigt__p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CPyModule,
  &_swigt__p_f_p_CModule_p_CFPTimer__void,
  &_swigt__p_f_r_std__ostream__r_std__ostream,
  &_swigt__p_fd_set,
  &_swigt__p_first_type,
  &_swigt__p_gid_t,
  &_swigt__p_in_addr,
  &_swigt__p_int,
  &_swigt__p_key_type,
  &_swigt__p_listT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t,
  &_swigt__p_long,
  &_swigt__p_mapT_CString_CConfigEntry_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CConfigEntry_t_t_t,
  &_swigt__p_mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t,
  &_swigt__p_mapT_CString_CUser_p_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CUser_p_t_t_t,
  &_swigt__p_mapT_CString_VCString_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_VCString_t_t_t,
  &_swigt__p_mapT_char_unsigned_int_std__lessT_char_t_std__allocatorT_std__pairT_char_const_unsigned_int_t_t_t,
  &_swigt__p_mapT_unsigned_char_CIRCSock__EChanModeArgs_std__lessT_unsigned_char_t_std__allocatorT_std__pairT_unsigned_char_const_CIRCSock__EChanModeArgs_t_t_t,
  &_swigt__p_mapT_unsigned_char_CString_std__lessT_unsigned_char_t_std__allocatorT_std__pairT_unsigned_char_const_CString_t_t_t,
  &_swigt__p_mapped_type,
  &_swigt__p_mode_t,
  &_swigt__p_ostream,
  &_swigt__p_p_PyObject,
  &_swigt__p_reference,
  &_swigt__p_second_type,
  &_swigt__p_setT_CModInfo_t,
  &_swigt__p_setT_CSocket_p_t__const_iterator,
  &_swigt__p_setT_CString_t,
  &_swigt__p_setT_CTimer_p_t__const_iterator,
  &_swigt__p_setT_unsigned_char_t,
  &_swigt__p_size_type,
  &_swigt__p_sockaddr_in,
  &_swigt__p_sockaddr_storage,
  &_swigt__p_socklen_t,
  &_swigt__p_ssize_t,
  &_swigt__p_stat,
  &_swigt__p_std__allocatorT_CChan_p_t,
  &_swigt__p_std__allocatorT_CIRCNetwork_p_t,
  &_swigt__p_std__allocatorT_CSmartPtrT_CWebSubPage_t_t,
  &_swigt__p_std__allocatorT_CString_t,
  &_swigt__p_std__allocatorT_std__pairT_CString_CString_t_t,
  &_swigt__p_std__allocatorT_std__pairT_CString_const_CNick_t_t,
  &_swigt__p_std__invalid_argument,
  &_swigt__p_std__lessT_CString_t,
  &_swigt__p_std__listT_CString_std__allocatorT_CString_t_t,
  &_swigt__p_std__listT__Tp__Alloc_t,
  &_swigt__p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t,
  &_swigt__p_std__mapT_CString_std__pairT_unsigned_long_long_unsigned_long_long_t_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_std__pairT_unsigned_long_long_unsigned_long_long_t_t_t_t,
  &_swigt__p_std__mapT_int_short_std__lessT_int_t_std__allocatorT_std__pairT_int_const_short_t_t_t,
  &_swigt__p_std__pairT_CString_CString_t,
  &_swigt__p_std__pairT_unsigned_long_long_unsigned_long_long_t,
  &_swigt__p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t,
  &_swigt__p_std__vectorT_CCron_p_std__allocatorT_CCron_p_t_t,
  &_swigt__p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t,
  &_swigt__p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t,
  &_swigt__p_std__vectorT_Csock_p_std__allocatorT_Csock_p_t_t,
  &_swigt__p_std__vectorT__Tp__Alloc_t,
  &_swigt__p_std__vectorT__Tp_p__Alloc_t,
  &_swigt__p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t,
  &_swigt__p_swig__SwigPyIterator,
  &_swigt__p_time_t,
  &_swigt__p_timeval,
  &_swigt__p_u_long,
  &_swigt__p_uid_t,
  &_swigt__p_unsigned_int,
  &_swigt__p_unsigned_long_long,
  &_swigt__p_unsigned_short,
  &_swigt__p_value_type,
  &_swigt__p_vectorT_CChan_p_std__allocatorT_CChan_p_t_t,
  &_swigt__p_vectorT_CClient_p_std__allocatorT_CClient_p_t_t,
  &_swigt__p_vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t,
  &_swigt__p_vectorT_CListener_p_std__allocatorT_CListener_p_t_t,
  &_swigt__p_vectorT_CServer_p_std__allocatorT_CServer_p_t_t,
  &_swigt__p_vectorT_CSmartPtrT_CTemplateTagHandler_t_std__allocatorT_CSmartPtrT_CTemplateTagHandler_t_t_t,
  &_swigt__p_vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t,
  &_swigt__p_vectorT_CTemplate_p_std__allocatorT_CTemplate_p_t_t,
  &_swigt__p_void,
};

static swig_cast_info _swigc__m_CModule__f_r_q_const__CString__void[] = {  {&_swigt__m_CModule__f_r_q_const__CString__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CAuthBase[] = {  {&_swigt__p_CClientAuth, _p_CClientAuthTo_p_CAuthBase, 0, 0},  {&_swigt__p_CAuthBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CBufLine[] = {  {&_swigt__p_CBufLine, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CBuffer[] = {  {&_swigt__p_CBuffer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CChan[] = {  {&_swigt__p_CChan, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CClient[] = {  {&_swigt__p_CClient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CClientAuth[] = {  {&_swigt__p_CClientAuth, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CConfig[] = {  {&_swigt__p_CConfig, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CConfigEntry[] = {  {&_swigt__p_CConfigEntry, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CConfig__EntryMap__const_iterator[] = {  {&_swigt__p_CConfig__EntryMap__const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CConfig__SubConfigMap__const_iterator[] = {  {&_swigt__p_CConfig__SubConfigMap__const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CConnectQueueTimer[] = {  {&_swigt__p_CConnectQueueTimer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CCron[] = {  {&_swigt__p_CTimer, _p_CTimerTo_p_CCron, 0, 0},  {&_swigt__p_CCron, 0, 0, 0},  {&_swigt__p_CPyTimer, _p_CPyTimerTo_p_CCron, 0, 0},  {&_swigt__p_CFPTimer, _p_CFPTimerTo_p_CCron, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CDebug[] = {  {&_swigt__p_CDebug, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CDir[] = {  {&_swigt__p_CDir, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CException[] = {  {&_swigt__p_CException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CExecSock[] = {  {&_swigt__p_CExecSock, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CFPTimer[] = {  {&_swigt__p_CFPTimer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CFile[] = {  {&_swigt__p_CFile, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CGetAddrInfo[] = {  {&_swigt__p_CGetAddrInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CHTTPSock[] = {  {&_swigt__p_CHTTPSock, 0, 0, 0},  {&_swigt__p_CWebSock, _p_CWebSockTo_p_CHTTPSock, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CIRCNetwork[] = {  {&_swigt__p_CIRCNetwork, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CIRCSock[] = {  {&_swigt__p_CIRCSock, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CIncomingConnection[] = {  {&_swigt__p_CIncomingConnection, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CListener[] = {  {&_swigt__p_CListener, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CModCommand[] = {  {&_swigt__p_CModCommand, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CModInfo[] = {  {&_swigt__p_CModInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CModPython[] = {  {&_swigt__p_CModPython, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CModule[] = {  {&_swigt__p_CModule, 0, 0, 0},  {&_swigt__p_CPyModule, _p_CPyModuleTo_p_CModule, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CModules[] = {  {&_swigt__p_CModules, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CModulesIter[] = {  {&_swigt__p_CModulesIter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CModules__const_iterator[] = {  {&_swigt__p_CModules__const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CNick[] = {  {&_swigt__p_CNick, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CPyModule[] = {  {&_swigt__p_CPyModule, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CPyRetString[] = {  {&_swigt__p_CPyRetString, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CPySocket[] = {  {&_swigt__p_CPySocket, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CPyTimer[] = {  {&_swigt__p_CPyTimer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CRealListener[] = {  {&_swigt__p_CRealListener, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CSCharBuffer[] = {  {&_swigt__p_CSCharBuffer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CSConnection[] = {  {&_swigt__p_CSConnection, 0, 0, 0},  {&_swigt__p_CSSSLConnection, _p_CSSSLConnectionTo_p_CSConnection, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CSListener[] = {  {&_swigt__p_CSListener, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CSMonitorFD[] = {  {&_swigt__p_CSMonitorFD, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CSSSLConnection[] = {  {&_swigt__p_CSSSLConnection, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CSSockAddr[] = {  {&_swigt__p_CSSockAddr, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CServer[] = {  {&_swigt__p_CServer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CSmartPtrT_CAuthBase_t[] = {  {&_swigt__p_CSmartPtrT_CAuthBase_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CSmartPtrT_CTemplateOptions_t[] = {  {&_swigt__p_CSmartPtrT_CTemplateOptions_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CSmartPtrT_CTemplateTagHandler_t[] = {  {&_swigt__p_CSmartPtrT_CTemplateTagHandler_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CSmartPtrT_CWebSession_t[] = {  {&_swigt__p_CSmartPtrT_CWebSession_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CSmartPtrT_CWebSubPage_t[] = {  {&_swigt__p_CSmartPtrT_CWebSubPage_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CSockCommon[] = {  {&_swigt__p_CClient, _p_CClientTo_p_CSockCommon, 0, 0},  {&_swigt__p_CPySocket, _p_CPySocketTo_p_CSockCommon, 0, 0},  {&_swigt__p_CSocket, _p_CSocketTo_p_CSockCommon, 0, 0},  {&_swigt__p_CIncomingConnection, _p_CIncomingConnectionTo_p_CSockCommon, 0, 0},  {&_swigt__p_CSockManager, _p_CSockManagerTo_p_CSockCommon, 0, 0},  {&_swigt__p_CSocketManager, _p_CSocketManagerTo_p_CSockCommon, 0, 0},  {&_swigt__p_CExecSock, _p_CExecSockTo_p_CSockCommon, 0, 0},  {&_swigt__p_CHTTPSock, _p_CHTTPSockTo_p_CSockCommon, 0, 0},  {&_swigt__p_CSockCommon, 0, 0, 0},  {&_swigt__p_Csock, _p_CsockTo_p_CSockCommon, 0, 0},  {&_swigt__p_CZNCSock, _p_CZNCSockTo_p_CSockCommon, 0, 0},  {&_swigt__p_CWebSock, _p_CWebSockTo_p_CSockCommon, 0, 0},  {&_swigt__p_CRealListener, _p_CRealListenerTo_p_CSockCommon, 0, 0},  {&_swigt__p_CIRCSock, _p_CIRCSockTo_p_CSockCommon, 0, 0},  {&_swigt__p_TSocketManagerT_CZNCSock_t, _p_TSocketManagerT_CZNCSock_tTo_p_CSockCommon, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CSockManager[] = {  {&_swigt__p_CSockManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CSocket[] = {  {&_swigt__p_CSocket, 0, 0, 0},  {&_swigt__p_CPySocket, _p_CPySocketTo_p_CSocket, 0, 0},  {&_swigt__p_CHTTPSock, _p_CHTTPSockTo_p_CSocket, 0, 0},  {&_swigt__p_CWebSock, _p_CWebSockTo_p_CSocket, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CSocketManager[] = {  {&_swigt__p_CSocketManager, 0, 0, 0},  {&_swigt__p_CSockManager, _p_CSockManagerTo_p_CSocketManager, 0, 0},  {&_swigt__p_TSocketManagerT_CZNCSock_t, _p_TSocketManagerT_CZNCSock_tTo_p_CSocketManager, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CString[] = {  {&_swigt__p_CString, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CString__EEscape[] = {  {&_swigt__p_CString__EEscape, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CTable[] = {  {&_swigt__p_CTable, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CTemplate[] = {  {&_swigt__p_CTemplate, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CTemplateLoopContext[] = {  {&_swigt__p_CTemplateLoopContext, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CTemplateOptions[] = {  {&_swigt__p_CTemplateOptions, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CTemplateTagHandler[] = {  {&_swigt__p_CTemplateTagHandler, 0, 0, 0},  {&_swigt__p_CZNCTagHandler, _p_CZNCTagHandlerTo_p_CTemplateTagHandler, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CTimer[] = {  {&_swigt__p_CTimer, 0, 0, 0},  {&_swigt__p_CPyTimer, _p_CPyTimerTo_p_CTimer, 0, 0},  {&_swigt__p_CFPTimer, _p_CFPTimerTo_p_CTimer, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CUser[] = {  {&_swigt__p_CUser, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CUtils[] = {  {&_swigt__p_CUtils, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CWebSession[] = {  {&_swigt__p_CWebSession, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CWebSessionMap[] = {  {&_swigt__p_CWebSessionMap, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CWebSock[] = {  {&_swigt__p_CWebSock, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CWebSubPage[] = {  {&_swigt__p_CWebSubPage, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CZNC[] = {  {&_swigt__p_CZNC, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CZNCSock[] = {  {&_swigt__p_CSocket, _p_CSocketTo_p_CZNCSock, 0, 0},  {&_swigt__p_CPySocket, _p_CPySocketTo_p_CZNCSock, 0, 0},  {&_swigt__p_CClient, _p_CClientTo_p_CZNCSock, 0, 0},  {&_swigt__p_CIRCSock, _p_CIRCSockTo_p_CZNCSock, 0, 0},  {&_swigt__p_CRealListener, _p_CRealListenerTo_p_CZNCSock, 0, 0},  {&_swigt__p_CExecSock, _p_CExecSockTo_p_CZNCSock, 0, 0},  {&_swigt__p_CZNCSock, 0, 0, 0},  {&_swigt__p_CHTTPSock, _p_CHTTPSockTo_p_CZNCSock, 0, 0},  {&_swigt__p_CWebSock, _p_CWebSockTo_p_CZNCSock, 0, 0},  {&_swigt__p_CIncomingConnection, _p_CIncomingConnectionTo_p_CZNCSock, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CZNCTagHandler[] = {  {&_swigt__p_CZNCTagHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Csock[] = {  {&_swigt__p_CSocket, _p_CSocketTo_p_Csock, 0, 0},  {&_swigt__p_CPySocket, _p_CPySocketTo_p_Csock, 0, 0},  {&_swigt__p_CClient, _p_CClientTo_p_Csock, 0, 0},  {&_swigt__p_CIRCSock, _p_CIRCSockTo_p_Csock, 0, 0},  {&_swigt__p_Csock, 0, 0, 0},  {&_swigt__p_CRealListener, _p_CRealListenerTo_p_Csock, 0, 0},  {&_swigt__p_CExecSock, _p_CExecSockTo_p_Csock, 0, 0},  {&_swigt__p_CZNCSock, _p_CZNCSockTo_p_Csock, 0, 0},  {&_swigt__p_CHTTPSock, _p_CHTTPSockTo_p_Csock, 0, 0},  {&_swigt__p_CWebSock, _p_CWebSockTo_p_Csock, 0, 0},  {&_swigt__p_CIncomingConnection, _p_CIncomingConnectionTo_p_Csock, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_EAcceptType[] = {  {&_swigt__p_EAcceptType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_EChanModeArgs[] = {  {&_swigt__p_EChanModeArgs, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_EModException[] = {  {&_swigt__p_EModException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_EModRet[] = {  {&_swigt__p_EModRet, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_EModes[] = {  {&_swigt__p_EModes, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_EModuleType[] = {  {&_swigt__p_EModuleType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_EType[] = {  {&_swigt__p_EType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_EUserPerms[] = {  {&_swigt__p_EUserPerms, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_EntryMap[] = {  {&_swigt__p_EntryMap, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_EntryMapIterator[] = {  {&_swigt__p_EntryMapIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MCString[] = {  {&_swigt__p_CTemplate, _p_CTemplateTo_p_MCString, 0, 0},  {&_swigt__p_MCString, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MCString__iterator[] = {  {&_swigt__p_MCString__iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MCString_iter[] = {  {&_swigt__p_MCString_iter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ModCmdFunc[] = {  {&_swigt__p_ModCmdFunc, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ModDirList[] = {  {&_swigt__p_ModDirList, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SCString[] = {  {&_swigt__p_SCString, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_String[] = {  {&_swigt__p_String, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SubConfig[] = {  {&_swigt__p_SubConfig, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SubConfigMap[] = {  {&_swigt__p_SubConfigMap, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SubConfigMapIterator[] = {  {&_swigt__p_SubConfigMapIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TSocketManagerT_CZNCSock_t[] = {  {&_swigt__p_CSockManager, _p_CSockManagerTo_p_TSocketManagerT_CZNCSock_t, 0, 0},  {&_swigt__p_TSocketManagerT_CZNCSock_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TrafficStatsMap[] = {  {&_swigt__p_TrafficStatsMap, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TrafficStatsPair[] = {  {&_swigt__p_TrafficStatsPair, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_VCString[] = {  {&_swigt__p_VCString, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_allocator_type[] = {  {&_swigt__p_allocator_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_bool[] = {  {&_swigt__p_bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_const_reference[] = {  {&_swigt__p_const_reference, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_difference_type[] = {  {&_swigt__p_difference_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_double[] = {  {&_swigt__p_double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CPyModule[] = {{&_swigt__p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CPyModule, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CModule[] = {  {&_swigt__p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CModule, 0, 0, 0},  {&_swigt__p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CPyModule, _p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CPyModuleTo_p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CModule, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_CModule_p_CFPTimer__void[] = {  {&_swigt__p_f_p_CModule_p_CFPTimer__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_r_std__ostream__r_std__ostream[] = {  {&_swigt__p_f_r_std__ostream__r_std__ostream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fd_set[] = {  {&_swigt__p_fd_set, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_first_type[] = {  {&_swigt__p_first_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gid_t[] = {  {&_swigt__p_gid_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_in_addr[] = {  {&_swigt__p_in_addr, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_key_type[] = {  {&_swigt__p_key_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_listT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t[] = {  {&_swigt__p_listT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long[] = {  {&_swigt__p_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mapT_CString_CConfigEntry_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CConfigEntry_t_t_t[] = {  {&_swigt__p_mapT_CString_CConfigEntry_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CConfigEntry_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t[] = {  {&_swigt__p_mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mapT_CString_CUser_p_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CUser_p_t_t_t[] = {  {&_swigt__p_mapT_CString_CUser_p_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CUser_p_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mapT_CString_VCString_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_VCString_t_t_t[] = {  {&_swigt__p_mapT_CString_VCString_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_VCString_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mapT_char_unsigned_int_std__lessT_char_t_std__allocatorT_std__pairT_char_const_unsigned_int_t_t_t[] = {  {&_swigt__p_mapT_char_unsigned_int_std__lessT_char_t_std__allocatorT_std__pairT_char_const_unsigned_int_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mapT_unsigned_char_CIRCSock__EChanModeArgs_std__lessT_unsigned_char_t_std__allocatorT_std__pairT_unsigned_char_const_CIRCSock__EChanModeArgs_t_t_t[] = {  {&_swigt__p_mapT_unsigned_char_CIRCSock__EChanModeArgs_std__lessT_unsigned_char_t_std__allocatorT_std__pairT_unsigned_char_const_CIRCSock__EChanModeArgs_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mapT_unsigned_char_CString_std__lessT_unsigned_char_t_std__allocatorT_std__pairT_unsigned_char_const_CString_t_t_t[] = {  {&_swigt__p_mapT_unsigned_char_CString_std__lessT_unsigned_char_t_std__allocatorT_std__pairT_unsigned_char_const_CString_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mapped_type[] = {  {&_swigt__p_mapped_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mode_t[] = {  {&_swigt__p_mode_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ostream[] = {  {&_swigt__p_ostream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_PyObject[] = {  {&_swigt__p_p_PyObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_reference[] = {  {&_swigt__p_reference, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_second_type[] = {  {&_swigt__p_second_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_setT_CModInfo_t[] = {  {&_swigt__p_setT_CModInfo_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_setT_CSocket_p_t__const_iterator[] = {  {&_swigt__p_setT_CSocket_p_t__const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_setT_CString_t[] = {  {&_swigt__p_setT_CString_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_setT_CTimer_p_t__const_iterator[] = {  {&_swigt__p_setT_CTimer_p_t__const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_setT_unsigned_char_t[] = {  {&_swigt__p_setT_unsigned_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_size_type[] = {  {&_swigt__p_size_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sockaddr_in[] = {  {&_swigt__p_sockaddr_in, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sockaddr_storage[] = {  {&_swigt__p_sockaddr_storage, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_socklen_t[] = {  {&_swigt__p_socklen_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ssize_t[] = {  {&_swigt__p_ssize_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stat[] = {  {&_swigt__p_stat, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__allocatorT_CChan_p_t[] = {  {&_swigt__p_std__allocatorT_CChan_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__allocatorT_CIRCNetwork_p_t[] = {  {&_swigt__p_std__allocatorT_CIRCNetwork_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__allocatorT_CSmartPtrT_CWebSubPage_t_t[] = {  {&_swigt__p_std__allocatorT_CSmartPtrT_CWebSubPage_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__allocatorT_CString_t[] = {  {&_swigt__p_std__allocatorT_CString_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__allocatorT_std__pairT_CString_CString_t_t[] = {  {&_swigt__p_std__allocatorT_std__pairT_CString_CString_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__allocatorT_std__pairT_CString_const_CNick_t_t[] = {  {&_swigt__p_std__allocatorT_std__pairT_CString_const_CNick_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__invalid_argument[] = {  {&_swigt__p_std__invalid_argument, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__lessT_CString_t[] = {  {&_swigt__p_std__lessT_CString_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__listT_CString_std__allocatorT_CString_t_t[] = {  {&_swigt__p_std__listT_CString_std__allocatorT_CString_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__listT__Tp__Alloc_t[] = {  {&_swigt__p_std__listT__Tp__Alloc_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t[] = {  {&_swigt__p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_CString_std__pairT_unsigned_long_long_unsigned_long_long_t_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_std__pairT_unsigned_long_long_unsigned_long_long_t_t_t_t[] = {  {&_swigt__p_std__mapT_CString_std__pairT_unsigned_long_long_unsigned_long_long_t_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_std__pairT_unsigned_long_long_unsigned_long_long_t_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_int_short_std__lessT_int_t_std__allocatorT_std__pairT_int_const_short_t_t_t[] = {  {&_swigt__p_std__mapT_int_short_std__lessT_int_t_std__allocatorT_std__pairT_int_const_short_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__pairT_CString_CString_t[] = {  {&_swigt__p_std__pairT_CString_CString_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__pairT_unsigned_long_long_unsigned_long_long_t[] = {  {&_swigt__p_std__pairT_unsigned_long_long_unsigned_long_long_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t[] = {  {&_swigt__p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_CCron_p_std__allocatorT_CCron_p_t_t[] = {  {&_swigt__p_std__vectorT_CCron_p_std__allocatorT_CCron_p_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t[] = {  {&_swigt__p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t[] = {  {&_swigt__p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_Csock_p_std__allocatorT_Csock_p_t_t[] = {  {&_swigt__p_std__vectorT_Csock_p_std__allocatorT_Csock_p_t_t, 0, 0, 0},  {&_swigt__p_CSocketManager, _p_CSocketManagerTo_p_std__vectorT_Csock_p_std__allocatorT_Csock_p_t_t, 0, 0},  {&_swigt__p_CSockManager, 0, 0, 0},  {&_swigt__p_TSocketManagerT_CZNCSock_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT__Tp__Alloc_t[] = {  {&_swigt__p_std__vectorT__Tp__Alloc_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT__Tp_p__Alloc_t[] = {  {&_swigt__p_std__vectorT__Tp_p__Alloc_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t[] = {  {&_swigt__p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_swig__SwigPyIterator[] = {  {&_swigt__p_swig__SwigPyIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_time_t[] = {  {&_swigt__p_time_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_timeval[] = {  {&_swigt__p_timeval, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_u_long[] = {  {&_swigt__p_u_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uid_t[] = {  {&_swigt__p_uid_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_int[] = {  {&_swigt__p_unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_long_long[] = {  {&_swigt__p_unsigned_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_short[] = {  {&_swigt__p_unsigned_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_value_type[] = {  {&_swigt__p_value_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vectorT_CChan_p_std__allocatorT_CChan_p_t_t[] = {  {&_swigt__p_vectorT_CChan_p_std__allocatorT_CChan_p_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vectorT_CClient_p_std__allocatorT_CClient_p_t_t[] = {  {&_swigt__p_vectorT_CClient_p_std__allocatorT_CClient_p_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t[] = {  {&_swigt__p_vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vectorT_CListener_p_std__allocatorT_CListener_p_t_t[] = {  {&_swigt__p_vectorT_CListener_p_std__allocatorT_CListener_p_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vectorT_CServer_p_std__allocatorT_CServer_p_t_t[] = {  {&_swigt__p_vectorT_CServer_p_std__allocatorT_CServer_p_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vectorT_CSmartPtrT_CTemplateTagHandler_t_std__allocatorT_CSmartPtrT_CTemplateTagHandler_t_t_t[] = {  {&_swigt__p_vectorT_CSmartPtrT_CTemplateTagHandler_t_std__allocatorT_CSmartPtrT_CTemplateTagHandler_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t[] = {  {&_swigt__p_vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vectorT_CTemplate_p_std__allocatorT_CTemplate_p_t_t[] = {  {&_swigt__p_vectorT_CTemplate_p_std__allocatorT_CTemplate_p_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_void[] = {  {&_swigt__p_void, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__m_CModule__f_r_q_const__CString__void,
  _swigc__p_CAuthBase,
  _swigc__p_CBufLine,
  _swigc__p_CBuffer,
  _swigc__p_CChan,
  _swigc__p_CClient,
  _swigc__p_CClientAuth,
  _swigc__p_CConfig,
  _swigc__p_CConfigEntry,
  _swigc__p_CConfig__EntryMap__const_iterator,
  _swigc__p_CConfig__SubConfigMap__const_iterator,
  _swigc__p_CConnectQueueTimer,
  _swigc__p_CCron,
  _swigc__p_CDebug,
  _swigc__p_CDir,
  _swigc__p_CException,
  _swigc__p_CExecSock,
  _swigc__p_CFPTimer,
  _swigc__p_CFile,
  _swigc__p_CGetAddrInfo,
  _swigc__p_CHTTPSock,
  _swigc__p_CIRCNetwork,
  _swigc__p_CIRCSock,
  _swigc__p_CIncomingConnection,
  _swigc__p_CListener,
  _swigc__p_CModCommand,
  _swigc__p_CModInfo,
  _swigc__p_CModPython,
  _swigc__p_CModule,
  _swigc__p_CModules,
  _swigc__p_CModulesIter,
  _swigc__p_CModules__const_iterator,
  _swigc__p_CNick,
  _swigc__p_CPyModule,
  _swigc__p_CPyRetString,
  _swigc__p_CPySocket,
  _swigc__p_CPyTimer,
  _swigc__p_CRealListener,
  _swigc__p_CSCharBuffer,
  _swigc__p_CSConnection,
  _swigc__p_CSListener,
  _swigc__p_CSMonitorFD,
  _swigc__p_CSSSLConnection,
  _swigc__p_CSSockAddr,
  _swigc__p_CServer,
  _swigc__p_CSmartPtrT_CAuthBase_t,
  _swigc__p_CSmartPtrT_CTemplateOptions_t,
  _swigc__p_CSmartPtrT_CTemplateTagHandler_t,
  _swigc__p_CSmartPtrT_CWebSession_t,
  _swigc__p_CSmartPtrT_CWebSubPage_t,
  _swigc__p_CSockCommon,
  _swigc__p_CSockManager,
  _swigc__p_CSocket,
  _swigc__p_CSocketManager,
  _swigc__p_CString,
  _swigc__p_CString__EEscape,
  _swigc__p_CTable,
  _swigc__p_CTemplate,
  _swigc__p_CTemplateLoopContext,
  _swigc__p_CTemplateOptions,
  _swigc__p_CTemplateTagHandler,
  _swigc__p_CTimer,
  _swigc__p_CUser,
  _swigc__p_CUtils,
  _swigc__p_CWebSession,
  _swigc__p_CWebSessionMap,
  _swigc__p_CWebSock,
  _swigc__p_CWebSubPage,
  _swigc__p_CZNC,
  _swigc__p_CZNCSock,
  _swigc__p_CZNCTagHandler,
  _swigc__p_Csock,
  _swigc__p_EAcceptType,
  _swigc__p_EChanModeArgs,
  _swigc__p_EModException,
  _swigc__p_EModRet,
  _swigc__p_EModes,
  _swigc__p_EModuleType,
  _swigc__p_EType,
  _swigc__p_EUserPerms,
  _swigc__p_EntryMap,
  _swigc__p_EntryMapIterator,
  _swigc__p_MCString,
  _swigc__p_MCString__iterator,
  _swigc__p_MCString_iter,
  _swigc__p_ModCmdFunc,
  _swigc__p_ModDirList,
  _swigc__p_SCString,
  _swigc__p_String,
  _swigc__p_SubConfig,
  _swigc__p_SubConfigMap,
  _swigc__p_SubConfigMapIterator,
  _swigc__p_TSocketManagerT_CZNCSock_t,
  _swigc__p_TrafficStatsMap,
  _swigc__p_TrafficStatsPair,
  _swigc__p_VCString,
  _swigc__p_allocator_type,
  _swigc__p_bool,
  _swigc__p_char,
  _swigc__p_const_reference,
  _swigc__p_difference_type,
  _swigc__p_double,
  _swigc__p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CModule,
  _swigc__p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CPyModule,
  _swigc__p_f_p_CModule_p_CFPTimer__void,
  _swigc__p_f_r_std__ostream__r_std__ostream,
  _swigc__p_fd_set,
  _swigc__p_first_type,
  _swigc__p_gid_t,
  _swigc__p_in_addr,
  _swigc__p_int,
  _swigc__p_key_type,
  _swigc__p_listT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t,
  _swigc__p_long,
  _swigc__p_mapT_CString_CConfigEntry_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CConfigEntry_t_t_t,
  _swigc__p_mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t,
  _swigc__p_mapT_CString_CUser_p_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CUser_p_t_t_t,
  _swigc__p_mapT_CString_VCString_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_VCString_t_t_t,
  _swigc__p_mapT_char_unsigned_int_std__lessT_char_t_std__allocatorT_std__pairT_char_const_unsigned_int_t_t_t,
  _swigc__p_mapT_unsigned_char_CIRCSock__EChanModeArgs_std__lessT_unsigned_char_t_std__allocatorT_std__pairT_unsigned_char_const_CIRCSock__EChanModeArgs_t_t_t,
  _swigc__p_mapT_unsigned_char_CString_std__lessT_unsigned_char_t_std__allocatorT_std__pairT_unsigned_char_const_CString_t_t_t,
  _swigc__p_mapped_type,
  _swigc__p_mode_t,
  _swigc__p_ostream,
  _swigc__p_p_PyObject,
  _swigc__p_reference,
  _swigc__p_second_type,
  _swigc__p_setT_CModInfo_t,
  _swigc__p_setT_CSocket_p_t__const_iterator,
  _swigc__p_setT_CString_t,
  _swigc__p_setT_CTimer_p_t__const_iterator,
  _swigc__p_setT_unsigned_char_t,
  _swigc__p_size_type,
  _swigc__p_sockaddr_in,
  _swigc__p_sockaddr_storage,
  _swigc__p_socklen_t,
  _swigc__p_ssize_t,
  _swigc__p_stat,
  _swigc__p_std__allocatorT_CChan_p_t,
  _swigc__p_std__allocatorT_CIRCNetwork_p_t,
  _swigc__p_std__allocatorT_CSmartPtrT_CWebSubPage_t_t,
  _swigc__p_std__allocatorT_CString_t,
  _swigc__p_std__allocatorT_std__pairT_CString_CString_t_t,
  _swigc__p_std__allocatorT_std__pairT_CString_const_CNick_t_t,
  _swigc__p_std__invalid_argument,
  _swigc__p_std__lessT_CString_t,
  _swigc__p_std__listT_CString_std__allocatorT_CString_t_t,
  _swigc__p_std__listT__Tp__Alloc_t,
  _swigc__p_std__mapT_CString_CNick_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_CNick_t_t_t,
  _swigc__p_std__mapT_CString_std__pairT_unsigned_long_long_unsigned_long_long_t_std__lessT_CString_t_std__allocatorT_std__pairT_CString_const_std__pairT_unsigned_long_long_unsigned_long_long_t_t_t_t,
  _swigc__p_std__mapT_int_short_std__lessT_int_t_std__allocatorT_std__pairT_int_const_short_t_t_t,
  _swigc__p_std__pairT_CString_CString_t,
  _swigc__p_std__pairT_unsigned_long_long_unsigned_long_long_t,
  _swigc__p_std__vectorT_CChan_p_std__allocatorT_CChan_p_t_t,
  _swigc__p_std__vectorT_CCron_p_std__allocatorT_CCron_p_t_t,
  _swigc__p_std__vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t,
  _swigc__p_std__vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t,
  _swigc__p_std__vectorT_Csock_p_std__allocatorT_Csock_p_t_t,
  _swigc__p_std__vectorT__Tp__Alloc_t,
  _swigc__p_std__vectorT__Tp_p__Alloc_t,
  _swigc__p_std__vectorT_std__pairT_CString_CString_t_std__allocatorT_std__pairT_CString_CString_t_t_t,
  _swigc__p_swig__SwigPyIterator,
  _swigc__p_time_t,
  _swigc__p_timeval,
  _swigc__p_u_long,
  _swigc__p_uid_t,
  _swigc__p_unsigned_int,
  _swigc__p_unsigned_long_long,
  _swigc__p_unsigned_short,
  _swigc__p_value_type,
  _swigc__p_vectorT_CChan_p_std__allocatorT_CChan_p_t_t,
  _swigc__p_vectorT_CClient_p_std__allocatorT_CClient_p_t_t,
  _swigc__p_vectorT_CIRCNetwork_p_std__allocatorT_CIRCNetwork_p_t_t,
  _swigc__p_vectorT_CListener_p_std__allocatorT_CListener_p_t_t,
  _swigc__p_vectorT_CServer_p_std__allocatorT_CServer_p_t_t,
  _swigc__p_vectorT_CSmartPtrT_CTemplateTagHandler_t_std__allocatorT_CSmartPtrT_CTemplateTagHandler_t_t_t,
  _swigc__p_vectorT_CSmartPtrT_CWebSubPage_t_std__allocatorT_CSmartPtrT_CWebSubPage_t_t_t,
  _swigc__p_vectorT_CTemplate_p_std__allocatorT_CTemplate_p_t_t,
  _swigc__p_void,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic 
 * memory is used. Also, since swig_type_info structures store pointers to 
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization. 
 * The idea is that swig generates all the structures that are needed. 
 * The runtime then collects these partially filled structures. 
 * The SWIG_InitializeModule function takes these initial arrays out of 
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned staticly to an initial 
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it 
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded. 
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the 
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int found, init;
  
  clientdata = clientdata;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
    module_head = &swig_module;
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    found=0;
    iter=module_head;
    do {
      if (iter==&swig_module) {
        found=1;
        break;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* if the is found in the list, then all is done and we may leave */
    if (found) return;
    /* otherwise we must add out module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpeters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
  
  /* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
  
  /* -----------------------------------------------------------------------------
   * global variable support code.
   * ----------------------------------------------------------------------------- */
  
  typedef struct swig_globalvar {
    char       *name;                  /* Name of global variable */
    PyObject *(*get_attr)(void);       /* Return the current value */
    int       (*set_attr)(PyObject *); /* Set the value */
    struct swig_globalvar *next;
  } swig_globalvar;
  
  typedef struct swig_varlinkobject {
    PyObject_HEAD
    swig_globalvar *vars;
  } swig_varlinkobject;
  
  SWIGINTERN PyObject *
  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {
#if PY_VERSION_HEX >= 0x03000000
    return PyUnicode_InternFromString("<Swig global variables>");
#else
    return PyString_FromString("<Swig global variables>");
#endif
  }
  
  SWIGINTERN PyObject *
  swig_varlink_str(swig_varlinkobject *v) {
#if PY_VERSION_HEX >= 0x03000000
    PyObject *str = PyUnicode_InternFromString("(");
    PyObject *tail;
    PyObject *joined;
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      tail = PyUnicode_FromString(var->name);
      joined = PyUnicode_Concat(str, tail);
      Py_DecRef(str);
      Py_DecRef(tail);
      str = joined;
      if (var->next) {
        tail = PyUnicode_InternFromString(", ");
        joined = PyUnicode_Concat(str, tail);
        Py_DecRef(str);
        Py_DecRef(tail);
        str = joined;
      }
    }
    tail = PyUnicode_InternFromString(")");
    joined = PyUnicode_Concat(str, tail);
    Py_DecRef(str);
    Py_DecRef(tail);
    str = joined;
#else
    PyObject *str = PyString_FromString("(");
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      PyString_ConcatAndDel(&str,PyString_FromString(var->name));
      if (var->next) PyString_ConcatAndDel(&str,PyString_FromString(", "));
    }
    PyString_ConcatAndDel(&str,PyString_FromString(")"));
#endif
    return str;
  }
  
  SWIGINTERN int
  swig_varlink_print(swig_varlinkobject *v, FILE *fp, int SWIGUNUSEDPARM(flags)) {
    char *tmp;
    PyObject *str = swig_varlink_str(v);
    fprintf(fp,"Swig global variables ");
    fprintf(fp,"%s\n", tmp = SWIG_Python_str_AsChar(str));
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(str);
    return 0;
  }
  
  SWIGINTERN void
  swig_varlink_dealloc(swig_varlinkobject *v) {
    swig_globalvar *var = v->vars;
    while (var) {
      swig_globalvar *n = var->next;
      free(var->name);
      free(var);
      var = n;
    }
  }
  
  SWIGINTERN PyObject *
  swig_varlink_getattr(swig_varlinkobject *v, char *n) {
    PyObject *res = NULL;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->get_attr)();
        break;
      }
      var = var->next;
    }
    if (res == NULL && !PyErr_Occurred()) {
      PyErr_SetString(PyExc_NameError,"Unknown C global variable");
    }
    return res;
  }
  
  SWIGINTERN int
  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
    int res = 1;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->set_attr)(p);
        break;
      }
      var = var->next;
    }
    if (res == 1 && !PyErr_Occurred()) {
      PyErr_SetString(PyExc_NameError,"Unknown C global variable");
    }
    return res;
  }
  
  SWIGINTERN PyTypeObject*
  swig_varlink_type(void) {
    static char varlink__doc__[] = "Swig var link object";
    static PyTypeObject varlink_type;
    static int type_init = 0;
    if (!type_init) {
      const PyTypeObject tmp = {
        /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX >= 0x03000000
        PyVarObject_HEAD_INIT(NULL, 0)
#else
        PyObject_HEAD_INIT(NULL)
        0,                                  /* ob_size */
#endif
        (char *)"swigvarlink",              /* tp_name */
        sizeof(swig_varlinkobject),         /* tp_basicsize */
        0,                                  /* tp_itemsize */
        (destructor) swig_varlink_dealloc,  /* tp_dealloc */
        (printfunc) swig_varlink_print,     /* tp_print */
        (getattrfunc) swig_varlink_getattr, /* tp_getattr */
        (setattrfunc) swig_varlink_setattr, /* tp_setattr */
        0,                                  /* tp_compare */
        (reprfunc) swig_varlink_repr,       /* tp_repr */
        0,                                  /* tp_as_number */
        0,                                  /* tp_as_sequence */
        0,                                  /* tp_as_mapping */
        0,                                  /* tp_hash */
        0,                                  /* tp_call */
        (reprfunc) swig_varlink_str,        /* tp_str */
        0,                                  /* tp_getattro */
        0,                                  /* tp_setattro */
        0,                                  /* tp_as_buffer */
        0,                                  /* tp_flags */
        varlink__doc__,                     /* tp_doc */
        0,                                  /* tp_traverse */
        0,                                  /* tp_clear */
        0,                                  /* tp_richcompare */
        0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
        0,                                  /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
        0,                                  /* tp_version */
#endif
#ifdef COUNT_ALLOCS
        0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
      varlink_type = tmp;
      type_init = 1;
#if PY_VERSION_HEX < 0x02020000
      varlink_type.ob_type = &PyType_Type;
#else
      if (PyType_Ready(&varlink_type) < 0)
      return NULL;
#endif
    }
    return &varlink_type;
  }
  
  /* Create a variable linking object for use later */
  SWIGINTERN PyObject *
  SWIG_Python_newvarlink(void) {
    swig_varlinkobject *result = PyObject_NEW(swig_varlinkobject, swig_varlink_type());
    if (result) {
      result->vars = 0;
    }
    return ((PyObject*) result);
  }
  
  SWIGINTERN void 
  SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
    swig_varlinkobject *v = (swig_varlinkobject *) p;
    swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
    if (gv) {
      size_t size = strlen(name)+1;
      gv->name = (char *)malloc(size);
      if (gv->name) {
        strncpy(gv->name,name,size);
        gv->get_attr = get_attr;
        gv->set_attr = set_attr;
        gv->next = v->vars;
      }
    }
    v->vars = gv;
  }
  
  SWIGINTERN PyObject *
  SWIG_globals(void) {
    static PyObject *_SWIG_globals = 0; 
    if (!_SWIG_globals) _SWIG_globals = SWIG_newvarlink();  
    return _SWIG_globals;
  }
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  SWIGINTERN void
  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
    PyObject *obj = 0;
    size_t i;
    for (i = 0; constants[i].type; ++i) {
      switch(constants[i].type) {
      case SWIG_PY_POINTER:
        obj = SWIG_InternalNewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_PY_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        PyDict_SetItemString(d, constants[i].name, obj);
        Py_DECREF(obj);
      }
    }
  }
  
  /* -----------------------------------------------------------------------------*/
  /* Fix SwigMethods to carry the callback ptrs when needed */
  /* -----------------------------------------------------------------------------*/
  
  SWIGINTERN void
  SWIG_Python_FixMethods(PyMethodDef *methods,
    swig_const_info *const_table,
    swig_type_info **types,
    swig_type_info **types_initial) {
    size_t i;
    for (i = 0; methods[i].ml_name; ++i) {
      const char *c = methods[i].ml_doc;
      if (c && (c = strstr(c, "swig_ptr: "))) {
        int j;
        swig_const_info *ci = 0;
        const char *name = c + 10;
        for (j = 0; const_table[j].type; ++j) {
          if (strncmp(const_table[j].name, name, 
              strlen(const_table[j].name)) == 0) {
            ci = &(const_table[j]);
            break;
          }
        }
        if (ci) {
          void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
          if (ptr) {
            size_t shift = (ci->ptype) - types;
            swig_type_info *ty = types_initial[shift];
            size_t ldoc = (c - methods[i].ml_doc);
            size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
            char *ndoc = (char*)malloc(ldoc + lptr + 10);
            if (ndoc) {
              char *buff = ndoc;
              strncpy(buff, methods[i].ml_doc, ldoc);
              buff += ldoc;
              strncpy(buff, "swig_ptr: ", 10);
              buff += 10;
              SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
              methods[i].ml_doc = ndoc;
            }
          }
        }
      }
    }
  } 
  
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif

SWIGEXPORT 
#if PY_VERSION_HEX >= 0x03000000
PyObject*
#else
void
#endif
SWIG_init(void) {
  PyObject *m, *d, *md;
#if PY_VERSION_HEX >= 0x03000000
  static struct PyModuleDef SWIG_module = {
# if PY_VERSION_HEX >= 0x03020000
    PyModuleDef_HEAD_INIT,
# else
    {
      PyObject_HEAD_INIT(NULL)
      NULL, /* m_init */
      0,    /* m_index */
      NULL, /* m_copy */
    },
# endif
    (char *) SWIG_name,
    NULL,
    -1,
    SwigMethods,
    NULL,
    NULL,
    NULL,
    NULL
  };
#endif
  
#if defined(SWIGPYTHON_BUILTIN)
  static SwigPyClientData SwigPyObject_clientdata = {
    0, 0, 0, 0, 0, 0, 0
  };
  static PyGetSetDef this_getset_def = {
    (char *)"this", &SwigPyBuiltin_ThisClosure, NULL, NULL, NULL
  };
  static SwigPyGetSet thisown_getset_closure = {
    (PyCFunction) SwigPyObject_own,
    (PyCFunction) SwigPyObject_own
  };
  static PyGetSetDef thisown_getset_def = {
    (char *)"thisown", SwigPyBuiltin_GetterClosure, SwigPyBuiltin_SetterClosure, NULL, &thisown_getset_closure
  };
  PyObject *metatype_args;
  PyTypeObject *builtin_pytype;
  int builtin_base_count;
  swig_type_info *builtin_basetype;
  PyObject *tuple;
  PyGetSetDescrObject *static_getset;
  PyTypeObject *metatype;
  SwigPyClientData *cd;
  PyObject *public_interface, *public_symbol;
  PyObject *this_descr;
  PyObject *thisown_descr;
  int i;
  
  (void)builtin_pytype;
  (void)builtin_base_count;
  (void)builtin_basetype;
  (void)tuple;
  (void)static_getset;
  
  /* metatype is used to implement static member variables. */
  metatype_args = Py_BuildValue("(s(O){})", "SwigPyObjectType", &PyType_Type);
  assert(metatype_args);
  metatype = (PyTypeObject *) PyType_Type.tp_call((PyObject *) &PyType_Type, metatype_args, NULL);
  assert(metatype);
  Py_DECREF(metatype_args);
  metatype->tp_setattro = (setattrofunc) &SwigPyObjectType_setattro;
  assert(PyType_Ready(metatype) >= 0);
#endif
  
  /* Fix SwigMethods to carry the callback ptrs when needed */
  SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
  
#if PY_VERSION_HEX >= 0x03000000
  m = PyModule_Create(&SWIG_module);
#else
  m = Py_InitModule((char *) SWIG_name, SwigMethods);
#endif
  md = d = PyModule_GetDict(m);
  
  SWIG_InitializeModule(0);
  
#ifdef SWIGPYTHON_BUILTIN
  SwigPyObject_stype = SWIG_MangledTypeQuery("_p_SwigPyObject");
  assert(SwigPyObject_stype);
  cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
  if (!cd) {
    SwigPyObject_stype->clientdata = &SwigPyObject_clientdata;
    SwigPyObject_clientdata.pytype = SwigPyObject_TypeOnce();
  } else if (SwigPyObject_TypeOnce()->tp_basicsize != cd->pytype->tp_basicsize) {
    PyErr_SetString(PyExc_RuntimeError, "Import error: attempted to load two incompatible swig-generated modules.");
# if PY_VERSION_HEX >= 0x03000000
    return NULL;
# else
    return;
# endif
  }
  
  /* All objects have a 'this' attribute */
  this_descr = PyDescr_NewGetSet(SwigPyObject_type(), &this_getset_def);
  (void)this_descr;
  
  /* All objects have a 'thisown' attribute */
  thisown_descr = PyDescr_NewGetSet(SwigPyObject_type(), &thisown_getset_def);
  (void)thisown_descr;
  
  public_interface = PyList_New(0);
  public_symbol = 0;
  (void)public_symbol;
  
  PyDict_SetItemString(md, "__all__", public_interface);
  Py_DECREF(public_interface);
  for (i = 0; SwigMethods[i].ml_name != NULL; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, SwigMethods[i].ml_name);
  for (i = 0; swig_const_table[i].name != 0; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, swig_const_table[i].name);
#endif
  
  SWIG_InstallConstants(d,swig_const_table);
  
  PyDict_SetItemString(md,(char*)"cvar", SWIG_globals());
  SWIG_addvarlink(SWIG_globals(),(char*)"g_HexDigits",Swig_var_g_HexDigits_get, Swig_var_g_HexDigits_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"CUtils_sDefaultHash",Swig_var_CUtils_sDefaultHash_get, Swig_var_CUtils_sDefaultHash_set);
  SWIG_Python_SetConstant(d, "CException_EX_Shutdown",SWIG_From_int(static_cast< int >(CException::EX_Shutdown)));
  SWIG_Python_SetConstant(d, "CException_EX_Restart",SWIG_From_int(static_cast< int >(CException::EX_Restart)));
  SWIG_Python_SetConstant(d, "CS_INVALID_SOCK",SWIG_From_int(static_cast< int >(-1)));
  SWIG_Python_SetConstant(d, "CSSockAddr_RAF_ANY",SWIG_From_int(static_cast< int >(CSSockAddr::RAF_ANY)));
  SWIG_Python_SetConstant(d, "CSSockAddr_RAF_INET",SWIG_From_int(static_cast< int >(CSSockAddr::RAF_INET)));
  SWIG_addvarlink(SWIG_globals(),(char*)"CS_BLOCKSIZE",Swig_var_CS_BLOCKSIZE_get, Swig_var_CS_BLOCKSIZE_set);
  SWIG_Python_SetConstant(d, "Csock_OUTBOUND",SWIG_From_int(static_cast< int >(Csock::OUTBOUND)));
  SWIG_Python_SetConstant(d, "Csock_LISTENER",SWIG_From_int(static_cast< int >(Csock::LISTENER)));
  SWIG_Python_SetConstant(d, "Csock_INBOUND",SWIG_From_int(static_cast< int >(Csock::INBOUND)));
  SWIG_Python_SetConstant(d, "Csock_READ_EOF",SWIG_From_int(static_cast< int >(Csock::READ_EOF)));
  SWIG_Python_SetConstant(d, "Csock_READ_ERR",SWIG_From_int(static_cast< int >(Csock::READ_ERR)));
  SWIG_Python_SetConstant(d, "Csock_READ_EAGAIN",SWIG_From_int(static_cast< int >(Csock::READ_EAGAIN)));
  SWIG_Python_SetConstant(d, "Csock_READ_CONNREFUSED",SWIG_From_int(static_cast< int >(Csock::READ_CONNREFUSED)));
  SWIG_Python_SetConstant(d, "Csock_READ_TIMEDOUT",SWIG_From_int(static_cast< int >(Csock::READ_TIMEDOUT)));
  SWIG_Python_SetConstant(d, "Csock_SEL_OK",SWIG_From_int(static_cast< int >(Csock::SEL_OK)));
  SWIG_Python_SetConstant(d, "Csock_SEL_TIMEOUT",SWIG_From_int(static_cast< int >(Csock::SEL_TIMEOUT)));
  SWIG_Python_SetConstant(d, "Csock_SEL_EAGAIN",SWIG_From_int(static_cast< int >(Csock::SEL_EAGAIN)));
  SWIG_Python_SetConstant(d, "Csock_SEL_ERR",SWIG_From_int(static_cast< int >(Csock::SEL_ERR)));
  SWIG_Python_SetConstant(d, "Csock_SSL23",SWIG_From_int(static_cast< int >(Csock::SSL23)));
  SWIG_Python_SetConstant(d, "Csock_SSL2",SWIG_From_int(static_cast< int >(Csock::SSL2)));
  SWIG_Python_SetConstant(d, "Csock_SSL3",SWIG_From_int(static_cast< int >(Csock::SSL3)));
  SWIG_Python_SetConstant(d, "Csock_TLS1",SWIG_From_int(static_cast< int >(Csock::TLS1)));
  SWIG_Python_SetConstant(d, "Csock_CST_START",SWIG_From_int(static_cast< int >(Csock::CST_START)));
  SWIG_Python_SetConstant(d, "Csock_CST_DNS",SWIG_From_int(static_cast< int >(Csock::CST_DNS)));
  SWIG_Python_SetConstant(d, "Csock_CST_BINDVHOST",SWIG_From_int(static_cast< int >(Csock::CST_BINDVHOST)));
  SWIG_Python_SetConstant(d, "Csock_CST_DESTDNS",SWIG_From_int(static_cast< int >(Csock::CST_DESTDNS)));
  SWIG_Python_SetConstant(d, "Csock_CST_CONNECT",SWIG_From_int(static_cast< int >(Csock::CST_CONNECT)));
  SWIG_Python_SetConstant(d, "Csock_CST_CONNECTSSL",SWIG_From_int(static_cast< int >(Csock::CST_CONNECTSSL)));
  SWIG_Python_SetConstant(d, "Csock_CST_OK",SWIG_From_int(static_cast< int >(Csock::CST_OK)));
  SWIG_Python_SetConstant(d, "Csock_CLT_DONT",SWIG_From_int(static_cast< int >(Csock::CLT_DONT)));
  SWIG_Python_SetConstant(d, "Csock_CLT_NOW",SWIG_From_int(static_cast< int >(Csock::CLT_NOW)));
  SWIG_Python_SetConstant(d, "Csock_CLT_AFTERWRITE",SWIG_From_int(static_cast< int >(Csock::CLT_AFTERWRITE)));
  SWIG_Python_SetConstant(d, "Csock_CLT_DEREFERENCE",SWIG_From_int(static_cast< int >(Csock::CLT_DEREFERENCE)));
  SWIG_Python_SetConstant(d, "Csock_TMO_READ",SWIG_From_int(static_cast< int >(Csock::TMO_READ)));
  SWIG_Python_SetConstant(d, "Csock_TMO_WRITE",SWIG_From_int(static_cast< int >(Csock::TMO_WRITE)));
  SWIG_Python_SetConstant(d, "Csock_TMO_ACCEPT",SWIG_From_int(static_cast< int >(Csock::TMO_ACCEPT)));
  SWIG_Python_SetConstant(d, "Csock_TMO_ALL",SWIG_From_int(static_cast< int >(Csock::TMO_ALL)));
  SWIG_Python_SetConstant(d, "Csock_DNS_VHOST",SWIG_From_int(static_cast< int >(Csock::DNS_VHOST)));
  SWIG_Python_SetConstant(d, "Csock_DNS_DEST",SWIG_From_int(static_cast< int >(Csock::DNS_DEST)));
  SWIG_Python_SetConstant(d, "CSocketManager_SUCCESS",SWIG_From_int(static_cast< int >(CSocketManager::SUCCESS)));
  SWIG_Python_SetConstant(d, "CSocketManager_SELECT_ERROR",SWIG_From_int(static_cast< int >(CSocketManager::SELECT_ERROR)));
  SWIG_Python_SetConstant(d, "CSocketManager_SELECT_TIMEOUT",SWIG_From_int(static_cast< int >(CSocketManager::SELECT_TIMEOUT)));
  SWIG_Python_SetConstant(d, "CSocketManager_SELECT_TRYAGAIN",SWIG_From_int(static_cast< int >(CSocketManager::SELECT_TRYAGAIN)));
  SWIG_Python_SetConstant(d, "CSocketManager_ECT_Read",SWIG_From_int(static_cast< int >(CSocketManager::ECT_Read)));
  SWIG_Python_SetConstant(d, "CSocketManager_ECT_Write",SWIG_From_int(static_cast< int >(CSocketManager::ECT_Write)));
  SWIG_Python_SetConstant(d, "ADDR_IPV4ONLY",SWIG_From_int(static_cast< int >(ADDR_IPV4ONLY)));
  SWIG_Python_SetConstant(d, "ADDR_IPV6ONLY",SWIG_From_int(static_cast< int >(ADDR_IPV6ONLY)));
  SWIG_Python_SetConstant(d, "ADDR_ALL",SWIG_From_int(static_cast< int >(ADDR_ALL)));
  SWIG_Python_SetConstant(d, "CFile_FT_REGULAR",SWIG_From_int(static_cast< int >(CFile::FT_REGULAR)));
  SWIG_Python_SetConstant(d, "CFile_FT_DIRECTORY",SWIG_From_int(static_cast< int >(CFile::FT_DIRECTORY)));
  SWIG_Python_SetConstant(d, "CFile_FT_CHARACTER",SWIG_From_int(static_cast< int >(CFile::FT_CHARACTER)));
  SWIG_Python_SetConstant(d, "CFile_FT_BLOCK",SWIG_From_int(static_cast< int >(CFile::FT_BLOCK)));
  SWIG_Python_SetConstant(d, "CFile_FT_FIFO",SWIG_From_int(static_cast< int >(CFile::FT_FIFO)));
  SWIG_Python_SetConstant(d, "CFile_FT_LINK",SWIG_From_int(static_cast< int >(CFile::FT_LINK)));
  SWIG_Python_SetConstant(d, "CFile_FT_SOCK",SWIG_From_int(static_cast< int >(CFile::FT_SOCK)));
  SWIG_Python_SetConstant(d, "CFile_FA_Name",SWIG_From_int(static_cast< int >(CFile::FA_Name)));
  SWIG_Python_SetConstant(d, "CFile_FA_Size",SWIG_From_int(static_cast< int >(CFile::FA_Size)));
  SWIG_Python_SetConstant(d, "CFile_FA_ATime",SWIG_From_int(static_cast< int >(CFile::FA_ATime)));
  SWIG_Python_SetConstant(d, "CFile_FA_MTime",SWIG_From_int(static_cast< int >(CFile::FA_MTime)));
  SWIG_Python_SetConstant(d, "CFile_FA_CTime",SWIG_From_int(static_cast< int >(CFile::FA_CTime)));
  SWIG_Python_SetConstant(d, "CFile_FA_UID",SWIG_From_int(static_cast< int >(CFile::FA_UID)));
  SWIG_Python_SetConstant(d, "CModInfo_GlobalModule",SWIG_From_int(static_cast< int >(CModInfo::GlobalModule)));
  SWIG_Python_SetConstant(d, "CModInfo_UserModule",SWIG_From_int(static_cast< int >(CModInfo::UserModule)));
  SWIG_Python_SetConstant(d, "CModInfo_NetworkModule",SWIG_From_int(static_cast< int >(CModInfo::NetworkModule)));
  SWIG_Python_SetConstant(d, "CModule_CONTINUE",SWIG_From_int(static_cast< int >(CModule::CONTINUE)));
  SWIG_Python_SetConstant(d, "CModule_HALT",SWIG_From_int(static_cast< int >(CModule::HALT)));
  SWIG_Python_SetConstant(d, "CModule_HALTMODS",SWIG_From_int(static_cast< int >(CModule::HALTMODS)));
  SWIG_Python_SetConstant(d, "CModule_HALTCORE",SWIG_From_int(static_cast< int >(CModule::HALTCORE)));
  SWIG_Python_SetConstant(d, "CModule_UNLOAD",SWIG_From_int(static_cast< int >(CModule::UNLOAD)));
  SWIG_Python_SetConstant(d, "CChan_Voice",SWIG_From_char(static_cast< char >(CChan::Voice)));
  SWIG_Python_SetConstant(d, "CChan_HalfOp",SWIG_From_char(static_cast< char >(CChan::HalfOp)));
  SWIG_Python_SetConstant(d, "CChan_Op",SWIG_From_char(static_cast< char >(CChan::Op)));
  SWIG_Python_SetConstant(d, "CChan_Admin",SWIG_From_char(static_cast< char >(CChan::Admin)));
  SWIG_Python_SetConstant(d, "CChan_Owner",SWIG_From_char(static_cast< char >(CChan::Owner)));
  SWIG_Python_SetConstant(d, "CChan_M_Private",SWIG_From_char(static_cast< char >(CChan::M_Private)));
  SWIG_Python_SetConstant(d, "CChan_M_Secret",SWIG_From_char(static_cast< char >(CChan::M_Secret)));
  SWIG_Python_SetConstant(d, "CChan_M_Moderated",SWIG_From_char(static_cast< char >(CChan::M_Moderated)));
  SWIG_Python_SetConstant(d, "CChan_M_InviteOnly",SWIG_From_char(static_cast< char >(CChan::M_InviteOnly)));
  SWIG_Python_SetConstant(d, "CChan_M_NoMessages",SWIG_From_char(static_cast< char >(CChan::M_NoMessages)));
  SWIG_Python_SetConstant(d, "CChan_M_OpTopic",SWIG_From_char(static_cast< char >(CChan::M_OpTopic)));
  SWIG_Python_SetConstant(d, "CChan_M_Limit",SWIG_From_char(static_cast< char >(CChan::M_Limit)));
  SWIG_Python_SetConstant(d, "CChan_M_Key",SWIG_From_char(static_cast< char >(CChan::M_Key)));
  SWIG_Python_SetConstant(d, "CChan_M_Op",SWIG_From_char(static_cast< char >(CChan::M_Op)));
  SWIG_Python_SetConstant(d, "CChan_M_Voice",SWIG_From_char(static_cast< char >(CChan::M_Voice)));
  SWIG_Python_SetConstant(d, "CChan_M_Ban",SWIG_From_char(static_cast< char >(CChan::M_Ban)));
  SWIG_Python_SetConstant(d, "CChan_M_Except",SWIG_From_char(static_cast< char >(CChan::M_Except)));
  SWIG_Python_SetConstant(d, "CUser_HASH_NONE",SWIG_From_int(static_cast< int >(CUser::HASH_NONE)));
  SWIG_Python_SetConstant(d, "CUser_HASH_MD5",SWIG_From_int(static_cast< int >(CUser::HASH_MD5)));
  SWIG_Python_SetConstant(d, "CUser_HASH_SHA256",SWIG_From_int(static_cast< int >(CUser::HASH_SHA256)));
  SWIG_Python_SetConstant(d, "CUser_HASH_DEFAULT",SWIG_From_int(static_cast< int >(CUser::HASH_DEFAULT)));
  SWIG_Python_SetConstant(d, "CIRCSock_ListArg",SWIG_From_int(static_cast< int >(CIRCSock::ListArg)));
  SWIG_Python_SetConstant(d, "CIRCSock_HasArg",SWIG_From_int(static_cast< int >(CIRCSock::HasArg)));
  SWIG_Python_SetConstant(d, "CIRCSock_ArgWhenSet",SWIG_From_int(static_cast< int >(CIRCSock::ArgWhenSet)));
  SWIG_Python_SetConstant(d, "CIRCSock_NoArg",SWIG_From_int(static_cast< int >(CIRCSock::NoArg)));
  SWIG_Python_SetConstant(d, "CListener_ACCEPT_IRC",SWIG_From_int(static_cast< int >(CListener::ACCEPT_IRC)));
  SWIG_Python_SetConstant(d, "CListener_ACCEPT_HTTP",SWIG_From_int(static_cast< int >(CListener::ACCEPT_HTTP)));
  SWIG_Python_SetConstant(d, "CListener_ACCEPT_ALL",SWIG_From_int(static_cast< int >(CListener::ACCEPT_ALL)));
  SWIG_Python_SetConstant(d, "CWebSubPage_F_ADMIN",SWIG_From_int(static_cast< int >(CWebSubPage::F_ADMIN)));
  SWIG_Python_SetConstant(d, "CWebSock_PAGE_NOTFOUND",SWIG_From_int(static_cast< int >(CWebSock::PAGE_NOTFOUND)));
  SWIG_Python_SetConstant(d, "CWebSock_PAGE_PRINT",SWIG_From_int(static_cast< int >(CWebSock::PAGE_PRINT)));
  SWIG_Python_SetConstant(d, "CWebSock_PAGE_DEFERRED",SWIG_From_int(static_cast< int >(CWebSock::PAGE_DEFERRED)));
  SWIG_Python_SetConstant(d, "CWebSock_PAGE_DONE",SWIG_From_int(static_cast< int >(CWebSock::PAGE_DONE)));
  SWIG_Python_SetConstant(d, "CZNC_ECONFIG_NOTHING",SWIG_From_int(static_cast< int >(CZNC::ECONFIG_NOTHING)));
  SWIG_Python_SetConstant(d, "CZNC_ECONFIG_NEED_REHASH",SWIG_From_int(static_cast< int >(CZNC::ECONFIG_NEED_REHASH)));
  SWIG_Python_SetConstant(d, "CZNC_ECONFIG_NEED_WRITE",SWIG_From_int(static_cast< int >(CZNC::ECONFIG_NEED_WRITE)));
#if PY_VERSION_HEX >= 0x03000000
  return m;
#else
  return;
#endif
}

